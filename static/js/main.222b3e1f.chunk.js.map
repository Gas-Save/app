{"version":3,"sources":["logoGrey.svg","utils/web3_handler.js","contexts/reducer.js","store.js","GlobalStyles.js","utils/web3_transaction_maker.js","pages/Stake/Stake.js","pages/Station/components/Card.js","pages/Station/Station.js","pages/Deployer/Deployer.js","pages/WalletConnectPage/config/assets/walletconnect-logo.png","pages/WalletConnectPage/constants/chains.ts","pages/WalletConnectPage/constants/default.ts","pages/WalletConnectPage/helpers/utilities.ts","pages/WalletConnectPage/helpers/api.ts","pages/WalletConnectPage/helpers/local.ts","pages/WalletConnectPage/controllers/wallet.ts","pages/WalletConnectPage/controllers/store.ts","pages/WalletConnectPage/controllers/index.ts","pages/WalletConnectPage/engines/ethereum.ts","pages/WalletConnectPage/engines/index.ts","pages/WalletConnectPage/config/index.ts","pages/WalletConnectPage/styles.ts","pages/WalletConnectPage/components/Loader.tsx","pages/WalletConnectPage/components/Button.tsx","pages/WalletConnectPage/components/Card.tsx","pages/WalletConnectPage/components/Input.tsx","pages/WalletConnectPage/components/Blockie.tsx","pages/WalletConnectPage/components/Header.tsx","pages/WalletConnectPage/components/Column.tsx","pages/WalletConnectPage/components/PeerMeta.tsx","pages/WalletConnectPage/components/RequestDisplay.tsx","pages/WalletConnectPage/components/RequestButton.tsx","pages/WalletConnectPage/components/ClickOutside.tsx","pages/WalletConnectPage/components/Dropdown.tsx","pages/WalletConnectPage/components/AccountDetails.tsx","pages/WalletConnectPage/components/QRCodeScanner.tsx","pages/WalletConnectPage/WalletConnectPage.tsx","pages/Saver/Saver.js","pages/Gnosis/Gnosis.js","pages/Home/Home.js","pages/Mint/Mint.js","pages/Claim/components/Card.js","pages/Claim/Claim.js","pages/Litepaper/Litepaper.js","components/appbar.js","App.js","index.tsx","logo.svg"],"names":["module","exports","__webpack_require__","p","provider","account","web3Modal","Reducer","state","action","type","Object","objectSpread","web3","payload","web3_caller","connected","deployedAddress","hasDeployedContract","chainId","initialState","error","posts","Context","createContext","Store","_ref","children","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","react_default","a","createElement","Provider","value","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","loadWeb3","_loadWeb","apply","this","arguments","_callee","regenerator_default","wrap","_context","prev","next","Web3Modal","cacheProvider","connect","sent","Web3","abrupt","stop","getAccount","_x","_getAccount","_callee2","provided_web3","_context2","eth","getAccounts","_callee3","_context3","clearCachedProvider","requestAccounts","_callee4","_context4","_callee5","_web3","_context5","getChainId","getWeb3Caller","providers","HttpProvider","GlobalStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","background","palette","primary","dark","secondary","light","appBarShift","marginLeft","width","concat","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","defineProperty","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","toolbarButtons","formControl","margin","minWidth","color","selectEmpty","marginTop","headerPaper","paperContainer","backgroundImage","rootPage","paper","textAlign","text","textField","fontSize","& > span","maxWidth","align","marginBottom","contractAddresses","require","infoSwal","title","Swal","fire","icon","timer","showConfirmButton","position","txnSwal","utils_web3_transaction_maker_getAccount","initDeployerContract","_x2","_x3","_initDeployerContract","contract_json","contact_abi","contract_address","contract","Contract","initFactoryContract","_x4","_x5","_initFactoryContract","initGnosisFactoryContract","_x6","_x7","_initGnosisFactoryContract","initBeaconContract","_x8","_x9","_initBeaconContract","initCoreContract","_x10","_x11","_initCoreContract","_callee6","_context6","initGSVETokenContract","_x12","_x13","_initGSVETokenContract","_callee7","_context7","initGasTokenContract","_x14","_x15","_x16","_initGasTokenContract","_callee8","gastoken","_context8","initWrapperContract","_x17","_x18","_initWrapperContract","_callee9","wrapperAddress","_context9","approveGSVE","_x19","_x20","_x21","_approveGSVE","_callee10","numTokens","allowance","_context10","methods","call","utils","fromWei","parseFloat","approve","toWei","send","from","then","res","catch","err","_callee11","_context11","stake","_callee12","claimTime","claimString","hours","_context12","getClaimTimes","Date","now","toString","split","getTokenSupplyInfo","_x27","_x28","_x29","_getTokenSupplyInfo","_callee13","gasTokenName","supply","_context13","totalSupply","getTokenBalance","_x30","_x31","_x32","_x33","_getTokenBalance","_callee14","balance","_context14","balanceOf","_callee15","_context15","unstake","_callee17","totalReward","_context17","totalRewards","_callee18","totalStake","_context18","totalStaked","userStakeSize","_x42","_x43","_x44","_userStakeSize","_callee19","_context19","_callee20","_context20","totalRewardUser","_callee21","_context21","calculateStakeReward","getTokenAddress","_x51","_x52","_getTokenAddress","_callee22","_context22","console","log","length","getGasTokenSaving","_x53","_x54","_getGasTokenSaving","_callee23","_context23","_callee24","actionType","burn","reward","tier","tokenName","tokenAddress","_context24","trim","unwrap","approveGasTokenSpending","burnDiscountedMinting","discountedMinting","mint","mintGasToken","_callee25","burnAmount","_context25","slice","claimToken","toBN","_callee26","_context26","_callee27","byteCode","deploymentMethod","_salt","salt","_context27","GsveDeploy","GsveDeploy2","callTransaction","_x76","_x77","_x78","_x79","_x80","_x81","_x82","_callTransaction","_callee28","calldata","contractAddress","tokenSaving","sendValue","_context28","undefined","replace","wrapTransaction","_callee29","_context29","_callee30","_context30","getBalance","_callee31","wrapperLocation","_context31","deployedWalletAddressLocation","_callee32","_context32","deployGSVESmartWrapper","_callee33","_context33","withdrawBalance","_callee34","_context34","withdrawTokenBalance","_callee35","_context35","getDeployedAddress","_callee36","creationdata","_context36","createProxyWithNonce","_callee37","_context37","setAddressGasToken","_callee38","gasToken","_context38","getAddressGastoken","_callee39","gasTokencontract","_context39","_x117","_x118","_x119","_approveGasTokenSpending","_callee40","gastokenaddress","spenderaddress","_context40","Stake","classes","stakeValue","_useContext","useContext","_useContext2","handleStakeSubmit","e","preventDefault","_x22","_x23","_x24","_stakeGSVE","stakeGSVE","_React$useState","React","useState","_React$useState2","tokensLeft","settokensLeft","_React$useState3","_React$useState4","tokensBurned","setTokensBurned","_React$useState5","_React$useState6","tokenStaked","setTokenStaked","_React$useState7","_React$useState8","rewardsLeft","setrewardsLeft","_x40","_x41","_totalStaked","_x38","_x39","_rewardsRemaining","rewardsRemaining","_React$useState9","_React$useState10","setBalance","_React$useState11","_React$useState12","userStake","setUserStake","_React$useState13","_React$useState14","userUnclaimed","setUserUnclaimed","_React$useState15","_React$useState16","userTotalClaimed","setUserTotalClaimed","_React$useState17","_React$useState18","userTier","setUserTier","showUi","_x48","_x49","_x50","_userUnclaimedReward","userUnclaimedReward","_x45","_x46","_x47","_userTotalReward","userTotalReward","Divider","Typography","gutterBottom","variant","component","className","Paper","Grid","container","item","xs","Box","Button","href","sm","md","xl","Card","CardContent","Fragment","card","onSubmit","TextField","id","label","defaultValue","inputProps","step","onChange","target","button","onClick","_x34","_x35","_unstakeGSVE","unstakeGSVE","ImgMediaCard","props","tokenDescription","tokenImage","mintable","claimable","protocolMintFee","protocolMintReward","tokenSymbol","claimBurn","gasStored","contractLink","swapLink","linkText","tradeLinkText","priceLink","price","xmlHttp","XMLHttpRequest","open","JSON","parse","responseText","_unused","getCoinGeckoPrice","settotalSupply","mintableButton","mintType","tokenStats","push","expanded","setExpanded","CardMedia","height","objectFit","image","IconButton","clsx","expand","expandOpen","aria-expanded","aria-label","ExpandMore_default","Collapse","in","timeout","unmountOnExit","Mint","Deployer","selectedToken","setSelectedToken","setSelectedSymbol","deployType","setDeployType","setSalt","setByteCode","showSalt","setShowSalt","validateSalt","handleSubmit","_x70","_x71","_x72","_x73","_x74","_x75","_deployContract","deployContract","Autocomplete","style","tokens","option","innerText","autoHighlight","getOptionLabel","renderOption","code","renderInput","params","assign","name","autoComplete","FormControl","RadioGroup","row","includes","FormControlLabel","control","Radio","labelPlacement","min","max","walletconnect_logo","SUPPORTED_CHAINS","short_name","chain","network","chain_id","network_id","rpc_url","native_currency","symbol","decimals","DEFAULT_ACTIVE_INDEX","DEFAULT_CHAIN_ID","getChainData","chainData","filter","Error","API_KEY","rpcUrl","tslib_es6","convertHexToUtf8IfPossible","hex","utils_dist_cjs","api","axios_default","baseURL","headers","Accept","Content-Type","local","apiGetCustomRequest","customRpc","Promise","post","response","_a","data","result","setLocal","key","jsonData","stringify","setItem","getLocal","raw","getItem","removeLocal","removeItem","window","localStorage","wallet_WalletController","WalletController","activeIndex","activeChainId","path","getPath","entropy","getEntropy","mnemonic","getMnemonic","wallet","init","prototype","isActive","getIndex","getWallet","index","count","getAppConfig","numberOfAccounts","accounts","i","generateWallet","address","getData","generateEntropy","generateMnemonic","derivationPath","ethers","hexlify","randomBytes","entropyToMnemonic","lib_esm","fromMnemonic","update","JsonRpcProvider","populateTransaction","transaction","tx","gas","gasLimit","getAddress","bignumber","toHexString","gasPrice","nonce","err_1","sendTransaction","toLowerCase","hash","signTransaction","signMessage","SigningKey","privateKey","signDigest","arrayify","sigParams","joinSignature","signPersonalMessage","message","isHexString","signTypedData","controllers","store_StoreController","StoreController","set","get","remove","setupAppControllers","store","getAppControllers","_controllers","engines_ethereum","method","startsWith","router","setState","connector","approveRequest","rejectRequest","requests","render","to","signer","errorMsg","_b","dataToSign","addressRequested","RpcEngine","engines","getEngine","match","engine","appConfig","logo","colors","defaultColor","backgroundColor","chains","styleOpts","showPasteUri","showVersion","rpcEngine","events","resolve","white","black","grey","darkGrey","lightGrey","blue","lightBlue","yellow","orange","green","pink","red","purple","fonts","tiny","small","medium","large","h1","h2","h3","h4","h5","h6","normal","semibold","bold","extrabold","shadows","responsive","load","styled_components_browser_esm","templateObject_1","SLoader","div","templateObject_2","size","Loader","react","defaultProps","components_Loader","SIcon","Button_templateObject_1","SHoverLayer","Button_templateObject_2","SButton","templateObject_3","outline","left","disabled","Button_Button","fetching","components_Button","SCard","Card_templateObject_1","Card_Card","components_Card","SInput","input","Input_templateObject_1","components_Input","SBlockieWrapper","Blockie_templateObject_1","Blockie","seed","imgUrl","blockies_ts_dist_cjs","toDataURL","src","alt","components_Blockie","SHeader","Header_templateObject_1","SActiveAccount","Header_templateObject_2","SActiveChain","Header_templateObject_3","SAddress","templateObject_4","SBlockie","templateObject_5","SDisconnect","templateObject_6","components_Header","killSession","activeChain","SColumn","Column_templateObject_1","components_Column","PeerMeta_SIcon","img","PeerMeta_templateObject_1","SCenter","PeerMeta_templateObject_2","SName","PeerMeta_templateObject_3","components_PeerMeta","peerMeta","icons","description","url","SRequestValues","RequestDisplay_templateObject_1","SConnectedPeer","RequestDisplay_templateObject_2","SActions","RequestDisplay_templateObject_3","components_RequestDisplay","_super","RequestDisplay","appState","paramsFiltered","map","param","SRequestButton","RequestButton_templateObject_1","components_RequestButton","components_ClickOutside","ClickOutside","_this","isTouch","handle","event","onClickOutside","element","contains","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","ref","c","propTypes","prop_types","isRequired","SDropdown","Dropdown_templateObject_1","monospace","SRow","Dropdown_templateObject_2","selected","show","SAbsolute","Dropdown_templateObject_3","components_Dropdown","Dropdown","optionsDict","otherKeys","parseKeys","targetKey","Array","isArray","forEach","optionKey","keys","toggleDropdown","componentDidUpdate","prevProps","displayKey","otherKey","idx","SSection","AccountDetails_templateObject_1","SAddressDropdownWrapper","AccountDetails_templateObject_2","AccountDetails_templateObject_3","components_AccountDetails","updateAddress","accountsMap","updateChain","addr","display_address","SQRCodeScannerContainer","QRCodeScanner_templateObject_1","SQRCodeScannerWrapper","QRCodeScanner_templateObject_2","SCloseButton","QRCodeScanner_templateObject_3","SFirstLine","QRCodeScanner_templateObject_4","SSecondLine","QRCodeScanner_templateObject_5","components_QRCodeScanner","QRCodeScanner","delay","stopRecording","handleScan","onValidate","onScan","handleError","onError","onClose","error_1","react_qr_reader_lib_default","SContainer","WalletConnectPage_templateObject_1","SVersionNumber","WalletConnectPage_templateObject_2","SContent","WalletConnectPage_templateObject_3","WalletConnectPage_SActions","WalletConnectPage_templateObject_4","SActionsColumn","WalletConnectPage_templateObject_5","WalletConnectPage_SInput","WalletConnectPage_templateObject_6","WalletConnectPage_SConnectedPeer","templateObject_7","WalletConnectPage_SRequestButton","templateObject_8","DEFAULT_ACCOUNTS","DEFAULT_ADDRESS","INITIAL_STATE","loading","scanner","uri","ssl","results","passedAddress","passedChainId","passedChainName","selectedTokenId","pages_WalletConnectPage_WalletConnectPage","WalletConnectPage","session","clear","getCachedSession","dist_cjs_default","indexOf","subscribeToEvents","bindedSetState","newState","initWalletConnect","createSession","approveSession","rejectSession","resetApp","on","updateSession","sessionParams","newChainId","newActiveIndex","Number","newSelectedTokenId","toggleScanner","onQRCodeValidate","onQRCodeScan","onURIPaste","onQRCodeError","onQRCodeClose","openRequest","request","_c","closeRequest","filteredRequests","error_2","passedUpgraded","renderPayload","placeholder","Saver","contractDiaglog","proxyTitle","msgValue","setMsgValue","setContractAddress","contractTokenAddress","setContractTokenAddress","callData","setCallData","upgraded","_React$useState19","_React$useState20","chainName","setChainName","_React$useState21","_React$useState22","wrapperBalance","setWrapperBalance","handleChange","panel","isExpanded","valueInWei","dataToContract","_x83","_x84","_x85","_x86","_x87","_x88","_x89","_callTransactionWithValue","callTransactionWithValue","_x92","_x93","_contractWrapperAddress","contractWrapperAddress","_x90","_x91","_contractBalance","contractBalance","_x94","_x95","_deployWrapper","deployWrapper","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","_x96","_x97","_x98","_withdrawContractBalance","withdrawContractBalance","_x99","_x100","_x101","_x102","_withdrawContractTokenBalance","withdrawContractTokenBalance","upgradedTokens","Gnosis","currentGasToken","setCurrentGasToken","gnosisAddress","setGnosisAddress","hasGnosisAddress","setHasGnosisAddress","_x107","_x108","_x109","_x110","_updateGnosisGasToken","updateGnosisGasToken","_x103","_x104","_gnosisSafeAddress","gnosisSafeAddress","_x111","_x112","_x113","_getCurrentGnosisToken","getCurrentGnosisToken","gnosisAddressLink","chainID","_x105","_x106","_deployGsveGnosis","deployGsveGnosis","_x114","_x115","_x116","_approveGnosisSafeSpending","approveGnosisSafeSpending","Home","setBurnValue","mintValue","setMintValue","selectedSymbol","setType","mintFee","setMintFee","wrapFee","setWrapFee","validateMintValue","_x55","_x56","_x57","_x58","_x59","_x60","_x61","_x62","_handleMintWrapAction","handleMintWrapAction","summary","fee","mintamount","Math","floor","wrapToggle","FormGroup","Switch","checked","amountAvailable","setAmountAvailable","_x67","_x68","_x69","_feePoolBalance","feePoolBalance","Claim","submitButton","sliderValue","setSliderValue","setClaimTime","showClaimUi","setShowClaimUi","_x63","_x64","_x65","_x66","_handleClaim","handleClaim","_x25","_x26","_getClaimTime","getClaimTime","claimAmount","Card_ImgMediaCard","Slider","inputSlider","aria-labelledby","newValue","Input_Input","onBlur","Litepaper","_useState","_useState2","numPages","setNumPages","removeTextLayerOffset","querySelectorAll","layer","entry","file","workerSrc","onLoadSuccess","el","innerWidth","pageNumber","pdfjs","GlobalWorkerOptions","version","MiniDrawer","_clsx3","_clsx4","useTheme","setOpen","setNetwork","walletChainId","setWalletChainId","handleConnection","_connect","checkConnection","handleDisonnection","_disconnect","disconnect","updateChainId","_getChainID","getChainID","connectbutton","Select","labelId","MenuItem","AccountBalanceWallet_default","Sync_default","noWrap","ExitToApp_default","networkName","menuLinks","menuIcons","Home_default","AccountBalance_default","LocalGasStation_default","Grain_default","InvertColors_default","middleLinks","middleIcons","NoteAdd_default","Whatshot_default","Fireplace_default","bottomLinks","bottomIcons","DescriptionTwoTone_default","Description_default","Subject_default","alert","Alert","severity","CssBaseline","AppBar","Toolbar","edge","Menu_default","GasSaveLogo","Drawer","direction","ChevronRight_default","ChevronLeft_default","List","ListItem","Link","ListItemIcon","ListItemText","react_router","Mint_Mint","Home_Home","createMuiTheme","main","App","ThemeProvider","src_store","react_dom_default","StrictMode","react_router_dom","hashType","src_App","getElementById"],"mappings":"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","file":"static/js/main.222b3e1f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoGrey.bce1c254.svg\";","import Web3 from \"web3\";\r\nimport Web3Modal from \"web3modal\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\n\r\nvar web3 = null;\r\nvar provider;\r\nvar account;\r\nvar web3Modal\r\nvar connected = false;\r\n\r\n\r\nconst providerOptions = {\r\n  walletconnect: {\r\n    package: WalletConnectProvider,\r\n    options: {\r\n      infuraId: \"9af22c382b3142389625451f5193fc76\"\r\n    }\r\n  }\r\n};\r\n\r\nexport async function loadWeb3() {\r\n\r\n  web3Modal = new Web3Modal({\r\n    providerOptions, // required\r\n    cacheProvider: false\r\n  });\r\n\r\n  provider = await web3Modal.connect();\r\n  web3 = new Web3(provider);\r\n  //await web3.eth.requestAccounts();\r\n  return web3\r\n}\r\n\r\nexport async function getAccount(provided_web3) {\r\n  account = await provided_web3.eth.getAccounts()\r\n  connected = true;\r\n  return account\r\n}\r\n\r\nexport async function connect() {\r\n  web3 = await loadWeb3();\r\n  await getAccount(web3);\r\n  web3Modal.clearCachedProvider();\r\n  web3.eth.requestAccounts()\r\n  return web3\r\n}\r\n\r\nexport function isConnected() {\r\n  return connected\r\n}\r\n\r\nexport function returnAccount() {\r\n  return account\r\n}\r\n\r\nexport async function disconnect() {\r\n  connected = false;\r\n  web3 = null;\r\n  provider = null;\r\n  web3Modal = null;\r\n}\r\n\r\nexport function getWeb3() {\r\n  return web3;\r\n}\r\n\r\nexport async function getChainID(_web3){\r\n  var chainId = await _web3.eth.getChainId()\r\n  return chainId\r\n}\r\n\r\nexport function getWeb3Caller(chainId) {\r\n  var web3;\r\n  if(chainId === 1){\r\n    web3 = new Web3(new Web3.providers.HttpProvider('https://mainnet.infura.io/v3/9af22c382b3142389625451f5193fc76'));\r\n  }\r\n  if(chainId === 4){\r\n    web3 = new Web3(new Web3.providers.HttpProvider('https://rinkeby.infura.io/v3/9af22c382b3142389625451f5193fc76'));\r\n  }\r\n  return web3\r\n}","const Reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'web3_connected':\r\n            return {\r\n                ...state,\r\n                web3: action.payload,\r\n            };\r\n        case 'web3_caller_connected':\r\n            return {\r\n                ...state,\r\n                web3_caller: action.payload,\r\n            };\r\n        case 'web3_disconnected':\r\n            return {\r\n                ...state,\r\n                web3: null,\r\n                account: \"0x00\",\r\n                connected: false\r\n            };\r\n        case 'deployed_address':\r\n            return {\r\n                ...state,\r\n                deployedAddress: action.payload,\r\n            };\r\n        case 'has_deployed_address':\r\n            return {\r\n                ...state,\r\n                hasDeployedContract: action.payload,\r\n            };\r\n        case 'chainId':\r\n            return {\r\n                ...state,\r\n                chainId: action.payload,\r\n            };\r\n        case 'set_account':\r\n            return {\r\n                ...state,\r\n                account: action.payload\r\n            };\r\n        case 'set_connected':\r\n            return {\r\n                ...state,\r\n                connected: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default Reducer;","import React, {createContext, useReducer} from \"react\";\r\nimport Reducer from './contexts/reducer'\r\n\r\n\r\nconst initialState = {\r\n    account: \"0x00\",\r\n    connected: false,\r\n    web3: null,\r\n    web3_caller: null,\r\n    deployedAddress: \"\",\r\n    hasDeployedContract: \"\",\r\n    chainId: 1,\r\n    error: null,\r\n    posts:[]\r\n};\r\n\r\nconst Store = ({children}) => {\r\n    const [state, dispatch] = useReducer(Reducer, initialState);\r\n    return (\r\n        <Context.Provider value={[state, dispatch]}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n};\r\n\r\nexport const Context = createContext(initialState);\r\nexport default Store;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nvar drawerWidth = 240\r\nconst GlobalStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n      },\r\n      appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        background: \"linear-gradient(90deg, \" + theme.palette.primary.dark + \" 0%, \" + theme.palette.secondary.light + \" 90%)\",\r\n      },\r\n      appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n      },\r\n      menuButton: {\r\n        marginRight: 36,\r\n      },\r\n      hide: {\r\n        display: 'none',\r\n      },\r\n      drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n      },\r\n      drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n      },\r\n      drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: theme.spacing(9) + 1,\r\n        },\r\n      },\r\n      toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n      },\r\n      content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(7),\r\n      },\r\n      toolbarButtons: {\r\n        marginLeft: 'auto',\r\n      },\r\n      formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        color:\"white\"\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n      headerPaper: {\r\n        color: \"white\",\r\n        background: \"linear-gradient(90deg, \" + theme.palette.primary.dark + \" 0%, \" + theme.palette.secondary.light + \" 90%)\",\r\n        padding: theme.spacing(1)\r\n      },\r\n      paperContainer: {\r\n        color: \"white\",\r\n        backgroundImage: `url(${\"images/resources/bg.gif\"})`,\r\n      },\r\n        rootPage: {\r\n          flexGrow: 1,\r\n        },\r\n        paper: {\r\n          padding: theme.spacing(1),\r\n          textAlign: 'center',\r\n          color: theme.palette.text.primary,\r\n        },\r\n        textField: {\r\n          marginLeft: theme.spacing(1),\r\n          marginRight: theme.spacing(1),\r\n          width: '25ch',\r\n        },\r\n        headerPaper: {\r\n          color: \"white\",\r\n          background: \"linear-gradient(90deg, \" + theme.palette.primary.dark + \" 0%, \" + theme.palette.secondary.light + \" 90%)\",\r\n          padding: theme.spacing(1)\r\n        },\r\n        option: {\r\n          fontSize: 15,\r\n          '& > span': {\r\n            marginRight: 10,\r\n            fontSize: 18,\r\n          },\r\n        },\r\n        cardWithBG: {\r\n          maxWidth: 1000,\r\n          background: \"linear-gradient(90deg, \" + theme.palette.primary.dark + \" 0%, \" + theme.palette.secondary.light + \" 90%)\",\r\n          color: \"white\"\r\n        },\r\n        card: {\r\n          maxWidth: 10000,\r\n        },\r\n        cardWithItems: {\r\n          maxWidth: 1000,\r\n          background: \"linear-gradient(90deg, \" + theme.palette.primary.dark + \" 0%, \" + theme.palette.secondary.light + \" 90%)\",\r\n          color: \"white\",\r\n          margin: theme.spacing(1),\r\n          align: \"center\"\r\n        },\r\n        button: {\r\n          margin: theme.spacing(1),\r\n        },\r\n        actionsContainer: {\r\n          marginBottom: theme.spacing(2),\r\n        },\r\n        resetContainer: {\r\n          padding: theme.spacing(3),\r\n        },\r\n        inputSlider: {\r\n          width: 300,\r\n          margin: theme.spacing(1),\r\n        },\r\n        input: {\r\n          width: 100,\r\n          margin: theme.spacing(1),\r\n        },\r\n    }));\r\n\r\nexport default GlobalStyles","import Swal from 'sweetalert2'\r\nvar contractAddresses = require('./addresses.json');\r\n\r\nfunction infoSwal(title) {\r\n    Swal.fire({ title: title, icon: 'info', timer: 30000, showConfirmButton: false, position: 'center' });\r\n}\r\n\r\nfunction txnSwal(title, type) {\r\n    Swal.fire({ title: title, icon: type, timer: 30000, showConfirmButton: false, position: 'center' });\r\n}\r\n\r\nexport async function getAccount(web3) {\r\n    var account = await web3.eth.getAccounts()\r\n    return account\r\n}\r\n\r\nexport async function initDeployerContract(web3, chainId) {\r\n    var contract_json = require('./abi/GSVEDeployer.json');\r\n    var contact_abi = contract_json['abi'];\r\n    var contract_address = contractAddresses[chainId]['deployer']\r\n    var contract = await new web3.eth.Contract(contact_abi, contract_address);\r\n    return contract\r\n}\r\n\r\nexport async function initFactoryContract(web3, chainId) {\r\n    var contract_json = require('./abi/GSVESmartWrapperFactory.json');\r\n    var contact_abi = contract_json['abi'];\r\n    var contract_address = contractAddresses[chainId]['factory']\r\n    var contract = await new web3.eth.Contract(contact_abi, contract_address);\r\n    return contract\r\n}\r\n\r\nexport async function initGnosisFactoryContract(web3, chainId) {\r\n    var contract_json = require('./abi/ProxyFactory.json');\r\n    var contact_abi = contract_json['abi'];\r\n    var contract_address = contractAddresses[chainId]['gnosis']\r\n    var contract = await new web3.eth.Contract(contact_abi, contract_address);\r\n    return contract\r\n}\r\n\r\nexport async function initBeaconContract(web3, chainId) {\r\n    var contract_json = require('./abi/GSVEBeacon.json');\r\n    var contact_abi = contract_json['abi'];\r\n    var contract_address = contractAddresses[chainId]['beacon']\r\n    var contract = await new web3.eth.Contract(contact_abi, contract_address);\r\n    return contract\r\n}\r\n\r\n\r\nexport async function initCoreContract(web3, chainId) {\r\n    var contract_json = require('./abi/GSVECore.json');\r\n    var contact_abi = contract_json['abi'];\r\n    var contract_address = contractAddresses[chainId]['core']\r\n    var contract = await new web3.eth.Contract(contact_abi, contract_address);\r\n    return contract\r\n}\r\n\r\nexport async function initGSVETokenContract(web3, chainId) {\r\n    var contract_json = require('./abi/GSVEToken.json');\r\n    var contact_abi = contract_json['abi'];\r\n    var contract_address = contractAddresses[chainId]['gsve']\r\n    var contract = await new web3.eth.Contract(contact_abi, contract_address);\r\n    return contract\r\n}\r\n\r\nexport async function initGasTokenContract(web3, chainId, gastoken) {\r\n    var contract_json = require('./abi/WrappedGasToken.json');\r\n    var contact_abi = contract_json['abi'];\r\n    var contract_address = contractAddresses[chainId][gastoken]\r\n    var contract = await new web3.eth.Contract(contact_abi, contract_address);\r\n    return contract\r\n}\r\n\r\nexport async function initWrapperContract(web3, wrapperAddress) {\r\n    var contract_json = require('./abi/GSVESmartWrapper.json');\r\n    var contact_abi = contract_json['abi'];\r\n    var contract_address = wrapperAddress\r\n    var contract = await new web3.eth.Contract(contact_abi, contract_address);\r\n    return contract\r\n}\r\n\r\nexport async function approveGSVE(numTokens, web3, chainId) {\r\n    \r\n    var contract = await initGSVETokenContract(web3, chainId);\r\n    var account = await getAccount(web3)\r\n    var allowance = await contract.methods.allowance(account[0], contractAddresses[chainId]['core']).call()\r\n    if(web3.utils.fromWei(allowance) < parseFloat(numTokens) ){\r\n        infoSwal('GSVE Approval Transaction Created')\r\n        await contract.methods.approve(contractAddresses[chainId]['core'], web3.utils.toWei(\"100000000\")).send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n    }\r\n}\r\n\r\nexport async function stakeGSVE(numTokens, web3, chainId) {\r\n    infoSwal('Stake Transaction Created')\r\n    var contract = await initCoreContract(web3, chainId);\r\n    await approveGSVE(numTokens, web3, chainId);\r\n    var account = await getAccount(web3)\r\n    await contract.methods.stake(web3.utils.toWei(numTokens)).send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n}\r\n\r\nexport async function getClaimTime(web3, chainId) {\r\n    var contract = await initCoreContract(web3, chainId);\r\n    var account = await getAccount(web3)\r\n    var claimTime = await contract.methods.getClaimTimes(account[0]).call();\r\n\r\n    claimTime = Date.now() - (claimTime * 1000)\r\n\r\n    var claimString = \"\"\r\n    if (claimTime > (60*60*12*1000)){\r\n        claimString = \"You can claim up to up to 0.05 GST1, GST2 or 5 Chi, Wrapped GST1, Wrapped GST2, Wrapped Chi\"\r\n    }\r\n    else{\r\n        var timer = (12*60*60) - (claimTime / 1000)\r\n        var hours = timer / 60 / 60\r\n        hours = hours.toString().split(\".\")[0]\r\n        claimString = \"You can claim gas tokens in around \" + hours + \" hours!\"\r\n    }\r\n\r\n    return claimString\r\n}\r\n\r\nexport async function getTokenSupplyInfo(gasTokenName, web3, chainId) {\r\n    var contract;\r\n    var supply;\r\n    if (gasTokenName === \"Wrapped Chi\") {\r\n        contract = await initGasTokenContract(web3, chainId, \"wchi\")\r\n        supply = await contract.methods.totalSupply().call()\r\n        return supply\r\n    }\r\n    else if (gasTokenName === \"Chi\") {\r\n        contract = await initGasTokenContract(web3, chainId, \"chi\")\r\n        supply = await contract.methods.totalSupply().call()\r\n        return supply\r\n    }\r\n    else if (gasTokenName === \"Wrapped GST2\") {\r\n        contract = await initGasTokenContract(web3, chainId, \"wgst2\")\r\n        supply = await contract.methods.totalSupply().call()\r\n        return supply\r\n    }\r\n    else if (gasTokenName === \"Gas Token 2\") {\r\n        contract = await initGasTokenContract(web3, chainId, \"gst2\")\r\n        supply = await contract.methods.totalSupply().call()\r\n        return supply\r\n    }\r\n    else if (gasTokenName === \"Wrapped GST1\") {\r\n        contract = await initGasTokenContract(web3, chainId, \"wgst1\")\r\n        supply = await contract.methods.totalSupply().call()\r\n        return supply\r\n    }\r\n    else if (gasTokenName === \"Gas Token 1\") {\r\n        contract = await initGasTokenContract(web3, chainId, \"gst1\")\r\n        supply = await contract.methods.totalSupply().call()\r\n        return supply\r\n    }\r\n    else if (gasTokenName === \"GSVE\") {\r\n        contract = await initGSVETokenContract(web3, chainId)\r\n        supply = await contract.methods.totalSupply().call()\r\n        return web3.utils.fromWei(supply)\r\n    }\r\n    else {\r\n        return -1\r\n    }\r\n}\r\n\r\nexport async function getTokenBalance(gasTokenName, web3, account, chainId) {\r\n    var contract\r\n    var balance\r\n    if (gasTokenName === \"Wrapped Chi\") {\r\n        contract = await initGasTokenContract(web3, chainId, \"wchi\")\r\n        balance = await contract.methods.balanceOf(account[0]).call()\r\n        return balance\r\n    }\r\n    else if (gasTokenName === \"Chi\") {\r\n        contract = await initGasTokenContract(web3, chainId, \"chi\")\r\n        balance = await contract.methods.balanceOf(account[0]).call()\r\n        return balance\r\n    }\r\n    else if (gasTokenName === \"Wrapped GST2\") {\r\n        contract = await initGasTokenContract(web3, chainId, \"wgst2\")\r\n        balance = await contract.methods.balanceOf(account[0]).call()\r\n        return balance\r\n    }\r\n    else if (gasTokenName === \"Gas Token 2\") {\r\n        contract = await initGasTokenContract(web3, chainId, \"gst2\")\r\n        balance = await contract.methods.balanceOf(account[0]).call()\r\n        return balance / 100\r\n    }\r\n    else if (gasTokenName === \"Wrapped GST1\") {\r\n        contract = await initGasTokenContract(web3, chainId, \"wgst1\")\r\n        balance = await contract.methods.balanceOf(account[0]).call()\r\n        return balance\r\n    }\r\n    else if (gasTokenName === \"Gas Token 1\") {\r\n        contract = await initGasTokenContract(web3, chainId, \"gst1\")\r\n        balance = await contract.methods.balanceOf(account[0]).call()\r\n        return balance / 100\r\n    }\r\n    else if (gasTokenName === \"GSVE\") {\r\n        contract = await initGSVETokenContract(web3, chainId)\r\n        balance = await contract.methods.balanceOf(account[0]).call()\r\n        return web3.utils.fromWei(balance)\r\n    }\r\n    else {\r\n        return -1\r\n    }\r\n}\r\n\r\nexport async function unstakeGSVE(web3, chainId) {\r\n    infoSwal('Unstake Transaction Created')\r\n    var contract = await initCoreContract(web3, chainId);\r\n    var account = await getAccount(web3)\r\n    await contract.methods.unstake().send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n}\r\n\r\nexport async function claimRewardTokens(web3, chainId) {\r\n    infoSwal('GSVE Stake Reward Transaction Created')\r\n    var contract = await initCoreContract(web3, chainId);\r\n    var account = await getAccount(web3)\r\n    await contract.methods.collectReward().send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n}\r\n\r\nexport async function rewardsRemaining(web3, chainId) {\r\n    var contract = await initCoreContract(web3, chainId);\r\n    var totalReward = await contract.methods.totalRewards().call();\r\n    return web3.utils.fromWei(totalReward)\r\n}\r\n\r\nexport async function totalStaked(web3, chainId) {\r\n    var contract = await initCoreContract(web3, chainId);\r\n    var totalStake = await contract.methods.totalStaked().call();\r\n    return web3.utils.fromWei(totalStake)\r\n}\r\n\r\nexport async function userStakeSize(web3, account, chainId) {\r\n    var contract = await initCoreContract(web3, chainId);\r\n    var totalReward = await contract.methods.userStakeSize(account[0]).call();\r\n    return web3.utils.fromWei(totalReward)\r\n}\r\n\r\nexport async function userTotalReward(web3, account, chainId) {\r\n    var contract = await initCoreContract(web3, chainId);\r\n    var totalReward = await contract.methods.totalRewardUser(account[0]).call();\r\n    return web3.utils.fromWei(totalReward)\r\n}\r\n\r\nexport async function userUnclaimedReward(web3, account, chainId) {\r\n    var contract = await initCoreContract(web3, chainId);\r\n    var totalReward = await contract.methods.calculateStakeReward(account[0]).call();\r\n    return web3.utils.fromWei(totalReward)\r\n}\r\n\r\nexport async function getTokenAddress(gasTokenName, chainId) {\r\n    console.log(gasTokenName)\r\n    console.log(gasTokenName.length)\r\n    if (gasTokenName === \"Wrapped Chi\") {\r\n        return contractAddresses[chainId]['wchi']\r\n    }\r\n    else if (gasTokenName === \"Chi\") {\r\n        return contractAddresses[chainId]['chi']\r\n    }\r\n    else if (gasTokenName === \"Wrapped GST2\") {\r\n        return contractAddresses[chainId]['wgst2']\r\n    }\r\n    else if (gasTokenName === \"Gas Token 2\") {\r\n        return contractAddresses[chainId]['gst2']\r\n    }\r\n    else if (gasTokenName === \"Wrapped GST1\") {\r\n        return contractAddresses[chainId]['wgst1']\r\n    }\r\n    else if (gasTokenName === \"Gas Token 1\") {\r\n        return contractAddresses[chainId]['gst1']\r\n    }\r\n    else if (gasTokenName === \"Turn Off\") {\r\n        return \"0x0000000000000000000000000000000000000000\"\r\n    }\r\n    else {\r\n        return \"\"\r\n    }\r\n}\r\n\r\nexport async function getGasTokenSaving(gasTokenName, chainId) {\r\n    console.log(gasTokenName)\r\n    console.log(gasTokenName.length)\r\n    if (gasTokenName === \"Wrapped Chi\") {\r\n        return 30053\r\n    }\r\n    else if (gasTokenName === \"Chi\") {\r\n        return 30053\r\n    }\r\n    else if (gasTokenName === \"Wrapped GST2\") {\r\n        return 30870\r\n    }\r\n    else if (gasTokenName === \"Gas Token 2\") {\r\n        return 30870\r\n    }\r\n    else if (gasTokenName === \"Wrapped GST1\") {\r\n        return 20046\r\n    }\r\n    else if (gasTokenName === \"Gas Token 1\") {\r\n        return 20046\r\n    }\r\n    else if (gasTokenName === \"Turn Off\") {\r\n        return 0\r\n    }\r\n    else {\r\n        return 0\r\n    }\r\n}\r\n\r\nexport async function handleMintWrapAction(web3, actionType, burn, reward, tier, numTokens, tokenName, chainId) {\r\n    var contract;\r\n    var tokenAddress = await getTokenAddress(tokenName.trim(), chainId)\r\n    var account = await getAccount(web3)\r\n    if (actionType === \"unwrap\") {\r\n        infoSwal('Gas Token Unwrapping Transaction Created')\r\n        if (tokenName.trim() === \"Wrapped Chi\") {\r\n            contract = await initGasTokenContract(web3, chainId, \"wchi\")\r\n            await contract.methods.unwrap(numTokens).send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n        }\r\n        else if (tokenName.trim() === \"Wrapped GST2\") {\r\n            contract = await initGasTokenContract(web3, chainId, \"wgst2\")\r\n            await contract.methods.unwrap(numTokens).send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n        }\r\n        else if (tokenName.trim() === \"Wrapped GST1\") {\r\n            contract = await initGasTokenContract(web3, chainId, \"wgst1\")\r\n            await contract.methods.unwrap(numTokens).send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n        }\r\n    }\r\n    else {\r\n        infoSwal('Gas Token Creation Transaction Created')\r\n        if (burn === true) {\r\n\r\n            if (actionType === \"wrap\") {\r\n                if (tokenName.trim() === \"Wrapped Chi\") {\r\n                    await approveGasTokenSpending(web3, contractAddresses[chainId]['chi'], contractAddresses[chainId]['wchi'])\r\n                }\r\n                else if (tokenName.trim() === \"Wrapped GST2\") {\r\n                    await approveGasTokenSpending(web3, contractAddresses[chainId]['gst2'], contractAddresses[chainId]['wgst2'])\r\n                }\r\n                else if (tokenName.trim() === \"Wrapped GST1\") {\r\n                    await approveGasTokenSpending(web3, contractAddresses[chainId]['gst1'], contractAddresses[chainId]['wgst1'])\r\n                }\r\n\r\n            }\r\n\r\n            await approveGSVE(\"0.25\", web3, chainId);\r\n            contract = await initCoreContract(web3, chainId)\r\n            await contract.methods.burnDiscountedMinting(tokenAddress, numTokens.toString()).send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n        }\r\n        else {\r\n            if (actionType === \"wrap\") {\r\n                if (tokenName.trim() === \"Wrapped Chi\") {\r\n                    await approveGasTokenSpending(web3, contractAddresses[chainId]['chi'], contractAddresses[chainId]['wchi'])\r\n                }\r\n                else if (tokenName.trim() === \"Wrapped GST2\") {\r\n                    await approveGasTokenSpending(web3, contractAddresses[chainId]['gst2'], contractAddresses[chainId]['wgst2'])\r\n                }\r\n                else if (tokenName.trim() === \"Wrapped GST1\") {\r\n                    await approveGasTokenSpending(web3, contractAddresses[chainId]['gst1'], contractAddresses[chainId]['wgst1'])\r\n                }\r\n\r\n                if (tier > 0) {\r\n                    contract = await initCoreContract(web3, chainId)\r\n                    await contract.methods.discountedMinting(tokenAddress, numTokens.toString()).send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n                }\r\n                else {\r\n                    if (tokenName.trim() === \"Wrapped Chi\") {\r\n                        contract = await initGasTokenContract(web3, chainId, \"wchi\")\r\n                        await contract.methods.mint(numTokens).send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n                    }\r\n                    else if (tokenName.trim() === \"Wrapped GST2\") {\r\n                        contract = await initGasTokenContract(web3, chainId, \"wgst2\")\r\n                        await contract.methods.mint(numTokens).send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n                    }\r\n                    else if (tokenName.trim() === \"Wrapped GST1\") {\r\n\r\n                        contract = await initGasTokenContract(web3, chainId, \"wgst1\")\r\n                        await contract.methods.mint(numTokens).send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n                    }\r\n                }\r\n\r\n            }\r\n            else {\r\n\r\n                if (tier > 0) {\r\n                    contract = await initCoreContract(web3, chainId)\r\n                    await contract.methods.discountedMinting(tokenAddress, numTokens.toString()).send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n                }\r\n                else {\r\n                    if (tokenName.trim() === \"Chi\") {\r\n                        contract = await initCoreContract(web3, chainId)\r\n                        await contract.methods.mintGasToken(tokenAddress, numTokens.toString()).send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n                    }\r\n                    else if (tokenName.trim() === \"Gas Token 2\") {\r\n                        contract = await initCoreContract(web3, chainId)\r\n                        await contract.methods.mintGasToken(tokenAddress, numTokens.toString()).send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n                    }\r\n                    else if (tokenName.trim() === \"Gas Token 1\") {\r\n                        contract = await initCoreContract(web3, chainId)\r\n                        await contract.methods.mintGasToken(tokenAddress, numTokens.toString()).send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport async function handleClaim(web3, numTokens, tokenName, chainId) {\r\n    infoSwal('Token Claim Transaction Created')\r\n    var tokenAddress = await getTokenAddress(tokenName.trim(), chainId)\r\n    var burnAmount = (numTokens * 0.1).toString().slice(0, 3)\r\n\r\n    var account = await getAccount(web3)\r\n    await approveGSVE(burnAmount, web3, chainId);\r\n\r\n    var contract = await initCoreContract(web3, chainId)\r\n    await contract.methods.claimToken(tokenAddress, web3.utils.toBN(numTokens)).send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n}\r\n\r\nexport async function feePoolBalance(web3, gasTokenName, chainId) {\r\n    var contract;\r\n    if (gasTokenName === \"Wrapped Chi\") {\r\n        contract = await initGasTokenContract(web3, chainId, \"wchi\")\r\n        var balance = await contract.methods.balanceOf(contractAddresses[chainId]['vault']).call()\r\n        return balance\r\n    }\r\n    else if (gasTokenName === \"Chi\") {\r\n        contract = await initGasTokenContract(web3, chainId, \"chi\")\r\n        var balance = await contract.methods.balanceOf(contractAddresses[chainId]['vault']).call()\r\n        return balance\r\n    }\r\n    else if (gasTokenName === \"Wrapped GST2\") {\r\n        contract = await initGasTokenContract(web3, chainId, \"wgst2\")\r\n        var balance = await contract.methods.balanceOf(contractAddresses[chainId]['vault']).call()\r\n        return balance\r\n    }\r\n    else if (gasTokenName === \"Gas Token 2\") {\r\n        contract = await initGasTokenContract(web3, chainId, \"gst2\")\r\n        var balance = await contract.methods.balanceOf(contractAddresses[chainId]['vault']).call()\r\n        return balance / 100\r\n    }\r\n    else if (gasTokenName === \"Wrapped GST1\") {\r\n        contract = await initGasTokenContract(web3, chainId, \"wgst1\")\r\n        var balance = await contract.methods.balanceOf(contractAddresses[chainId]['vault']).call()\r\n        return balance\r\n    }\r\n    else if (gasTokenName === \"Gas Token 1\") {\r\n        contract = await initGasTokenContract(web3, chainId, \"gst1\")\r\n        var balance = await contract.methods.balanceOf(contractAddresses[chainId]['vault']).call()\r\n        return balance / 100\r\n    }\r\n    else if (gasTokenName === \"GSVE\") {\r\n        contract = await initGSVETokenContract(web3, chainId)\r\n        var balance = await contract.methods.balanceOf(contractAddresses[chainId]['vault']).call()\r\n        return web3.utils.fromWei(balance)\r\n    }\r\n}\r\n\r\nexport async function deployContract(web3, byteCode, tokenName, deploymentMethod, _salt, chainId) {\r\n    infoSwal('Contract Deployment Transaction Created')\r\n    var tokenAddress = await getTokenAddress(tokenName.trim(), chainId)\r\n    var contract;\r\n    var account = await getAccount(web3)\r\n\r\n    if (tokenName.trim() === \"Wrapped Chi\") {\r\n        await approveGasTokenSpending(web3, contractAddresses[chainId]['wchi'], contractAddresses[chainId]['deployer'])\r\n    }\r\n    else if (tokenName.trim() === \"Wrapped GST2\") {\r\n        await approveGasTokenSpending(web3, contractAddresses[chainId]['wgst2'], contractAddresses[chainId]['deployer'])\r\n    }\r\n    else if (tokenName.trim() === \"Wrapped GST1\") {\r\n        await approveGasTokenSpending(web3, contractAddresses[chainId]['wgst1'], contractAddresses[chainId]['deployer'])\r\n    }\r\n\r\n    var contract = await initDeployerContract(web3, chainId)\r\n\r\n    if (deploymentMethod === \"1\") {\r\n        await contract.methods.GsveDeploy(byteCode.toString(), tokenAddress).send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n    }\r\n    else if (deploymentMethod === \"2\") {\r\n\r\n        var salt = _salt\r\n        if (_salt > 100000) {\r\n            salt = 100000\r\n        }\r\n        else if (salt < 0) {\r\n            salt = 0\r\n        }\r\n\r\n        await contract.methods.GsveDeploy2(salt, byteCode, tokenAddress).send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n    }\r\n}\r\n\r\nexport async function callTransaction(web3, calldata, tokenName, contractAddress, value, wrapperAddress, chainId) {\r\n    infoSwal('Gas Saving Forwarding Transaction to Smart Wallet')\r\n    var tokenAddress = await getTokenAddress(tokenName.trim(), chainId)\r\n    var tokenSaving = await getGasTokenSaving(tokenName.trim(), chainId)\r\n    var contract = await initWrapperContract(web3, wrapperAddress)\r\n    var account = await getAccount(web3)\r\n    var sendValue = value\r\n    if (sendValue !== undefined) {\r\n            if(sendValue === \"0x0\"){\r\n            sendValue = value.replace(\"0x\", \"\")\r\n        }\r\n    }\r\n    else{\r\n        sendValue = 0\r\n    }\r\n    console.log(tokenSaving)\r\n    await approveGasTokenSpending(web3, tokenAddress, wrapperAddress)\r\n    await contract.methods.wrapTransaction(calldata, contractAddress, sendValue, tokenAddress, tokenSaving, true).send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n}\r\n\r\nexport async function callTransactionWithValue(web3, calldata, tokenName, contractAddress, value, wrapperAddress, chainId) {\r\n    console.log(value)\r\n    infoSwal('Gas Saving Forwarding Transaction to Smart Wallet')\r\n    var tokenAddress = await getTokenAddress(tokenName.trim(), chainId)\r\n    var tokenSaving = await getGasTokenSaving(tokenName.trim(), chainId)\r\n    var contract = await initWrapperContract(web3, wrapperAddress)\r\n    var account = await getAccount(web3)\r\n    var sendValue = \"0\"\r\n    if (value !== undefined) {\r\n        sendValue = value.replace(\"0x\", \"\")\r\n    }\r\n    await approveGasTokenSpending(web3, tokenAddress, wrapperAddress)\r\n    await contract.methods.wrapTransaction(calldata, contractAddress, sendValue, tokenAddress, tokenSaving, true).send({ from: account[0], value:sendValue }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n}\r\n\r\nexport async function contractBalance(web3, wrapperAddress) {\r\n    var balance = await web3.eth.getBalance(wrapperAddress)\r\n    balance = web3.utils.fromWei(balance)\r\n    return balance\r\n}\r\n\r\nexport async function contractWrapperAddress(web3, chainId) {\r\n    var contract = await initFactoryContract(web3, chainId)\r\n    var account = await getAccount(web3)\r\n    var wrapperLocation = await contract.methods.deployedWalletAddressLocation(account[0]).call()\r\n    return wrapperLocation\r\n}\r\n\r\nexport async function deployWrapper(web3, chainId) {\r\n    infoSwal('GSVE Wallet Deployment Transaction Created')\r\n    var contract = await initGSVETokenContract(web3, chainId);\r\n    var account = await getAccount(web3)\r\n    await contract.methods.approve(contractAddresses[chainId]['factory'], web3.utils.toWei(\"10\")).send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n\r\n    contract = await initFactoryContract(web3, chainId)\r\n    account = await getAccount(web3)\r\n    var wrapperLocation = await contract.methods.deployGSVESmartWrapper().send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n    return wrapperLocation\r\n}\r\n\r\nexport async function withdrawContractBalance(web3, wrapperAddress, chainId) {\r\n    infoSwal('Withdrawal Transaction Created')\r\n    var contract = await initWrapperContract(web3, wrapperAddress)\r\n    var account = await getAccount(web3)\r\n    contract.methods.withdrawBalance().send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n}\r\n\r\nexport async function withdrawContractTokenBalance(web3, wrapperAddress, tokenAddress, chainId) {\r\n    infoSwal('Token Withdrawal Transaction Created')\r\n    var contract = await initWrapperContract(web3, wrapperAddress)\r\n    var account = await getAccount(web3)\r\n    contract.methods.withdrawTokenBalance(tokenAddress).send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n}\r\n\r\nexport async function gnosisSafeAddress(web3, chainId) {\r\n    var contract = await initBeaconContract(web3, chainId)\r\n    var account = await getAccount(web3)\r\n    var wrapperLocation = await contract.methods.getDeployedAddress(account[0]).call()\r\n    return wrapperLocation\r\n}\r\n\r\nexport async function deployGsveGnosis(web3, chainId) {\r\n    var contract = await initGSVETokenContract(web3, chainId);\r\n    var account = await getAccount(web3)\r\n    await contract.methods.approve(contractAddresses[chainId]['gnosis'], web3.utils.toWei(\"50\")).send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n    \r\n    contract = await initGnosisFactoryContract(web3, chainId)\r\n    var creationdata = \"0xb63e800d0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000140000000000000000000000000d5d82b6addc9027b22dca772aa68d5d74cdbdf440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000000000000000000000000000000000000000000000000000000000000000\"\r\n    creationdata = creationdata.replace(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\", account[0].replace(\"0x\", \"\"))\r\n    await contract.methods.createProxyWithNonce(\"0x34CfAC646f301356fAa8B21e94227e3583Fe3F5F\", creationdata, account[0]).send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n}\r\n\r\nexport async function updateGnosisGasToken(web3, tokenName, contractAddress, chainId) {\r\n    var tokenAddress = await getTokenAddress(tokenName.trim(), chainId)\r\n    var contract = await initBeaconContract(web3, chainId)\r\n    var account = await getAccount(web3)\r\n    await contract.methods.setAddressGasToken(contractAddress, tokenAddress).send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n}\r\n\r\nexport async function getCurrentGnosisToken(web3, chainId, contractAddress) {\r\n    var contract = await initBeaconContract(web3, chainId)\r\n    var account = await getAccount(web3)\r\n    var gasToken = await contract.methods.getAddressGastoken(contractAddress).call()\r\n\r\n    if (gasToken === contractAddresses[chainId]['chi']) {\r\n        return \"Using Chi\"\r\n    }\r\n    else if (gasToken === contractAddresses[chainId]['wchi']) {\r\n        return \"Using Wrapped Chi\"\r\n    }\r\n    else if (gasToken === contractAddresses[chainId]['gst2']) {\r\n        return \"Using Gas Token 2\"\r\n    }\r\n    else if (gasToken === contractAddresses[chainId]['wgst2']) {\r\n        return \"Using Wrapped GST2\"\r\n    }\r\n    else if (gasToken === contractAddresses[chainId]['gst1']) {\r\n        return \"Using Gas Token 1\"\r\n    }\r\n    else if (gasToken === contractAddresses[chainId]['wgst1']) {\r\n        return \"Using Wrapped GST1\"\r\n    }\r\n    else if (gasToken === \"0x0000000000000000000000000000000000000000\") {\r\n        return \"Has Gas Token Saving Turned OFF\"\r\n    }\r\n}\r\n\r\nexport async function approveGnosisSafeSpending(web3, chainId, contractAddress) {\r\n    var contract = await initBeaconContract(web3, chainId)\r\n    var account = await getAccount(web3)\r\n    var gasToken = await contract.methods.getAddressGastoken(contractAddress).call()\r\n    if (gasToken !== \"0x0000000000000000000000000000000000000000\") {\r\n        var gasTokencontract = await new web3.eth.Contract(require('./abi/WrappedGasToken.json')['abi'], gasToken);\r\n        await gasTokencontract.methods.approve(contractAddress, 10000000000).send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n    }\r\n}\r\n\r\nexport async function approveGasTokenSpending(web3, gastokenaddress, spenderaddress){\r\n\r\n    var gasTokencontract = await new web3.eth.Contract(require('./abi/WrappedGasToken.json')['abi'], gastokenaddress);\r\n    var account = await getAccount(web3)\r\n    var allowance = await gasTokencontract.methods.allowance(account[0], spenderaddress).call()\r\n\r\n    if(allowance < 1000 ){\r\n        await gasTokencontract.methods.approve(spenderaddress, 10000000000).send({ from: account[0] }).then(res => txnSwal('Transaction Successful', 'success')).catch(err => txnSwal('Transaction Error', 'error'));\r\n    }\r\n}\r\n","import React, { useContext } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport GlobalStyles from './../../GlobalStyles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport {\r\n  stakeGSVE, getTokenSupplyInfo, getTokenBalance,\r\n  unstakeGSVE, claimRewardTokens, rewardsRemaining,\r\n  totalStaked, userStakeSize, userTotalReward,\r\n  userUnclaimedReward\r\n} from \"./../../utils/web3_transaction_maker.js\"\r\nimport { Context } from './../../store'\r\nimport { findAllByDisplayValue } from '@testing-library/dom';\r\n\r\n\r\nexport default function Stake() {\r\n  const classes = GlobalStyles();\r\n  var swapLink = (\"https://app.uniswap.finance/#/swap?outputCurrency=0x00\")\r\n  var stakeValue = \"\";\r\n\r\n  const [state, dispatch] = useContext(Context);\r\n\r\n  const handleStakeFieldChange = (e) => {\r\n    stakeValue = e.target.value\r\n    stakeValue = stakeValue.toString();\r\n  }\r\n\r\n  const handleStakeSubmit = (e) => {\r\n    e.preventDefault();\r\n    stakeGSVE(stakeValue.toString(), state.web3, state.chainId);\r\n  }\r\n\r\n  //call data functions\r\n  const [tokensLeft, settokensLeft] = React.useState(-1);\r\n  const [tokensBurned, setTokensBurned] = React.useState(-1);\r\n  const [tokenStaked, setTokenStaked] = React.useState(-1);\r\n  const [rewardsLeft, setrewardsLeft] = React.useState(-1);\r\n\r\n  if (state.web3_caller !== null) {\r\n    if (tokenStaked === -1) {\r\n      totalStaked(state.web3_caller, state.chainId).then((value) => { setTokenStaked(value) });\r\n    }\r\n    if (rewardsLeft === -1) {\r\n      rewardsRemaining(state.web3_caller, state.chainId).then((value) => { setrewardsLeft(value) });\r\n    }\r\n    if (tokensLeft === -1) {\r\n      getTokenSupplyInfo(\"GSVE\", state.web3_caller, state.chainId).then((value) => { settokensLeft(value) });\r\n    }\r\n    if (tokensBurned === -1) {\r\n      if (tokensLeft !== -1) {\r\n        setTokensBurned(100000000 - tokensLeft);\r\n      }\r\n    }\r\n  }\r\n\r\n  //user specific functions\r\n  const [balance, setBalance] = React.useState(-1);\r\n  const [userStake, setUserStake] = React.useState(-1);\r\n  const [userUnclaimed, setUserUnclaimed] = React.useState(-1);\r\n  const [userTotalClaimed, setUserTotalClaimed] = React.useState(-1);\r\n  const [userTier, setUserTier] = React.useState(\"\");\r\n  var showUi = false\r\n  if (state.connected && state.account !== \"0x00\") {\r\n    showUi = true\r\n    if (state.web3 !== null) {\r\n      if (balance === -1) {\r\n        getTokenBalance(\"GSVE\", state.web3_caller, state.account, state.chainId).then((value) => { setBalance(value) });\r\n      }\r\n      if (userStake === -1) {\r\n        userStakeSize(state.web3_caller, state.account, state.chainId).then((value) => { setUserStake(value) });\r\n      }\r\n    }\r\n    if (userUnclaimed === -1) {\r\n      userUnclaimedReward(state.web3_caller, state.account, state.chainId).then((value) => { setUserUnclaimed(value) });\r\n    }\r\n    if (userTotalClaimed === -1) {\r\n      userTotalReward(state.web3_caller, state.account, state.chainId).then((value) => { setUserTotalClaimed(value) });\r\n    }\r\n    if (userTier === \"\" && userStake !== -1) {\r\n      if (userStake >= 1000) {\r\n        setUserTier([<Divider light />, <Typography gutterBottom variant=\"h8\" component=\"h4\"> You are a tier 2 Staker.</Typography>,\r\n        <Divider light />, <Typography gutterBottom variant=\"h8\" component=\"h4\"> You can claim gas tokens from the fee pool</Typography>,\r\n        <Divider light />, <Typography gutterBottom variant=\"h8\" component=\"h4\"> You have lower protocol mint fees!</Typography>])\r\n      }\r\n      else if (userStake >= 250) {\r\n        setUserTier([<Divider light />, <Typography gutterBottom variant=\"h8\" component=\"h4\"> You are a tier 1 Staker.</Typography>,\r\n        <Divider light />, <Typography gutterBottom variant=\"h8\" component=\"h4\"> Stake {1000 - userStake} more to reach tier 2. This will let you claim from the gas token fee pool.</Typography>,\r\n        <Divider light />, <Typography gutterBottom variant=\"h8\" component=\"h4\"> You have reduced protocol minting fees!</Typography>])\r\n      }\r\n      else {\r\n        setUserTier([<Divider light />, <Typography gutterBottom variant=\"h8\" component=\"h4\"> You are a tier 0 Staker.</Typography>,\r\n        <Divider light />, <Typography gutterBottom variant=\"h8\" component=\"h4\">  Stake {250 - userStake} more to reach tier 1 for reduced mint fees.</Typography>,\r\n        <Divider light />, <Typography gutterBottom variant=\"h8\" component=\"h4\">  Stake {1000 - userStake} more to reach tier 2. This will let you claim from the gas token fee pool.</Typography>])\r\n      }\r\n    }\r\n  }\r\n  else {\r\n    showUi = false\r\n  }\r\n\r\n  const handleUnStake = (e) => {\r\n    unstakeGSVE(state.web3, state.chainId)\r\n  }\r\n\r\n  const handleRewardClaim = (e) => {\r\n    claimRewardTokens(state.web3, state.chainId)\r\n  }\r\n\r\n  /*\r\n  var showClaim = false;\r\n  var claim;\r\n  if (showClaim) {\r\n    claim = [\r\n      <Grid item xs={12} sm={6} md={4} xl={4}>\r\n        <Paper className={classes.headerPaper}>\r\n          <Card className={classes.card} variant=\"outlined\">\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h6\" component=\"h4\">\r\n                Your GSVE Stake Reward\r\n      </Typography>\r\n              <Divider light />\r\n              <Typography gutterBottom variant=\"h7\" component=\"h4\">\r\n                You have an unclaimed GSVE Balance of : {userUnclaimed}\r\n              </Typography>\r\n              <Divider light />\r\n\r\n              <br />\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleRewardClaim} className={classes.button}> Claim Your Rewards </Button>\r\n              {false & (<Button variant=\"contained\" color=\"primary\" target=\"_blank\" href={swapLink} className={classes.button}> Trade on Uniswap </Button>)}\r\n              <br />\r\n              <br />\r\n            </CardContent>\r\n          </Card>\r\n        </Paper>\r\n      </Grid>]\r\n  }\r\n  claimTier = [<Typography gutterBottom variant=\"h7\" component=\"h4\"> In total you have claimed : {userTotalClaimed} GSVE </Typography>]\r\n  */\r\n  return (\r\n    <div className={classes.rootPage}>\r\n      <Paper className={classes.paper} component=\"p\">\r\n        <Grid container spacing={1} >\r\n          <Grid item xs={12}>\r\n            <div className=\"drawerPaper\">\r\n              <Paper className={classes.headerPaper}>\r\n                <Typography gutterBottom variant=\"h4\" component=\"h4\">\r\n                  Stake GSVE\r\n                  <Box textAlign='right'>\r\n                    <Button color=\"secondary\" variant=\"contained\" href=\"https://docs.gassave.org\">\r\n                      Find Out More\r\n                      </Button>\r\n                  </Box>\r\n                </Typography>\r\n                <Typography align=\"left\" gutterBottom variant=\"h6\" component=\"h4\">\r\n                  Stake over 250 GSVE to reduce the protocol minting fee\r\n                </Typography>\r\n                <Typography align=\"left\" gutterBottom variant=\"h6\" component=\"h4\">\r\n                  Stake over 1,000 GSVE to claim Gas Tokens from the fee pool!\r\n                </Typography>\r\n                <Typography align=\"left\" gutterBottom variant=\"h8\" component=\"h4\">\r\n                  Stake Rewards of 0.1% daily will be enabled in future!\r\n                </Typography>\r\n                <br />\r\n              </Paper>\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6} md={6} xl={6}>\r\n            <Card className={classes.headerPaper} variant=\"outlined\">\r\n              <Paper>\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h4\">\r\n                    GSVE Stake Stats\r\n                  </Typography>\r\n\r\n                  {showUi && (\r\n                    <>\r\n                      <Divider light />\r\n                      <Typography gutterBottom variant=\"h7\" component=\"h4\">\r\n                        Total GSVE Staked : {tokenStaked} Tokens\r\n                    </Typography>\r\n                    </>\r\n                  )}\r\n\r\n                  <Divider light />\r\n                  <Typography gutterBottom variant=\"h7\" component=\"h4\">\r\n                    Total GSVE Burned: {tokensBurned} Tokens\r\n                  </Typography>\r\n                  <Divider light />\r\n                  <Typography gutterBottom variant=\"h7\" component=\"h4\">\r\n                    Current GSVE Supply: {tokensLeft} Tokens\r\n                  </Typography>\r\n                  <Divider light />\r\n                  <Typography gutterBottom variant=\"h7\" component=\"h4\">\r\n                    GSVE Rewards Remaining: {rewardsLeft} Tokens\r\n                  </Typography>\r\n                </CardContent>\r\n              </Paper>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={6} xl={6}>\r\n              <Card className={classes.headerPaper} variant=\"outlined\">\r\n                <Paper>\r\n                  <CardContent>\r\n                    {showUi === true && (\r\n                      <>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h4\"> User Stats </Typography>\r\n                        <Divider light />\r\n                        {userTier}\r\n                        <Divider light />\r\n                        <br />\r\n                        <br />\r\n                      </>\r\n                    )}\r\n                    {showUi === false && (<>\r\n                      <br />\r\n                      <br />\r\n                      <Typography gutterBottom variant=\"h5\" component=\"h4\"> You Aren't Logged in</Typography>\r\n\r\n                      <br />\r\n                      <br />\r\n                    </>\r\n                    )}\r\n\r\n                  </CardContent>\r\n                </Paper>\r\n              </Card>\r\n            </Grid>\r\n          {showUi === true && (\r\n            <>\r\n              <Grid item xs={12} sm={6} md={6} xl={6}>\r\n                <Paper className={classes.headerPaper}>\r\n                  <Card className={classes.card} variant=\"outlined\">\r\n                    <CardContent>\r\n                      <Typography gutterBottom variant=\"h6\" component=\"h4\">\r\n                        Stake your GSVE\r\n                </Typography>\r\n                      <Divider light />\r\n                      <Typography gutterBottom variant=\"h7\" component=\"h4\">\r\n                        You have A GSVE Balance of : {balance}\r\n                      </Typography>\r\n                      <Divider light />\r\n                      <br />\r\n                      <br />\r\n                      <form onSubmit={e => { handleStakeSubmit(e) }}>\r\n                        <TextField id=\"stake_amount\" variant=\"outlined\" label=\"GSVE\" defaultValue=\"0\" type=\"number\" inputProps={{ step: \"any\" }} onChange={handleStakeFieldChange} />\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.button}> Stake </Button>\r\n                      </form>\r\n                      <br />\r\n                      <br />\r\n                    </CardContent>\r\n                  </Card>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} xl={6}>\r\n                <Paper className={classes.headerPaper}>\r\n                  <Card className={classes.card} variant=\"outlined\">\r\n                    <CardContent>\r\n                      <Typography gutterBottom variant=\"h6\" component=\"h4\">\r\n                        Unstake your GSVE\r\n                </Typography>\r\n                      <Divider light />\r\n                      <Typography gutterBottom variant=\"h7\" component=\"h4\">\r\n                        You have Staked : {userStake} GSVE Tokens\r\n                </Typography>\r\n                      <Divider light />\r\n                      <br />\r\n                      <br />\r\n                      <Button variant=\"contained\" color=\"primary\" onClick={handleUnStake} className={classes.button}> Unstake All </Button>\r\n                      <br />\r\n                      <br />\r\n                      <br />\r\n                    </CardContent>\r\n                  </Card>\r\n                </Paper>\r\n              </Grid>\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}","import React, { useContext } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport clsx from 'clsx';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport GlobalStyles from './../../../GlobalStyles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport { Context } from './../../../store'\r\nimport { getTokenSupplyInfo, getTokenBalance } from \"./../../../utils/web3_transaction_maker.js\"\r\n\r\nexport default function ImgMediaCard(props) {\r\n  const classes = GlobalStyles();\r\n  const [state, dispatch] = useContext(Context);\r\n\r\n  var tokenName = props.tokenName;\r\n  var tokenDescription = props.tokenDescription;\r\n  var tokenImage = props.tokenImage;\r\n  var mintable = props.mintable;\r\n  var claimable = props.claimable;\r\n  var protocolMintFee = props.protocolMintFee;\r\n  var protocolMintReward = props.protocolMintReward;\r\n  var tokenSymbol = props.tokenSymbol;\r\n  var claimBurn = props.claimBurn;\r\n  var gasStored = props.gasStored;\r\n  var contractLink = \"\"\r\n  var swapLink = \"\"\r\n  var linkText = \"\"\r\n  var tradeLinkText = \"\"\r\n  var priceLink = \"\"\r\n  var price = -1\r\n\r\n  if(state.chainId === 1 || state.chainId === 3 || state.chainId === 4 || state.chainId === 1337){\r\n    linkText = \"View on EtherScan\"\r\n    swapLink = \"https://app.uniswap.org/#/swap?outputCurrency=\" + props.tokenAddress +\"&use=V2\"\r\n    tradeLinkText = \"Trade on UniSwap\"\r\n    contractLink = \"https://etherscan.io/token/\" + props.tokenAddress\r\n    priceLink = \"https://api.coingecko.com/api/v3/simple/token_price/ethereum?contract_addresses=\" + props.tokenAddress + \"&vs_currencies=usd\"\r\n  }\r\n\r\n  const getCoinGeckoPrice = () => {\r\n        var xmlHttp = new XMLHttpRequest();\r\n        xmlHttp.open( \"GET\", priceLink, false ); // false for synchronous request\r\n        xmlHttp.send( null );\r\n        try{\r\n          price = \"$\" + JSON.parse(xmlHttp.responseText)[props.tokenAddress]['usd']\r\n        }\r\n        catch{\r\n          price=\"-\"\r\n        }\r\n  }\r\n\r\n\r\n  if (price === -1){\r\n    price = 0\r\n    getCoinGeckoPrice()\r\n  }\r\n\r\n  const [totalSupply, settotalSupply] = React.useState(0);\r\n  if(state.web3_caller !== null){\r\n    getTokenSupplyInfo(props.tokenName, state.web3_caller, state.chainId).then((value) => { settotalSupply(value) });\r\n  }\r\n  const [balance, setBalance] = React.useState(0);\r\n  var showUi = false\r\n  if (state.connected && state.account !== \"0x00\") {\r\n    showUi = true\r\n    getTokenBalance(props.tokenName, state.web3_caller, state.account, state.chainId).then((value) => { setBalance(value) });\r\n  }\r\n  else{\r\n    showUi = false\r\n  }\r\n\r\n  \r\n  var mintableButton\r\n  var mintType\r\n  \r\n    if (mintable) {\r\n      mintableButton = [<Button className={classes.button} variant=\"contained\" color=\"primary\" href=\"#mint\"> Mint </Button>]\r\n      mintType = \"Mint\"\r\n    }\r\n    else {\r\n      mintableButton = [<Button className={classes.button} variant=\"contained\" color=\"primary\" href=\"#mint\"> Wrap </Button>,\r\n      <Button className={classes.button} variant=\"contained\" color=\"primary\" href=\"#mint\"> Unwrap </Button>]\r\n      mintType = \"Wrap\"\r\n    }\r\n  \r\n  if (showUi === false){\r\n    mintableButton = [<Button variant=\"disabled\" color=\"primary\" href=\"#mint\"> Login to {mintType} </Button>]\r\n  }\r\n\r\n  var tokenStats = []\r\n  /*if(showUi === true){\r\n    tokenStats.push(<Divider light /> <Typography gutterBottom variant=\"h8\" component=\"h5\" align=\"left\"> Your Balance: {balance} </Typography>)\r\n  }*/\r\n  tokenStats.push(<Typography gutterBottom variant=\"h8\" component=\"h5\" align=\"left\"> Base Protocol Fee: {protocolMintFee} {tokenSymbol}</Typography>,\r\n  <Divider light />,\r\n  <Typography gutterBottom variant=\"h8\" component=\"h5\" align=\"left\"> Releasable Gas: {gasStored} gas</Typography>,\r\n  <Divider light />,\r\n  <Typography gutterBottom variant=\"h8\" component=\"h5\" align=\"left\"> Current Token Value: {price} </Typography>,\r\n  <Divider light />,\r\n  <Typography gutterBottom variant=\"h8\" component=\"h5\" align=\"left\"> {mintType} Reward: {protocolMintReward} </Typography>,\r\n  <Divider light />)\r\n\r\n  if (claimable) {\r\n    if(showUi === true){\r\n      mintableButton.push(<Button variant=\"contained\" color=\"primary\" href=\"#claim\"> Claim </Button>)\r\n    }\r\n    else if (showUi === false){\r\n      mintableButton.push(<Button variant=\"disabled\" color=\"primary\" href=\"#claim\"> Login to Claim </Button>)\r\n    }\r\n    tokenStats.push(<Typography gutterBottom variant=\"h8\" component=\"h5\" align=\"left\"> GSVE Burn per claimed token: {claimBurn} </Typography>)\r\n    tokenStats.push(<Divider light />)\r\n  }\r\n  else {\r\n    tokenStats.push(<br />)\r\n  }\r\n\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.headerPaper}>\r\n      <Card className={classes.root} variant=\"outlined\">\r\n        <CardContent>\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                {tokenName}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={4}>\r\n              <CardMedia\r\n                component=\"img\"\r\n                height=\"120\"\r\n                objectFit='contain'\r\n                image={\"images/tokens/\" + tokenImage + \".png\"}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={8}>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {tokenStats}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <IconButton\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n                onClick={handleExpandClick}\r\n                aria-expanded={expanded}\r\n                aria-label=\"show more\"\r\n              >\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  Token Description\r\n            </Typography>\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n              <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                <CardContent>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {tokenDescription}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Collapse>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              {mintableButton}\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <Button color=\"secondary\" target=\"_blank\" href={contractLink}>\r\n                {linkText}\r\n            </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Button color=\"secondary\" target=\"_blank\" href={swapLink}>\r\n                {tradeLinkText}\r\n            </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Paper>\r\n  );\r\n}\r\n\r\n\r\n","import React, { useContext } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ImgMediaCard from \"./components/Card.js\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport GlobalStyles from './../../GlobalStyles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { Context } from './../../store'\r\nvar contractAddresses = require('./../../utils/addresses.json');\r\n\r\nexport default function Mint() {\r\n  const classes = GlobalStyles();\r\n  const [state, dispatch] = useContext(Context);\r\n  return (\r\n    <div className={classes.rootPage}>\r\n      <Paper className={classes.paper} component=\"p\">\r\n\r\n        <Grid container spacing={1}  >\r\n          <Grid item xs={12}>\r\n            <div className=\"drawerPaper\">\r\n              <Paper className={classes.headerPaper}>\r\n                <Typography gutterBottom variant=\"h4\" component=\"h4\">\r\n                  Gas Station\r\n                 <Box textAlign='right'>\r\n                    <Button color=\"secondary\" variant=\"contained\" href=\"https://docs.gassave.org\">\r\n                      Find Out More\r\n                    </Button>\r\n                  </Box>\r\n                </Typography>\r\n                <Typography align=\"left\" gutterBottom variant=\"h6\" component=\"h4\">\r\n                  Mint Gas Tokens When Gas Fees are low\r\n              </Typography>\r\n                <Typography align=\"left\" gutterBottom variant=\"h6\" component=\"h4\">\r\n                  Burn Gas Tokens for a Rebate when fees are high\r\n              </Typography>\r\n                <Typography align=\"left\" gutterBottom variant=\"h6\" component=\"h4\">\r\n                  Claim Gas Tokens using your GSVE\r\n              </Typography>\r\n                <br />\r\n              </Paper>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={4} xl={3}>\r\n            <ImgMediaCard tokenName=\"Wrapped Chi\"\r\n              tokenDescription=\"wChi is a wrapped version of the Chi gastoken. It is wrapped for compatability with the free-tier Gas Save Protocol\"\r\n              tokenImage=\"wchi\"\r\n              mintable={false}\r\n              claimable={true}\r\n              protocolMintFee=\"3\"\r\n              protocolMintReward=\"Rewards Disabled\"\r\n              tokenSymbol=\"wChi\"\r\n              claimBurn=\"0.1\"\r\n              gasStored=\"24000\"\r\n              tokenAddress={contractAddresses[state.chainId]['wchi']} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={4} xl={3}>\r\n            <ImgMediaCard tokenName=\"Chi\"\r\n              tokenDescription=\"Chi is a gas token by 1inch. It is only meant for use with the 1inch platform. This token must be wrapped to work with Gas Save.\"\r\n              tokenImage=\"chi\"\r\n              mintable={true}\r\n              claimable={true}\r\n              protocolMintFee=\"2\"\r\n              protocolMintReward=\"Rewards Disabled\"\r\n              tokenSymbol=\"Chi\"\r\n              claimBurn=\"0.1\"\r\n              gasStored=\"24000\"\r\n              tokenAddress={contractAddresses[state.chainId]['chi']} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={4} xl={3}>\r\n            <ImgMediaCard tokenName=\"Wrapped GST2\"\r\n              tokenDescription=\"wGST2 is a wrapped version of the GST2 gastoken. It is wrapped for compatability with the free-tier Gas Save Protocol\"\r\n              tokenImage=\"wgst2\"\r\n              mintable={false}\r\n              claimable={true}\r\n              protocolMintFee=\"3\"\r\n              protocolMintReward=\"Rewards Disabled\"\r\n              tokenSymbol=\"wGST2\"\r\n              claimBurn=\"0.1\"\r\n              gasStored=\"24000\"\r\n              tokenAddress={contractAddresses[state.chainId]['wgst2']} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={4} xl={3}>\r\n            <ImgMediaCard tokenName=\"GST2\"\r\n              tokenDescription=\"GST2 is the first gas token that used child contracts to store gas. It is more efficient that GST1. It was originally aimed at developers. This token must be wrapped to work with Gas Save.\"\r\n              tokenImage=\"gst2\"\r\n              mintable={true}\r\n              claimable={true}\r\n              protocolMintFee=\"0.02\"\r\n              protocolMintReward=\"Rewards Disabled\"\r\n              tokenSymbol=\"GST2\"\r\n              claimBurn=\"0.1\"\r\n              gasStored=\"24000\"\r\n              tokenAddress={contractAddresses[state.chainId]['gst2']} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={4} xl={3}>\r\n            <ImgMediaCard tokenName=\"Wrapped GST1\"\r\n              tokenDescription=\"wGST1 is a wrapped version of the GST1 gastoken. It is wrapped for compatability with the free-tier Gas Save Protocol\"\r\n              tokenImage=\"wgst1\"\r\n              mintable={false}\r\n              claimable={true}\r\n              protocolMintFee=\"3\"\r\n              protocolMintReward=\"Rewards Disabled\"\r\n              tokenSymbol=\"wGST1\"\r\n              claimBurn=\"0.1\"\r\n              gasStored=\"15000\"\r\n              tokenAddress={contractAddresses[state.chainId]['wgst1']} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={4} xl={3}>\r\n            <ImgMediaCard tokenName=\"GST1\"\r\n              tokenDescription=\"GST1 is the original gas token and has been around since 2017. It was originally aimed as a way for developers to save fees. This token must be wrapped to work with Gas Save.\"\r\n              tokenImage=\"gst1\"\r\n              mintable={true}\r\n              claimable={true}\r\n              protocolMintFee=\"0.02\"\r\n              protocolMintReward=\"Rewards Disabled\"\r\n              tokenSymbol=\"GST1\"\r\n              claimBurn=\"0.1\"\r\n              gasStored=\"15000\"\r\n              tokenAddress={contractAddresses[state.chainId]['gst1']} />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport GlobalStyles from './../../GlobalStyles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { deployContract } from \"./../../utils/web3_transaction_maker.js\"\r\nimport { Context } from './../../store'\r\nvar contractAddresses = require('./../../utils/addresses.json');\r\n\r\nexport default function Deployer() {\r\n  const classes = GlobalStyles();\r\n  const [selectedToken, setSelectedToken] = React.useState(\"\");\r\n  const [selectedSymbol, setSelectedSymbol] = React.useState(\"\");\r\n  const [deployType, setDeployType] = React.useState(\"1\");\r\n  const [salt, setSalt] = React.useState(0);\r\n  const [byteCode, setByteCode] = React.useState(\"\");\r\n  const [showSalt, setShowSalt] = React.useState(false);\r\n\r\n  const [state, dispatch] = useContext(Context);\r\n\r\n  const handleTokenChange = (e) => {\r\n    try {\r\n      setSelectedToken(e.target.innerText.split(\"-\")[1])\r\n      setSelectedSymbol(e.target.innerText.split(\"-\")[0])\r\n    }\r\n    catch {\r\n      setSelectedToken(\"\")\r\n      setSelectedSymbol(\"\")\r\n    }\r\n  };\r\n\r\n  const handleDeployChange = (e) => {\r\n    if (e.target.value.includes(\"1\")) {\r\n      setDeployType(\"1\")\r\n      setShowSalt(false)\r\n    }\r\n    else {\r\n      setDeployType(\"2\")\r\n      setShowSalt(true)\r\n    }\r\n  }\r\n\r\n  const handleSaltChange = (e) => {\r\n    setSalt(e.target.value);\r\n    validateSalt();\r\n  }\r\n\r\n  const handleByteCodeChange = (e) => {\r\n    setByteCode(e.target.value);\r\n  }\r\n\r\n  const validateSalt = () => {\r\n    if (salt > 100000) {\r\n      setSalt(100000);\r\n    }\r\n    else if (salt < 0) {\r\n      setSalt(0);\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    deployContract(state.web3, byteCode, selectedToken, deployType, salt, state.chainId)\r\n  }\r\n\r\n  var showUi = false\r\n  if (state.connected && state.account !== \"0x00\") {\r\n    showUi = true\r\n  }\r\n  else{\r\n    showUi = false\r\n  }\r\n\r\n  var linkText;\r\n  var contractLink\r\n\r\n  if(state.chainId === 1 || state.chainId === 3 || state.chainId === 4 || state.chainId === 1337){\r\n    linkText = \"View on EtherScan\"\r\n    contractLink = \"https://etherscan.io/address/\"+ contractAddresses[state.chainId]['deployer'] +\"#code\"\r\n  }\r\n\r\n  return (\r\n    <div className={classes.rootPage}>\r\n      <Paper className={classes.paper} component=\"p\">\r\n        <Paper className={classes.headerPaper} component=\"p\">\r\n          <Typography gutterBottom variant=\"h4\" component=\"h4\">\r\n            Deployer\r\n            <Box textAlign='right'>\r\n              <Button color=\"secondary\" variant=\"contained\" href=\"https://docs.gassave.org\">\r\n                Find Out More\r\n                </Button>\r\n            </Box>\r\n          </Typography>\r\n          <Typography align=\"left\" gutterBottom variant=\"h6\" component=\"h4\">\r\n            Save up to 40% of the gas fees when deploying contracts\r\n          </Typography>\r\n          <Typography align=\"left\" gutterBottom variant=\"h7\" component=\"h4\">\r\n            Supports openzepplin ownable transfers!\r\n          </Typography>\r\n        </Paper>\r\n\r\n        <Grid container spacing={3} >\r\n          <Grid item xs={12} sm={12} md={12} xl={4}></Grid>\r\n          <Grid item xs={12} sm={12} md={12} xl={4}>\r\n            <Card className={classes.headerPaper} variant=\"outlined\">\r\n              <Paper>\r\n                <CardContent>\r\n                  <form onSubmit={e => { handleSubmit(e) }}>\r\n                    <Box align=\"center\">\r\n                      <Autocomplete\r\n                        id=\"country-select-demo\"\r\n                        style={{ width: 400, color: \"white\", background: \"white\" }}\r\n                        options={tokens}\r\n                        classes={{\r\n                          option: classes.option,\r\n                        }}\r\n                        onChange={handleTokenChange}\r\n                        autoHighlight\r\n                        getOptionLabel={(option) => option.label}\r\n                        renderOption={(option) => (\r\n                          <React.Fragment>\r\n                            {option.code} - {option.label}\r\n                          </React.Fragment>\r\n                        )}\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Gas Token\"\r\n                            variant=\"filled\"\r\n                            name=\"selectedToken\"\r\n                            inputProps={{\r\n                              ...params.inputProps,\r\n                              autoComplete: 'new-password', // disable autocomplete and autofill\r\n\r\n                            }}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </Box>\r\n                    <br />\r\n                    <Box align=\"center\">\r\n                      <TextField className={classes.textField}\r\n                        label=\"Contract Bytecode\"\r\n                        value={byteCode}\r\n                        style={{ width: 300, color: \"white\", background: \"white\" }}\r\n                        inputProps={{\r\n                          autoComplete: 'new-password', // disable autocomplete and autofill\r\n                        }}\r\n                        onChange={handleByteCodeChange}\r\n                      />\r\n                    </Box>\r\n                    <br />\r\n\r\n                    <Box align=\"center\">\r\n                      <FormControl component=\"fieldset\">\r\n                        <RadioGroup row aria-label=\"position\" name=\"position\" value={deployType.toString()} onChange={handleDeployChange}>\r\n                          <FormControlLabel value=\"1\" control={\r\n                            <Radio color=\"primary\" />} label=\"Use Create Method\" labelPlacement=\"top\" />\r\n                          <FormControlLabel value=\"2\" control={\r\n                            <Radio color=\"primary\" />} label=\"Use Create2 Method\" labelPlacement=\"top\" />\r\n                        </RadioGroup>\r\n                      </FormControl>\r\n                    </Box>\r\n\r\n                    <br />\r\n                    {showSalt && (\r\n                      <Box align=\"center\">\r\n                        <TextField\r\n                          id=\"mount\" variant=\"outlined\" label=\"Salt\"\r\n                          defaultValue=\"0\" type=\"number\" value={salt}\r\n                          inputProps={{ min: \"0\", max: \"100000\" }}\r\n                          style={{ width: 200, color: \"white\", background: \"white\" }}\r\n                          onChange={handleSaltChange}\r\n                        />\r\n                      </Box>\r\n                    )}\r\n                    <br />\r\n\r\n                    <Box align=\"center\">\r\n                      {showUi === true && (\r\n                        <Button type=\"submit\" color=\"primary\" variant=\"contained\" className={classes.button}> Deploy Contract</Button>\r\n                      )}\r\n                      {showUi === false && (\r\n                        <Button variant=\"disabled\" color=\"secondary\" className={classes.button} > Login to Deploy </Button>\r\n                      )}\r\n                      </Box>\r\n                    <Box align=\"center\">\r\n                      <Button color=\"primary\" variant=\"contained\" target=\"_blank\" href={contractLink} className={classes.button}> {linkText}</Button>\r\n                    </Box>\r\n                  </form>\r\n                </CardContent>\r\n              </Paper>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\nconst tokens = [\r\n  { code: 'wChi', label: 'Wrapped Chi', type: \"wrap\" },\r\n  { code: 'wGST2', label: 'Wrapped GST2', type: \"wrap\" },\r\n  { code: 'wGST1', label: 'Wrapped GST1', type: \"wrap\" },\r\n];","export default __webpack_public_path__ + \"static/media/walletconnect-logo.6bd40fcf.png\";","import { IChainData } from \"../helpers/types\";\r\n\r\nexport const SUPPORTED_CHAINS: IChainData[] = [\r\n  {\r\n    name: \"Ethereum Mainnet\",\r\n    short_name: \"eth\",\r\n    chain: \"ETH\",\r\n    network: \"mainnet\",\r\n    chain_id: 1,\r\n    network_id: 1,\r\n    rpc_url: \"https://mainnet.infura.io/v3/%API_KEY%\",\r\n    native_currency: {\r\n      symbol: \"ETH\",\r\n      name: \"Ether\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Ethereum Ropsten\",\r\n    short_name: \"rop\",\r\n    chain: \"ETH\",\r\n    network: \"ropsten\",\r\n    chain_id: 3,\r\n    network_id: 3,\r\n    rpc_url: \"https://ropsten.infura.io/v3/%API_KEY%\",\r\n    native_currency: {\r\n      symbol: \"ETH\",\r\n      name: \"Ether\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Ethereum Rinkeby\",\r\n    short_name: \"rin\",\r\n    chain: \"ETH\",\r\n    network: \"rinkeby\",\r\n    chain_id: 4,\r\n    network_id: 4,\r\n    rpc_url: \"https://rinkeby.infura.io/v3/%API_KEY%\",\r\n    native_currency: {\r\n      symbol: \"ETH\",\r\n      name: \"Ether\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Ethereum Görli\",\r\n    short_name: \"gor\",\r\n    chain: \"ETH\",\r\n    network: \"goerli\",\r\n    chain_id: 5,\r\n    network_id: 5,\r\n    rpc_url: \"https://goerli.infura.io/v3/%API_KEY%\",\r\n    native_currency: {\r\n      symbol: \"ETH\",\r\n      name: \"Ether\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"RSK Mainnet\",\r\n    short_name: \"rsk\",\r\n    chain: \"RSK\",\r\n    network: \"mainnet\",\r\n    chain_id: 30,\r\n    network_id: 30,\r\n    rpc_url: \"https://public-node.rsk.co\",\r\n    native_currency: {\r\n      symbol: \"R-BTC\",\r\n      name: \"Smart Bitcoin\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"RSK Testnet\",\r\n    short_name: \"trsk\",\r\n    chain: \"tRSK\",\r\n    network: \"testnet\",\r\n    chain_id: 31,\r\n    network_id: 31,\r\n    rpc_url: \"https://public-node.testnet.rsk.co\",\r\n    native_currency: {\r\n      symbol: \"tR-BTC\",\r\n      name: \"tSmart Bitcoin\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Ethereum Kovan\",\r\n    short_name: \"kov\",\r\n    chain: \"ETH\",\r\n    network: \"kovan\",\r\n    chain_id: 42,\r\n    network_id: 42,\r\n    rpc_url: \"https://kovan.infura.io/v3/%API_KEY%\",\r\n    native_currency: {\r\n      symbol: \"ETH\",\r\n      name: \"Ether\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Ethereum Classic Mainnet\",\r\n    short_name: \"etc\",\r\n    chain: \"ETC\",\r\n    network: \"mainnet\",\r\n    chain_id: 61,\r\n    network_id: 1,\r\n    rpc_url: \"https://ethereumclassic.network\",\r\n    native_currency: {\r\n      symbol: \"ETH\",\r\n      name: \"Ether Classic\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"POA Network Sokol\",\r\n    short_name: \"poa\",\r\n    chain: \"POA\",\r\n    network: \"sokol\",\r\n    chain_id: 77,\r\n    network_id: 77,\r\n    rpc_url: \"https://sokol.poa.network\",\r\n    native_currency: {\r\n      symbol: \"POA\",\r\n      name: \"POA\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"POA Network Core\",\r\n    short_name: \"skl\",\r\n    chain: \"POA\",\r\n    network: \"core\",\r\n    chain_id: 99,\r\n    network_id: 99,\r\n    rpc_url: \"https://core.poa.network\",\r\n    native_currency: {\r\n      symbol: \"POA\",\r\n      name: \"POA\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"xDAI Chain\",\r\n    short_name: \"xdai\",\r\n    chain: \"POA\",\r\n    network: \"dai\",\r\n    chain_id: 100,\r\n    network_id: 100,\r\n    rpc_url: \"https://dai.poa.network\",\r\n    native_currency: {\r\n      symbol: \"xDAI\",\r\n      name: \"xDAI\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Callisto Mainnet\",\r\n    short_name: \"clo\",\r\n    chain: \"callisto\",\r\n    network: \"mainnet\",\r\n    chain_id: 820,\r\n    network_id: 1,\r\n    rpc_url: \"https://clo-geth.0xinfra.com/\",\r\n    native_currency: {\r\n      symbol: \"CLO\",\r\n      name: \"CLO\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"ARTIS sigma1\",\r\n    short_name: \"artis-s1\",\r\n    chain: \"ATS\",\r\n    network: \"artis-s1\",\r\n    chain_id: 246529,\r\n    network_id: 246529,\r\n    rpc_url: \"https://rpc.sigma1.artis.network\",\r\n    native_currency: {\r\n      symbol: \"ATS\",\r\n      name: \"ATS\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"ARTIS tau1\",\r\n    short_name: \"artis-t1\",\r\n    chain: \"ATS\",\r\n    network: \"artis-t1\",\r\n    chain_id: 246785,\r\n    network_id: 246785,\r\n    rpc_url: \"https://rpc.tau1.artis.network\",\r\n    native_currency: {\r\n      symbol: \"ATS\",\r\n      name: \"ATS\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Eraswap Mainnet Network\",\r\n    short_name: \"ESN\",\r\n    chain: \"ESN\",\r\n    network: \"mainnet\",\r\n    chain_id: 5197,\r\n    network_id: 5197,\r\n    rpc_url: \"https://rpc-mumbai.mainnet.eraswap.network\",\r\n    native_currency: {\r\n      symbol: \"ES\",\r\n      name: \"eraswap\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n];\r\n","export const ETH_STANDARD_PATH = \"m/44'/60'/0'/0\";\r\nexport const ENTROPY_KEY = \"ENTROPY\";\r\nexport const MNEMONIC_KEY = \"MNEMONIC\";\r\n\r\nexport const DEFAULT_ACTIVE_INDEX = 0;\r\nexport const MAINNET_CHAIN_ID = 1;\r\nexport const ROPSTEN_CHAIN_ID = 3;\r\nexport const RINKEBY_CHAIN_ID = 4;\r\nexport const GOERLI_CHAIN_ID = 5;\r\nexport const DEFAULT_CHAIN_ID = RINKEBY_CHAIN_ID;\r\n","import { convertHexToUtf8 } from \"@walletconnect/utils\";\r\nimport { IChainData } from \"./types\";\r\nimport { SUPPORTED_CHAINS } from \"../constants\";\r\n\r\nexport function capitalize(string: string): string {\r\n  return string\r\n    .split(\" \")\r\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\r\n    .join(\" \");\r\n}\r\n\r\nexport function ellipseText(text = \"\", maxLength = 9999): string {\r\n  if (text.length <= maxLength) {\r\n    return text;\r\n  }\r\n  const _maxLength = maxLength - 3;\r\n  let ellipse = false;\r\n  let currentLength = 0;\r\n  const result =\r\n    text\r\n      .split(\" \")\r\n      .filter(word => {\r\n        currentLength += word.length;\r\n        if (ellipse || currentLength >= _maxLength) {\r\n          ellipse = true;\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      })\r\n      .join(\" \") + \"...\";\r\n  return result;\r\n}\r\n\r\nexport function ellipseAddress(address = \"\", width = 10): string {\r\n  return `${address.slice(0, width)}...${address.slice(-width)}`;\r\n}\r\n\r\nexport function padLeft(n: string, width: number, z?: string): string {\r\n  z = z || \"0\";\r\n  n = n + \"\";\r\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\r\n}\r\n\r\nexport function sanitizeHex(hex: string): string {\r\n  hex = hex.substring(0, 2) === \"0x\" ? hex.substring(2) : hex;\r\n  if (hex === \"\") {\r\n    return \"\";\r\n  }\r\n  hex = hex.length % 2 !== 0 ? \"0\" + hex : hex;\r\n  return \"0x\" + hex;\r\n}\r\n\r\nexport function removeHexPrefix(hex: string): string {\r\n  return hex.toLowerCase().replace(\"0x\", \"\");\r\n}\r\n\r\nexport function getDataString(func: string, arrVals: any[]): string {\r\n  let val = \"\";\r\n  for (let i = 0; i < arrVals.length; i++) {\r\n    val += padLeft(arrVals[i], 64);\r\n  }\r\n  const data = func + val;\r\n  return data;\r\n}\r\n\r\nexport function isMobile(): boolean {\r\n  let mobile = false;\r\n\r\n  function hasTouchEvent(): boolean {\r\n    try {\r\n      document.createEvent(\"TouchEvent\");\r\n      return true;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function hasMobileUserAgent(): boolean {\r\n    if (\r\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(\r\n        navigator.userAgent,\r\n      ) ||\r\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(\r\n        navigator.userAgent.substr(0, 4),\r\n      )\r\n    ) {\r\n      return true;\r\n    } else if (hasTouchEvent()) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  mobile = hasMobileUserAgent();\r\n\r\n  return mobile;\r\n}\r\n\r\nexport function payloadId(): number {\r\n  const datePart: number = new Date().getTime() * Math.pow(10, 3);\r\n  const extraPart: number = Math.floor(Math.random() * Math.pow(10, 3));\r\n  const id: number = datePart + extraPart;\r\n  return id;\r\n}\r\n\r\nexport function getChainData(chainId: number): IChainData {\r\n  const chainData = SUPPORTED_CHAINS.filter((chain: any) => chain.chain_id === chainId)[0];\r\n\r\n  if (!chainData) {\r\n    throw new Error(\"ChainId missing or not supported\");\r\n  }\r\n\r\n  const API_KEY = \"9af22c382b3142389625451f5193fc76\";\r\n\r\n  // if (!API_KEY) {\r\n  //   throw new Error(\"Environment variable REACT_APP_INFURA_PROJECT_ID is not set\");\r\n  // }\r\n\r\n  if (\r\n    chainData.rpc_url.includes(\"infura.io\") &&\r\n    chainData.rpc_url.includes(\"%API_KEY%\") &&\r\n    API_KEY\r\n  ) {\r\n    const rpcUrl = chainData.rpc_url.replace(\"%API_KEY%\", API_KEY);\r\n\r\n    return {\r\n      ...chainData,\r\n      rpc_url: rpcUrl,\r\n    };\r\n  }\r\n\r\n  return chainData;\r\n}\r\n\r\nexport function getViewportDimensions() {\r\n  const w = window;\r\n  const d = document;\r\n  const e = d.documentElement;\r\n  const g = d.getElementsByTagName(\"body\")[0];\r\n  const x = w.innerWidth || e.clientWidth || g.clientWidth;\r\n  const y = w.innerHeight || e.clientHeight || g.clientHeight;\r\n\r\n  return { x, y };\r\n}\r\n\r\nexport function convertHexToUtf8IfPossible(hex: string) {\r\n  try {\r\n    return convertHexToUtf8(hex);\r\n  } catch (e) {\r\n    return hex;\r\n  }\r\n}\r\n\r\nexport function prettyPrint(obj: any) {\r\n  return JSON.stringify(obj, null, 2);\r\n}\r\n\r\nexport function verifyPayload(payload: any) {\r\n  const { params, id, method } = payload;\r\n\r\n  if (!params || typeof params !== \"object\") {\r\n    throw new Error(\r\n      `WalletConnect Error - invalid payload params. Payload: ${prettyPrint(payload)}`,\r\n    );\r\n  }\r\n\r\n  if (!id || typeof id !== \"number\") {\r\n    throw new Error(`WalletConnect Error - invalid payload id. Payload: ${prettyPrint(payload)}`);\r\n  }\r\n\r\n  if (!method || typeof method !== \"string\") {\r\n    throw new Error(\r\n      `WalletConnect Error - invalid payload method. Payload: ${prettyPrint(payload)}`,\r\n    );\r\n  }\r\n\r\n  return;\r\n}\r\n\r\nexport function verifyFields(params: any[], keys: any[]) {\r\n  if (keys.length <= 0 || keys.filter((k: any) => typeof k !== \"string\").length !== 0) {\r\n    throw new Error(`[verifyFields] Must provide an array of fields to check`);\r\n  }\r\n  if (typeof params !== \"object\") {\r\n    throw new Error(`[verifyFields] Must provide a params object`);\r\n  }\r\n\r\n  const naStr = keys.filter(k => !params[k]);\r\n  if (naStr.length !== 0) {\r\n    throw new Error(\r\n      `[verifyFields] Params missing needed keys. Params: ${prettyPrint(\r\n        params,\r\n      )}, keys: ${prettyPrint(keys)}`,\r\n    );\r\n  }\r\n  return;\r\n}\r\n\r\nexport function getCachedSession(): any {\r\n  localStorage.clear();\r\n  const local = localStorage ? localStorage.getItem(\"walletconnect\") : null;\r\n\r\n  let session = null;\r\n  if (local) {\r\n    try {\r\n      session = JSON.parse(local);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  return session;\r\n}\r\n","import axios, { AxiosInstance } from \"axios\";\r\nimport { IJsonRpcRequest } from \"@walletconnect/types\";\r\nimport { IAssetData, IGasPrices, IParsedTx } from \"./types\";\r\nimport { payloadId, getChainData } from \"./utilities\";\r\n\r\nconst api: AxiosInstance = axios.create({\r\n  baseURL: \"https://ethereum-api.xyz\",\r\n  timeout: 30000, // 30 secs\r\n  headers: {\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport const apiSendTransaction = async (txParams: any, chainId: number): Promise<number> => {\r\n  const rpcUrl = getChainData(chainId).rpc_url;\r\n\r\n  if (!rpcUrl && typeof rpcUrl !== \"string\") {\r\n    throw new Error(\"Invalid or missing rpc url\");\r\n  }\r\n\r\n  const response = await axios.post(rpcUrl, {\r\n    jsonrpc: \"2.0\",\r\n    id: payloadId(),\r\n    method: \"eth_sendTransaction\",\r\n    params: [txParams],\r\n  });\r\n\r\n  const result = response.data.result;\r\n  return result;\r\n};\r\n\r\nexport async function apiGetAccountAssets(address: string, chainId: number): Promise<IAssetData[]> {\r\n  const response = await api.get(`/account-assets?address=${address}&chainId=${chainId}`);\r\n  const { result } = response.data;\r\n  return result;\r\n}\r\n\r\nexport async function apiGetAccountTransactions(\r\n  address: string,\r\n  chainId: number,\r\n): Promise<IParsedTx[]> {\r\n  const response = await api.get(`/account-transactions?address=${address}&chainId=${chainId}`);\r\n  const { result } = response.data;\r\n  return result;\r\n}\r\n\r\nexport const apiGetAccountNonce = async (address: string, chainId: number): Promise<string> => {\r\n  const response = await api.get(`/account-nonce?address=${address}&chainId=${chainId}`);\r\n  const { result } = response.data;\r\n  return result;\r\n};\r\n\r\nexport const apiGetGasPrices = async (): Promise<IGasPrices> => {\r\n  const response = await api.get(`/gas-prices`);\r\n  const { result } = response.data;\r\n  return result;\r\n};\r\n\r\nexport const apiGetBlockNumber = async (chainId: number): Promise<IGasPrices> => {\r\n  const response = await api.get(`/block-number?chainId=${chainId}`);\r\n  const { result } = response.data;\r\n  return result;\r\n};\r\n\r\nexport const apiGetCustomRequest = async (\r\n  chainId: number,\r\n  customRpc: Partial<IJsonRpcRequest>,\r\n): Promise<any> => {\r\n  const response = await api.post(`config-request?chainId=${chainId}`, customRpc);\r\n  const { result } = response.data;\r\n  return result;\r\n};\r\n","export let local: Storage;\r\n\r\nif (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\r\n  local = window.localStorage;\r\n}\r\n\r\nexport function setLocal(key: string, data: any) {\r\n  const jsonData = JSON.stringify(data);\r\n  if (local) {\r\n    local.setItem(key, jsonData);\r\n  }\r\n}\r\n\r\nexport function getLocal(key: string) {\r\n  let data = null;\r\n  let raw = null;\r\n  if (local) {\r\n    raw = local.getItem(key);\r\n  }\r\n  if (raw && typeof raw === \"string\") {\r\n    try {\r\n      data = JSON.parse(raw);\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  }\r\n  return data;\r\n}\r\n\r\nexport function removeLocal(key: string) {\r\n  if (local) {\r\n    local.removeItem(key);\r\n  }\r\n}\r\n\r\nexport function updateLocal(key: string, data: any) {\r\n  const localData = getLocal(key) || {};\r\n  const mergedData = { ...localData, ...data };\r\n  setLocal(key, mergedData);\r\n}\r\n","import * as ethers from \"ethers\";\r\n// import { signTypedData_v4 } from \"eth-sig-util\";\r\nimport { getChainData } from \"../helpers/utilities\";\r\nimport { setLocal, getLocal } from \"../helpers/local\";\r\nimport {\r\n  ENTROPY_KEY,\r\n  MNEMONIC_KEY,\r\n  DEFAULT_ACTIVE_INDEX,\r\n  DEFAULT_CHAIN_ID,\r\n} from \"../constants/default\";\r\nimport { getAppConfig } from \"../config\";\r\n\r\nexport class WalletController {\r\n  public path: string;\r\n  public entropy: string;\r\n  public mnemonic: string;\r\n  public wallet: ethers.Wallet;\r\n\r\n  public activeIndex: number = DEFAULT_ACTIVE_INDEX;\r\n  public activeChainId: number = DEFAULT_CHAIN_ID;\r\n\r\n  constructor() {\r\n    this.path = this.getPath();\r\n    this.entropy = this.getEntropy();\r\n    this.mnemonic = this.getMnemonic();\r\n    this.wallet = this.init();\r\n  }\r\n\r\n  get provider(): ethers.providers.Provider {\r\n    return this.wallet.provider;\r\n  }\r\n\r\n  public isActive() {\r\n    if (!this.wallet) {\r\n      return this.wallet;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public getIndex() {\r\n    return this.activeIndex;\r\n  }\r\n\r\n  public getWallet(index?: number, chainId?: number): ethers.Wallet {\r\n    if (!this.wallet || this.activeIndex === index || this.activeChainId === chainId) {\r\n      return this.init(index, chainId);\r\n    }\r\n    return this.wallet;\r\n  }\r\n\r\n  public getAccounts(count = getAppConfig().numberOfAccounts) {\r\n    const accounts = [];\r\n    let wallet = null;\r\n    for (let i = 0; i < count; i++) {\r\n      wallet = this.generateWallet(i);\r\n      accounts.push(wallet.address);\r\n    }\r\n    return accounts;\r\n  }\r\n\r\n  public getData(key: string): string {\r\n    let value = getLocal(key);\r\n    if (!value) {\r\n      switch (key) {\r\n        case ENTROPY_KEY:\r\n          value = this.generateEntropy();\r\n          break;\r\n        case MNEMONIC_KEY:\r\n          value = this.generateMnemonic();\r\n          break;\r\n        default:\r\n          throw new Error(`Unknown data key: ${key}`);\r\n      }\r\n      setLocal(key, value);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  public getPath(index: number = this.activeIndex) {\r\n    this.path = `${getAppConfig().derivationPath}/${index}`;\r\n    return this.path;\r\n  }\r\n\r\n  public generateEntropy(): string {\r\n    this.entropy = ethers.utils.hexlify(ethers.utils.randomBytes(16));\r\n    return this.entropy;\r\n  }\r\n\r\n  public generateMnemonic() {\r\n    this.mnemonic = ethers.utils.entropyToMnemonic(this.getEntropy());\r\n    return this.mnemonic;\r\n  }\r\n\r\n  public generateWallet(index: number) {\r\n    this.wallet = ethers.Wallet.fromMnemonic(this.getMnemonic(), this.getPath(index));\r\n    return this.wallet;\r\n  }\r\n\r\n  public getEntropy(): string {\r\n    return this.getData(ENTROPY_KEY);\r\n  }\r\n\r\n  public getMnemonic(): string {\r\n    return this.getData(MNEMONIC_KEY);\r\n  }\r\n\r\n  public init(index = DEFAULT_ACTIVE_INDEX, chainId = DEFAULT_CHAIN_ID): ethers.Wallet {\r\n    return this.update(index, chainId);\r\n  }\r\n\r\n  public update(index: number, chainId: number): ethers.Wallet {\r\n    const firstUpdate = typeof this.wallet === \"undefined\";\r\n    this.activeIndex = index;\r\n    this.activeChainId = chainId;\r\n    const rpcUrl = getChainData(chainId).rpc_url;\r\n    const wallet = this.generateWallet(index);\r\n    const provider = new ethers.providers.JsonRpcProvider(rpcUrl);\r\n    this.wallet = wallet.connect(provider);\r\n    if (!firstUpdate) {\r\n      // update another controller if necessary here\r\n    }\r\n    return this.wallet;\r\n  }\r\n\r\n  public async populateTransaction(transaction: any) {\r\n    let tx = Object.assign({}, transaction);\r\n    if (this.wallet) {\r\n      if (tx.gas) {\r\n        tx.gasLimit = tx.gas;\r\n        delete tx.gas;\r\n      }\r\n      if (tx.from) {\r\n        tx.from = ethers.utils.getAddress(tx.from);\r\n      }\r\n\r\n      try {\r\n        tx = await this.wallet.populateTransaction(tx);\r\n        tx.gasLimit = ethers.BigNumber.from(tx.gasLimit).toHexString();\r\n        tx.gasPrice = ethers.BigNumber.from(tx.gasPrice).toHexString();\r\n        tx.nonce = ethers.BigNumber.from(tx.nonce).toHexString();\r\n      } catch (err) {\r\n        console.error(\"Error populating transaction\", tx, err);\r\n      }\r\n    }\r\n\r\n    return tx;\r\n  }\r\n\r\n  public async sendTransaction(transaction: any) {\r\n    if (this.wallet) {\r\n      if (\r\n        transaction.from &&\r\n        transaction.from.toLowerCase() !== this.wallet.address.toLowerCase()\r\n      ) {\r\n        console.error(\"Transaction request From doesn't match active account\");\r\n      }\r\n\r\n      if (transaction.from) {\r\n        delete transaction.from;\r\n      }\r\n\r\n      // ethers.js expects gasLimit instead\r\n      if (\"gas\" in transaction) {\r\n        transaction.gasLimit = transaction.gas;\r\n        delete transaction.gas;\r\n      }\r\n\r\n      const result = await this.wallet.sendTransaction(transaction);\r\n      return result.hash;\r\n    } else {\r\n      console.error(\"No Active Account\");\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public async signTransaction(data: any) {\r\n    if (this.wallet) {\r\n      if (data && data.from) {\r\n        delete data.from;\r\n      }\r\n      data.gasLimit = data.gas;\r\n      delete data.gas;\r\n      const result = await this.wallet.signTransaction(data);\r\n      return result;\r\n    } else {\r\n      console.error(\"No Active Account\");\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public async signMessage(data: any) {\r\n    if (this.wallet) {\r\n      const signingKey = new ethers.utils.SigningKey(this.wallet.privateKey);\r\n      const sigParams = await signingKey.signDigest(ethers.utils.arrayify(data));\r\n      const result = await ethers.utils.joinSignature(sigParams);\r\n      return result;\r\n    } else {\r\n      console.error(\"No Active Account\");\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public async signPersonalMessage(message: any) {\r\n    if (this.wallet) {\r\n      const result = await this.wallet.signMessage(\r\n        ethers.utils.isHexString(message) ? ethers.utils.arrayify(message) : message,\r\n      );\r\n      return result;\r\n    } else {\r\n      console.error(\"No Active Account\");\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public async signTypedData(data: any) {\r\n    if (this.wallet) {\r\n      const result = \"\"\r\n      return result;\r\n    } else {\r\n      console.error(\"No Active Account\");\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getWalletController() {\r\n  return new WalletController();\r\n}\r\n","import { setLocal, getLocal, removeLocal } from \"../helpers/local\";\r\n\r\nexport class StoreController {\r\n  public async set(key: string, data: any): Promise<void> {\r\n    return setLocal(key, data);\r\n  }\r\n  public async get(key: string): Promise<any> {\r\n    return getLocal(key);\r\n  }\r\n  public async remove(key: string): Promise<void> {\r\n    return removeLocal(key);\r\n  }\r\n}\r\n\r\nexport function getStoreController() {\r\n  return new StoreController();\r\n}\r\n","import { WalletController, getWalletController } from \"./wallet\";\r\nimport { StoreController, getStoreController } from \"./store\";\r\n\r\ninterface IAppControllers {\r\n  store: StoreController;\r\n  wallet: WalletController;\r\n}\r\n\r\nlet controllers: IAppControllers | undefined;\r\n\r\nexport function setupAppControllers(): IAppControllers {\r\n  const wallet = getWalletController();\r\n  const store = getStoreController();\r\n  controllers = { store, wallet };\r\n  return controllers;\r\n}\r\n\r\nexport function getAppControllers(): IAppControllers {\r\n  let _controllers = controllers;\r\n  if (!_controllers) {\r\n    _controllers = setupAppControllers();\r\n  }\r\n  return _controllers;\r\n}\r\n","import { signingMethods, convertHexToNumber } from \"@walletconnect/utils\";\r\n\r\nimport { IAppState } from \"../WalletConnectPage\";\r\nimport { apiGetCustomRequest } from \"../helpers/api\";\r\nimport { convertHexToUtf8IfPossible } from \"../helpers/utilities\";\r\nimport { IRequestRenderParams, IRpcEngine } from \"../helpers/types\";\r\nimport { getAppControllers } from \"../controllers\";\r\n\r\nexport function filterEthereumRequests(payload: any) {\r\n  return (\r\n    payload.method.startsWith(\"eth_\") ||\r\n    payload.method.startsWith(\"net_\") ||\r\n    payload.method.startsWith(\"shh_\") ||\r\n    payload.method.startsWith(\"personal_\") ||\r\n    payload.method.startsWith(\"wallet_\")\r\n  );\r\n}\r\n\r\nexport async function routeEthereumRequests(payload: any, state: IAppState, setState: any) {\r\n  if (!state.connector) {\r\n    return;\r\n  }\r\n  const { chainId, connector } = state;\r\n  if (!signingMethods.includes(payload.method)) {\r\n    try {\r\n      const result = await apiGetCustomRequest(chainId, payload);\r\n      connector.approveRequest({\r\n        id: payload.id,\r\n        result,\r\n      });\r\n    } catch (error) {\r\n      return connector.rejectRequest({\r\n        id: payload.id,\r\n        error: { message: \"JSON RPC method not supported\" },\r\n      });\r\n    }\r\n  } else {\r\n    const requests = state.requests;\r\n    requests.push(payload);\r\n    await setState({ requests });\r\n  }\r\n}\r\n\r\nexport function renderEthereumRequests(payload: any): IRequestRenderParams[] {\r\n  let params = [{ label: \"Method\", value: payload.method }];\r\n\r\n  switch (payload.method) {\r\n    case \"eth_sendTransaction\":\r\n    case \"eth_signTransaction\":\r\n      params = [\r\n        ...params,\r\n        { label: \"From\", value: payload.params[0].from },\r\n        { label: \"To\", value: payload.params[0].to },\r\n        {\r\n          label: \"Gas Limit\",\r\n          value: payload.params[0].gas\r\n            ? convertHexToNumber(payload.params[0].gas)\r\n            : payload.params[0].gasLimit\r\n            ? convertHexToNumber(payload.params[0].gasLimit)\r\n            : \"\",\r\n        },\r\n        {\r\n          label: \"Gas Price\",\r\n          value: convertHexToNumber(payload.params[0].gasPrice),\r\n        },\r\n        {\r\n          label: \"Nonce\",\r\n          value: convertHexToNumber(payload.params[0].nonce),\r\n        },\r\n        {\r\n          label: \"Value\",\r\n          value: payload.params[0].value ? convertHexToNumber(payload.params[0].value) : \"\",\r\n        },\r\n        { label: \"Data\", value: payload.params[0].data },\r\n      ];\r\n      break;\r\n\r\n    case \"eth_sign\":\r\n      params = [\r\n        ...params,\r\n        { label: \"Address\", value: payload.params[0] },\r\n        { label: \"Message\", value: payload.params[1] },\r\n      ];\r\n      break;\r\n    case \"personal_sign\":\r\n      params = [\r\n        ...params,\r\n        { label: \"Address\", value: payload.params[1] },\r\n        {\r\n          label: \"Message\",\r\n          value: convertHexToUtf8IfPossible(payload.params[0]),\r\n        },\r\n      ];\r\n      break;\r\n    default:\r\n      params = [\r\n        ...params,\r\n        {\r\n          label: \"params\",\r\n          value: JSON.stringify(payload.params, null, \"\\t\"),\r\n        },\r\n      ];\r\n      break;\r\n  }\r\n  return params;\r\n}\r\n\r\nexport async function signEthereumRequests(payload: any, state: IAppState, setState: any) {\r\n  const { connector, address, activeIndex, chainId } = state;\r\n\r\n  let errorMsg = \"\";\r\n  let result = null;\r\n\r\n  if (connector) {\r\n    if (!getAppControllers().wallet.isActive()) {\r\n      await getAppControllers().wallet.init(activeIndex, chainId);\r\n    }\r\n\r\n    let transaction = null;\r\n    let dataToSign = null;\r\n    let addressRequested = null;\r\n\r\n    switch (payload.method) {\r\n      case \"eth_sendTransaction\":\r\n        transaction = payload.params[0];\r\n        addressRequested = transaction.from;\r\n        if (address.toLowerCase() === addressRequested.toLowerCase()) {\r\n          result = await getAppControllers().wallet.sendTransaction(transaction);\r\n        } else {\r\n          errorMsg = \"Address requested does not match active account\";\r\n        }\r\n        break;\r\n      case \"eth_signTransaction\":\r\n        transaction = payload.params[0];\r\n        addressRequested = transaction.from;\r\n        if (address.toLowerCase() === addressRequested.toLowerCase()) {\r\n          result = await getAppControllers().wallet.signTransaction(transaction);\r\n        } else {\r\n          errorMsg = \"Address requested does not match active account\";\r\n        }\r\n        break;\r\n      case \"eth_sign\":\r\n        dataToSign = payload.params[1];\r\n        addressRequested = payload.params[0];\r\n        if (address.toLowerCase() === addressRequested.toLowerCase()) {\r\n          result = await getAppControllers().wallet.signMessage(dataToSign);\r\n        } else {\r\n          errorMsg = \"Address requested does not match active account\";\r\n        }\r\n        break;\r\n      case \"personal_sign\":\r\n        dataToSign = payload.params[0];\r\n        addressRequested = payload.params[1];\r\n        if (address.toLowerCase() === addressRequested.toLowerCase()) {\r\n          result = await getAppControllers().wallet.signPersonalMessage(dataToSign);\r\n        } else {\r\n          errorMsg = \"Address requested does not match active account\";\r\n        }\r\n        break;\r\n      case \"eth_signTypedData\":\r\n        dataToSign = payload.params[1];\r\n        addressRequested = payload.params[0];\r\n        if (address.toLowerCase() === addressRequested.toLowerCase()) {\r\n          result = await getAppControllers().wallet.signTypedData(dataToSign);\r\n        } else {\r\n          errorMsg = \"Address requested does not match active account\";\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (result) {\r\n      connector.approveRequest({\r\n        id: payload.id,\r\n        result,\r\n      });\r\n    } else {\r\n      let message = \"JSON RPC method not supported\";\r\n      if (errorMsg) {\r\n        message = errorMsg;\r\n      }\r\n      if (!getAppControllers().wallet.isActive()) {\r\n        message = \"No Active Account\";\r\n      }\r\n      connector.rejectRequest({\r\n        id: payload.id,\r\n        error: { message },\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nconst ethereum: IRpcEngine = {\r\n  filter: filterEthereumRequests,\r\n  router: routeEthereumRequests,\r\n  render: renderEthereumRequests,\r\n  signer: signEthereumRequests,\r\n};\r\n\r\nexport default ethereum;\r\n","import { IRpcEngine } from \"../helpers/types\";\r\nimport { IAppState } from \"../WalletConnectPage\";\r\nimport ethereum from \"./ethereum\";\r\n\r\nclass RpcEngine implements IRpcEngine {\r\n  public engines: IRpcEngine[];\r\n  constructor(engines: IRpcEngine[]) {\r\n    this.engines = engines;\r\n  }\r\n\r\n  public filter(payload: any) {\r\n    const engine = this.getEngine(payload);\r\n    return engine.filter(payload);\r\n  }\r\n\r\n  public router(payload: any, state: IAppState, setState: any) {\r\n    const engine = this.getEngine(payload);\r\n    return engine.router(payload, state, setState);\r\n  }\r\n\r\n  public render(payload: any) {\r\n    const engine = this.getEngine(payload);\r\n    return engine.render(payload);\r\n  }\r\n\r\n  public signer(payload: any, state: IAppState, setState: any) {\r\n    const engine = this.getEngine(payload);\r\n    return engine.signer(payload, state, setState);\r\n  }\r\n\r\n  private getEngine(payload: any) {\r\n    const match = this.engines.filter(engine => engine.filter(payload));\r\n    if (!match || !match.length) {\r\n      throw new Error(`No RPC Engine found to handle payload with method ${payload.method}`);\r\n    }\r\n    return match[0];\r\n  }\r\n}\r\n\r\nexport function getRpcEngine() {\r\n  return new RpcEngine([ethereum]);\r\n}\r\n","import walletconnectLogo from \"./assets/walletconnect-logo.png\";\r\nimport { SUPPORTED_CHAINS, MAINNET_CHAIN_ID, ETH_STANDARD_PATH } from \"../constants\";\r\nimport { IAppConfig } from \"../helpers/types\";\r\nimport { getRpcEngine } from \"../engines\";\r\n\r\nconst appConfig: IAppConfig = {\r\n  name: \"Gsve Walletconnect\",\r\n  logo: walletconnectLogo,\r\n  chainId: MAINNET_CHAIN_ID,\r\n  derivationPath: ETH_STANDARD_PATH,\r\n  numberOfAccounts: 3,\r\n  colors: {\r\n    defaultColor: \"12, 12, 13\",\r\n    backgroundColor: \"40, 44, 52\",\r\n  },\r\n  chains: SUPPORTED_CHAINS,\r\n  styleOpts: {\r\n    showPasteUri: true,\r\n    showVersion: true,\r\n  },\r\n  rpcEngine: getRpcEngine(),\r\n  events: {\r\n    init: (state, setState) => Promise.resolve(),\r\n    update: (state, setState) => Promise.resolve(),\r\n  },\r\n};\r\n\r\nexport function getAppConfig(): IAppConfig {\r\n  return appConfig;\r\n}\r\n","import { getAppConfig } from \"./config\";\r\n\r\nexport const baseColors = {\r\n  white: \"255, 255, 255\",\r\n  black: \"0, 0, 0\",\r\n  dark: \"12, 12, 13\",\r\n  grey: \"169, 169, 188\",\r\n  darkGrey: \"113, 119, 138\",\r\n  lightGrey: \"212, 212, 212\",\r\n  blue: \"101, 127, 230\",\r\n  lightBlue: \"64, 153, 255\",\r\n  yellow: \"250, 188, 45\",\r\n  orange: \"246, 133, 27\",\r\n  green: \"84, 209, 146\",\r\n  pink: \"255, 51, 102\",\r\n  red: \"214, 75, 71\",\r\n  purple: \"110, 107, 233\",\r\n};\r\n\r\nexport const colors = {\r\n  ...baseColors,\r\n  ...getAppConfig().colors,\r\n};\r\n\r\nexport const fonts = {\r\n  size: {\r\n    tiny: \"10px\",\r\n    small: \"14px\",\r\n    medium: \"16px\",\r\n    large: \"18px\",\r\n    h1: \"60px\",\r\n    h2: \"50px\",\r\n    h3: \"40px\",\r\n    h4: \"32px\",\r\n    h5: \"24px\",\r\n    h6: \"20px\",\r\n  },\r\n  weight: {\r\n    normal: 400,\r\n    medium: 500,\r\n    semibold: 600,\r\n    bold: 700,\r\n    extrabold: 800,\r\n  },\r\n  family: {\r\n    OpenSans: `\"Open Sans\", sans-serif`,\r\n  },\r\n};\r\n\r\nexport const transitions = {\r\n  short: \"all 0.1s ease-in-out\",\r\n  base: \"all 0.2s ease-in-out\",\r\n  long: \"all 0.3s ease-in-out\",\r\n  button: \"all 0.15s ease-in-out\",\r\n};\r\n\r\nexport const shadows = {\r\n  soft:\r\n    \"0 4px 6px 0 rgba(50, 50, 93, 0.11), 0 1px 3px 0 rgba(0, 0, 0, 0.08), inset 0 0 1px 0 rgba(0, 0, 0, 0.06)\",\r\n  medium:\r\n    \"0 3px 6px 0 rgba(0, 0, 0, 0.06), 0 0 1px 0 rgba(50, 50, 93, 0.02), 0 5px 10px 0 rgba(59, 59, 92, 0.08)\",\r\n  hard:\r\n    \"0px 2px 6px 0 rgba(0, 0, 0, 0.1), 0 0 1px 0 rgba(50,50,93,0.02), -1px 2px 10px 0 rgba(59, 59, 92, 0.15)\",\r\n  big: \"0 15px 35px 0 rgba(50, 50, 93, 0.06), 0 5px 15px 0 rgba(50, 50, 93, 0.15)\",\r\n  hover:\r\n    \"0 7px 14px 0 rgba(50, 50, 93, 0.1), 0 3px 6px 0 rgba(0, 0, 0, 0.08), inset 0 0 1px 0 rgba(0, 0, 0, 0.06)\",\r\n};\r\n\r\nexport const responsive = {\r\n  xs: {\r\n    min: \"min-width: 467px\",\r\n    max: \"max-width: 468px\",\r\n  },\r\n  sm: {\r\n    min: \"min-width: 639px\",\r\n    max: \"max-width: 640px\",\r\n  },\r\n  md: {\r\n    min: \"min-width: 959px\",\r\n    max: \"max-width: 960px\",\r\n  },\r\n  lg: {\r\n    min: \"min-width: 1023px\",\r\n    max: \"max-width: 1024px\",\r\n  },\r\n  xl: {\r\n    min: \"min-width: 1399px\",\r\n    max: \"max-width: 1400px\",\r\n  },\r\n};\r\n\r\nexport const globalStyle = `\r\n  html, body, #root {\r\n    height: 100%;\r\n    width: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  body {\r\n    font-family: ${fonts.family.OpenSans};\r\n    font-style: normal;\r\n    font-stretch: normal;\r\n    font-weight: ${fonts.weight.normal};\r\n    font-size: ${fonts.size.medium};\r\n    background-color: rgb(${colors.backgroundColor});\r\n    color: rgb(${colors.white});\r\n    overflow-y:auto;\r\n    text-rendering: optimizeLegibility;\r\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  \t-webkit-text-size-adjust: 100%;\r\n    -webkit-overflow-scrolling: touch;\r\n    -ms-text-size-adjust: 100%;\r\n    -webkit-text-size-adjust: 100%;  \r\n  }\r\n\r\n  button {\r\n    border-style: none;\r\n    line-height: 1em;\r\n    background-image: none;\r\n    outline: 0;\r\n    -webkit-box-shadow: none;\r\n            box-shadow: none;\r\n  }\r\n\r\n  [tabindex] {\r\n    outline: none;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  a, p, h1, h2, h3, h4, h5, h6 {\r\n  \ttext-decoration: none;\r\n  \tmargin: 0;\r\n    padding: 0;\r\n    margin: 0.7em 0;\r\n  }\r\n\r\n  h1 {\r\n    font-size: ${fonts.size.h1}\r\n  }\r\n  h2 {\r\n    font-size: ${fonts.size.h2}\r\n  }\r\n  h3 {\r\n    font-size: ${fonts.size.h3}\r\n  }\r\n  h4 {\r\n    font-size: ${fonts.size.h4}\r\n  }\r\n  h5 {\r\n    font-size: ${fonts.size.h5}\r\n  }\r\n  h6 {\r\n    font-size: ${fonts.size.h6}\r\n  }\r\n\r\n  a {\r\n    background-color: transparent;\r\n    -webkit-text-decoration-skip: objects;  \r\n    text-decoration: none;\r\n    color: inherit;\r\n    outline: none;\r\n  }\r\n\r\n  b,\r\n  strong {\r\n    font-weight: inherit;\r\n    font-weight: bolder;\r\n  }\r\n\r\n  ul, li {\r\n  \tlist-style: none;\r\n  \tmargin: 0;\r\n  \tpadding: 0;\r\n  }\r\n\r\n  * {\r\n    box-sizing: border-box !important;\r\n  }\r\n\r\n\r\n  input {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  article,\r\n  aside,\r\n  details,\r\n  figcaption,\r\n  figure,\r\n  footer,\r\n  header,\r\n  main,\r\n  menu,\r\n  nav,\r\n  section,\r\n  summary {\r\n    display: block;\r\n  }\r\n  audio,\r\n  canvas,\r\n  progress,\r\n  video {\r\n    display: inline-block;\r\n  }\r\n\r\n  input[type=\"color\"],\r\n  input[type=\"date\"],\r\n  input[type=\"datetime\"],\r\n  input[type=\"datetime-local\"],\r\n  input[type=\"email\"],\r\n  input[type=\"month\"],\r\n  input[type=\"number\"],\r\n  input[type=\"password\"],\r\n  input[type=\"search\"],\r\n  input[type=\"tel\"],\r\n  input[type=\"text\"],\r\n  input[type=\"time\"],\r\n  input[type=\"url\"],\r\n  input[type=\"week\"],\r\n  select:focus,\r\n  textarea {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n","import * as React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { fonts, colors } from \"../styles\";\r\n\r\ninterface ILoaderStyleProps {\r\n  size: number;\r\n  color: string;\r\n  background: string;\r\n}\r\n\r\nconst load = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst SLoader = styled.div<ILoaderStyleProps>`\r\n  position: relative;\r\n  font-size: ${fonts.size.tiny};\r\n  margin: 0 auto;\r\n  text-indent: -9999em;\r\n  width: ${({ size }) => `${size}px`};\r\n  height: ${({ size }) => `${size}px`};\r\n  border-radius: 50%;\r\n  background: ${({ color }) => `rgb(${colors[color]})`};\r\n  background: ${({ background, color }) =>\r\n    `linear-gradient(to right, rgb(${colors[color]}) 10%, rgba(${colors[background]}, 0) 42%)`};\r\n  animation: ${load} 1s infinite linear;\r\n  transform: translateZ(0);\r\n\r\n  &:before {\r\n    width: 50%;\r\n    height: 50%;\r\n    background: ${({ color }) => `rgb(${colors[color]})`};\r\n    border-radius: 100% 0 0 0;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    content: \"\";\r\n  }\r\n\r\n  &:after {\r\n    background: ${({ background }) => `rgb(${colors[background]})`};\r\n    width: 75%;\r\n    height: 75%;\r\n    border-radius: 50%;\r\n    content: \"\";\r\n    margin: auto;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n  }\r\n`;\r\n\r\nconst Loader = (props: ILoaderStyleProps) => (\r\n  <SLoader {...props} size={props.size} color={props.color} background={props.background} />\r\n);\r\n\r\nLoader.defaultProps = {\r\n  size: 50,\r\n  color: \"defaultColor\",\r\n  background: \"white\",\r\n};\r\n\r\nexport default Loader;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"./Loader\";\r\nimport { colors, fonts, shadows, transitions } from \"../styles\";\r\n\r\ninterface IButtonStyleProps {\r\n  fetching: boolean;\r\n  outline: boolean;\r\n  type: \"button\" | \"submit\" | \"reset\";\r\n  color: string;\r\n  disabled: boolean;\r\n  icon: any;\r\n  left: boolean;\r\n}\r\n\r\ninterface IButtonProps extends IButtonStyleProps {\r\n  children: React.ReactNode;\r\n  onClick?: any;\r\n}\r\n\r\nconst SIcon = styled.div`\r\n  position: absolute;\r\n  height: 15px;\r\n  width: 15px;\r\n  margin: 0 8px;\r\n  top: calc((100% - 15px) / 2);\r\n`;\r\n\r\nconst SHoverLayer = styled.div`\r\n  transition: ${transitions.button};\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n  background-color: rgb(${colors.white}, 0.1);\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  left: 0;\r\n  pointer-events: none;\r\n  opacity: 0;\r\n  visibility: hidden;\r\n`;\r\n\r\nconst SButton = styled.button<IButtonStyleProps>`\r\n  transition: ${transitions.button};\r\n  position: relative;\r\n  border: none;\r\n  border-style: none;\r\n  box-sizing: border-box;\r\n  background-color: ${({ outline, color }) => (outline ? \"transparent\" : `rgb(${colors[color]})`)};\r\n  border: ${({ outline, color }) => (outline ? `1px solid rgb(${colors[color]})` : \"none\")};\r\n  color: ${({ outline, color }) => (outline ? `rgb(${colors[color]})` : `rgb(${colors.white})`)};\r\n  box-shadow: ${({ outline }) => (outline ? \"none\" : `${shadows.soft}`)};\r\n  border-radius: 8px;\r\n  font-size: ${fonts.size.medium};\r\n  font-weight: ${fonts.weight.semibold};\r\n  padding: ${({ icon, left }) =>\r\n    icon ? (left ? \"7px 12px 8px 28px\" : \"7px 28px 8px 12px\") : \"8px 12px\"};\r\n  cursor: ${({ disabled }) => (disabled ? \"auto\" : \"pointer\")};\r\n  will-change: transform;\r\n\r\n  &:disabled {\r\n    opacity: 0.6;\r\n    box-shadow: ${({ outline }) => (outline ? \"none\" : `${shadows.soft}`)};\r\n  }\r\n\r\n  @media (hover: hover) {\r\n    &:hover {\r\n      transform: ${({ disabled }) => (!disabled ? \"translateY(-1px)\" : \"none\")};\r\n      box-shadow: ${({ disabled, outline }) =>\r\n        !disabled ? (outline ? \"none\" : `${shadows.hover}`) : `${shadows.soft}`};\r\n    }\r\n\r\n    &:hover ${SHoverLayer} {\r\n      opacity: 1;\r\n      visibility: visible;\r\n    }\r\n  }\r\n\r\n  &:active {\r\n    transform: ${({ disabled }) => (!disabled ? \"translateY(1px)\" : \"none\")};\r\n    box-shadow: ${({ outline }) => (outline ? \"none\" : `${shadows.soft}`)};\r\n    color: ${({ outline, color }) =>\r\n      outline ? `rgb(${colors[color]})` : `rgba(${colors.white}, 0.24)`};\r\n\r\n    & ${SIcon} {\r\n      opacity: 0.8;\r\n    }\r\n  }\r\n\r\n  & ${SIcon} {\r\n    right: ${({ left }) => (left ? \"auto\" : \"0\")};\r\n    left: ${({ left }) => (left ? \"0\" : \"auto\")};\r\n    display: ${({ icon }) => (icon ? \"block\" : \"none\")};\r\n    mask: ${({ icon }) => (icon ? `url(${icon}) center no-repeat` : \"none\")};\r\n    background-color: ${({ outline, color }) =>\r\n      outline ? `rgb(${colors[color]})` : `rgb(${colors.white})`};\r\n    transition: 0.15s ease;\r\n  }\r\n`;\r\n\r\nconst Button = (props: IButtonProps) => (\r\n  <SButton\r\n    {...props}\r\n    type={props.type}\r\n    outline={props.outline}\r\n    color={props.color}\r\n    disabled={props.disabled}\r\n    icon={props.icon}\r\n    left={props.left}\r\n  >\r\n    <SHoverLayer />\r\n    <SIcon />\r\n    {props.fetching ? <Loader size={20} color=\"white\" background={props.color} /> : props.children}\r\n  </SButton>\r\n);\r\n\r\nButton.defaultProps = {\r\n  fetching: false,\r\n  outline: false,\r\n  type: \"button\",\r\n  color: \"defaultColor\",\r\n  disabled: false,\r\n  icon: null,\r\n  left: false,\r\n};\r\n\r\nexport default Button;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { colors } from \"../styles\";\r\n\r\ninterface ICardStyleProps {\r\n  maxWidth: number;\r\n}\r\n\r\ninterface ICardProps extends ICardStyleProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst SCard = styled.div<ICardStyleProps>`\r\n  width: 100%;\r\n  max-width: ${({ maxWidth }) => `${maxWidth}px`};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: rgb(${colors.white});\r\n  color: rgb(${colors.defaultColor});\r\n  border-radius: 6px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Card = (props: ICardProps) => {\r\n  return (\r\n    <SCard {...props} maxWidth={props.maxWidth}>\r\n      {props.children}\r\n    </SCard>\r\n  );\r\n};\r\n\r\nCard.defaultProps = {\r\n  maxWidth: 600,\r\n};\r\n\r\nexport default Card;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { colors, shadows } from \"../styles\";\r\n\r\nconst SInput = styled.input`\r\n  border: none;\r\n  background: rgb(${colors.white});\r\n  border-style: none;\r\n  padding: 12px;\r\n  outline: none;\r\n  font-style: normal;\r\n  font-stretch: normal;\r\n  line-height: normal;\r\n  letter-spacing: normal;\r\n  font-style: normal;\r\n  font-stretch: normal;\r\n  line-height: normal;\r\n  letter-spacing: normal;\r\n  text-align: left;\r\n  border-radius: 8px;\r\n  box-shadow: ${shadows.hard};\r\n`;\r\n\r\nconst Input = (props: any) => <SInput {...props} />;\r\n\r\nexport default Input;\r\n","import * as React from \"react\";\r\nimport * as blockies from \"blockies-ts\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IBlockieStyleProps {\r\n  size: number;\r\n}\r\n\r\ninterface IBlockieProps extends IBlockieStyleProps {\r\n  address: string;\r\n}\r\n\r\nconst SBlockieWrapper = styled.div<IBlockieStyleProps>`\r\n  width: ${({ size }) => `${size}px`};\r\n  height: ${({ size }) => `${size}px`};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 6px;\r\n  overflow: hidden;\r\n  & img {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Blockie = (props: IBlockieProps) => {\r\n  const seed = props.address.toLowerCase() || \"\";\r\n  const imgUrl = blockies\r\n    .create({\r\n      seed,\r\n    })\r\n    .toDataURL();\r\n  return (\r\n    <SBlockieWrapper {...props} size={props.size}>\r\n      <img src={imgUrl} alt={props.address} />\r\n    </SBlockieWrapper>\r\n  );\r\n};\r\n\r\nBlockie.defaultProps = {\r\n  address: \"0x0000000000000000000000000000000000000000\",\r\n  size: 30,\r\n};\r\n\r\nexport default Blockie;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Blockie from \"./Blockie\";\r\nimport { fonts, responsive, transitions } from \"../styles\";\r\n\r\nconst SHeader = styled.div`\r\n  margin-top: -1px;\r\n  margin-bottom: 1px;\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 16px;\r\n  @media screen and (${responsive.sm.max}) {\r\n    font-size: ${fonts.size.small};\r\n  }\r\n`;\r\n\r\nconst SActiveAccount = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst SActiveChain = styled(SActiveAccount as any)`\r\n  flex-direction: column;\r\n  text-align: left;\r\n  align-items: flex-start;\r\n  & p {\r\n    font-size: 0.8em;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  & p:nth-child(2) {\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\ninterface IHeaderStyle {\r\n  connected: boolean;\r\n}\r\n\r\nconst SAddress = styled.p<IHeaderStyle>`\r\n  transition: ${transitions.base};\r\n  font-weight: bold;\r\n  margin: ${({ connected }) => (connected ? \"-2px auto 0.7em\" : \"0\")};\r\n`;\r\n\r\nconst SBlockie = styled(Blockie)`\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst SDisconnect = styled.div<IHeaderStyle>`\r\n  transition: ${transitions.button};\r\n  font-size: 12px;\r\n  font-family: monospace;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 20px;\r\n  opacity: 0.7;\r\n  cursor: pointer;\r\n\r\n  opacity: ${({ connected }) => (connected ? 1 : 0)};\r\n  visibility: ${({ connected }) => (connected ? \"visible\" : \"hidden\")};\r\n  pointer-events: ${({ connected }) => (connected ? \"auto\" : \"none\")};\r\n\r\n  &:hover {\r\n    transform: translateY(-1px);\r\n    opacity: 0.5;\r\n  }\r\n`;\r\n\r\ninterface IHeaderProps {\r\n  killSession: () => void;\r\n  connected: boolean;\r\n  address: string;\r\n  chainId: number;\r\n  activeChain: string;\r\n}\r\n\r\nconst Header = (props: IHeaderProps) => {\r\n  const { connected, address, chainId, killSession, activeChain } = props;\r\n  return (\r\n    <SHeader {...props}>\r\n      {activeChain && (\r\n        <SActiveChain>\r\n          <p>{`Connected to`}</p>\r\n          <p>Chain ID : {chainId}</p>\r\n        </SActiveChain>\r\n      )}\r\n      {address && (\r\n        <SActiveAccount>\r\n          <SBlockie address={address} />\r\n          <SAddress connected={connected}>{address}</SAddress>\r\n          <SDisconnect connected={connected} onClick={killSession}>\r\n            {\"Disconnect\"}\r\n          </SDisconnect>\r\n        </SActiveAccount>\r\n      )}\r\n    </SHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SColumn = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Column = (props: any) => <SColumn {...props}>{props.children}</SColumn>;\r\n\r\nexport default Column;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { IClientMeta } from \"@walletconnect/types\";\r\n\r\nconst SIcon = styled.img`\r\n  width: 100px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst SCenter = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst SName = styled(SCenter as any)`\r\n  font-weight: bold;\r\n`;\r\n\r\ninterface IPeerMetaProps {\r\n  peerMeta: IClientMeta;\r\n}\r\n\r\nconst PeerMeta = (props: IPeerMetaProps) => (\r\n  <>\r\n    <SIcon src={props.peerMeta.icons[0]} alt={props.peerMeta.name} />\r\n    <SName>{props.peerMeta.name}</SName>\r\n    <SCenter>{props.peerMeta.description}</SCenter>\r\n    <SCenter>{props.peerMeta.url}</SCenter>\r\n  </>\r\n);\r\n\r\nexport default PeerMeta;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Column from \"./Column\";\r\nimport Button from \"./Button\";\r\nimport { IRequestRenderParams } from \"../helpers/types\";\r\n\r\nconst SRequestValues = styled.div`\r\n  font-family: monospace;\r\n  width: 100%;\r\n  font-size: 12px;\r\n  background-color: #eee;\r\n  padding: 8px;\r\n  word-break: break-word;\r\n  border-radius: 8px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst SConnectedPeer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  & img {\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n  & > div {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nconst SActions = styled.div`\r\n  margin: 0;\r\n  margin-top: 20px;\r\n\r\n  display: flex;\r\n  justify-content: space-around;\r\n  & > * {\r\n    margin: 0 5px;\r\n  }\r\n`;\r\n\r\nclass RequestDisplay extends React.Component<any, any> {\r\n  public render() {\r\n    const { payload, peerMeta, approveRequest, rejectRequest, appState } = this.props;\r\n    var params :IRequestRenderParams[] =  [];\r\n    if(payload.method === \"eth_sendTransaction\"){\r\n      params.push({label:\"Method\", value:\"Send Transaction\"})\r\n    }\r\n    params.push({label:\"From GSVE Address\", value:payload.params[0].from})\r\n    params.push({label:\"To Contract Address\", value:payload.params[0].to})\r\n    //params.push({label:\"Gas Limit\", value:payload.params[0].gasLimit})\r\n    //params.push({label:\"Gas Price\", value:payload.params[0].gasPrice})\r\n    params.push({label:\"Txn Nonce\", value:payload.params[0].nonce})\r\n    try{\r\n    params.push({label:\"Txn Eth Value\", value:appState.web3.utils.fromWei(payload.params[0].value)})\r\n    }\r\n    catch{\r\n      params.push({label:\"Txn Eth Value\", value:payload.params[0].value})\r\n    }\r\n    params.push({label:\"Txn Data\", value:payload.params[0].data})\r\n    var paramsFiltered :IRequestRenderParams[] =  [];\r\n    for(var i=0; i<params.length; i++){\r\n      if(params[i].value !== undefined){\r\n        paramsFiltered.push(params[i]);\r\n      }\r\n    }\r\n\r\n    console.log(\"RENDER\", \"method\", payload.method);\r\n    console.log(\"RENDER\", \"params\", payload.params);\r\n    console.log(\"RENDER\", \"formatted\", paramsFiltered);\r\n    return (\r\n      <Column>\r\n        <h6>{\"Request From\"}</h6>\r\n        <SConnectedPeer>\r\n          <img src={peerMeta.icons[0]} alt={peerMeta.name} />\r\n          <div>{peerMeta.name}</div>\r\n        </SConnectedPeer>\r\n        {paramsFiltered.map(param => (\r\n          <React.Fragment key={param.label}>\r\n            <h6>{param.label}</h6>\r\n            <SRequestValues>{param.value}</SRequestValues>\r\n          </React.Fragment>\r\n        ))}\r\n        <SActions>\r\n          <Button onClick={approveRequest}>{`Approve`}</Button>\r\n          <Button onClick={rejectRequest}>{`Reject`}</Button>\r\n        </SActions>\r\n      </Column>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RequestDisplay;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { colors, shadows } from \"../styles\";\r\n\r\nconst SRequestButton = styled.div`\r\n  border: none;\r\n  background: rgb(${colors.white});\r\n  border-style: none;\r\n  padding: 12px;\r\n  outline: none;\r\n  font-style: normal;\r\n  font-stretch: normal;\r\n  line-height: normal;\r\n  letter-spacing: normal;\r\n  font-style: normal;\r\n  font-stretch: normal;\r\n  line-height: normal;\r\n  letter-spacing: normal;\r\n  text-align: left;\r\n  border-radius: 8px;\r\n  box-shadow: ${shadows.hard};\r\n  cursor: pointer;\r\n`;\r\n\r\nconst RequestButton = (props: any) => <SRequestButton {...props} />;\r\n\r\nexport default RequestButton;\r\n","import * as React from \"react\";\r\nimport * as PropTypes from \"prop-types\";\r\n\r\ninterface IClickOutsideProps {\r\n  onClickOutside: (event: any) => void;\r\n}\r\n\r\nclass ClickOutside extends React.Component<IClickOutsideProps> {\r\n  public static propTypes = {\r\n    onClickOutside: PropTypes.func.isRequired,\r\n  };\r\n\r\n  private element: HTMLDivElement | null;\r\n  private isTouch = false;\r\n\r\n  public componentDidMount() {\r\n    document.addEventListener(\"touchend\", this.handle, true);\r\n    document.addEventListener(\"click\", this.handle, true);\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    document.removeEventListener(\"touchend\", this.handle, true);\r\n    document.removeEventListener(\"click\", this.handle, true);\r\n  }\r\n\r\n  public handle = (event: any) => {\r\n    if (event.type === \"touchend\") {\r\n      this.isTouch = true;\r\n    }\r\n    if (event.type === \"click\" && this.isTouch) {\r\n      return;\r\n    }\r\n    const { onClickOutside } = this.props;\r\n    const element = this.element;\r\n    if (element) {\r\n      if (!element.contains(event.target)) {\r\n        onClickOutside(event);\r\n      }\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    const { children, onClickOutside, ...props } = this.props;\r\n    return (\r\n      <div {...props} ref={c => (this.element = c)}>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClickOutside;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { colors, shadows, transitions } from \"../styles\";\r\nimport ClickOutside from \"./ClickOutside\";\r\n\r\ninterface IDropdownStyle {\r\n  show?: boolean;\r\n  selected?: boolean;\r\n  disabled?: boolean;\r\n  monospace?: boolean;\r\n}\r\n\r\nconst SDropdown = styled.div<IDropdownStyle>`\r\n  transition: ${transitions.base};\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 6px;\r\n  box-shadow: ${shadows.hard};\r\n  font-family: ${({ monospace }) => (monospace ? \"monospace\" : \"inherit\")};\r\n  cursor: ${({ disabled }) => (disabled ? \"default\" : \"pointer\")};\r\n`;\r\n\r\nconst SRow = styled.div<IDropdownStyle>`\r\n  transition: ${transitions.base};\r\n  width: 100%;\r\n  padding: 10px 20px;\r\n  background: rgb(${colors.white});\r\n  border-radius: ${({ selected, show }) => (selected ? (show ? \"6px 6px 0 0 \" : \"6px\") : \"none\")};\r\n  border-bottom-width: 1px;\r\n  border-bottom-style: solid;\r\n  border-bottom-color: ${({ show }) =>\r\n    show ? `rgba(${colors.defaultColor}, 0.3)` : `rgba(${colors.defaultColor}, 0)`};\r\n  &:last-child {\r\n    border-bottom-color: rgba(${colors.defaultColor}, 0);\r\n  }\r\n`;\r\n\r\nconst SAbsolute = styled.div<IDropdownStyle>`\r\n  transition: ${transitions.base};\r\n  position: absolute;\r\n  top: 100%;\r\n  width: 100%;\r\n  max-height: 150px;\r\n  overflow-x: hidden;\r\n  overflow-y: scroll;\r\n  z-index: 1;\r\n  border-radius: 0 0 6px 6px;\r\n  box-shadow: ${shadows.hard};\r\n  opacity: ${({ show }) => (show ? \"1\" : \"0\")};\r\n  pointer-events: ${({ show }) => (show ? \"auto\" : \"non\")};\r\n  visibility: ${({ show }) => (show ? \"visible\" : \"hidden\")};\r\n`;\r\n\r\ninterface IDropdownState {\r\n  show: boolean;\r\n  optionsDict: any;\r\n  otherKeys: any[];\r\n}\r\n\r\ninterface IDropdownProps {\r\n  selected: number | string;\r\n  options: any[] | object;\r\n  displayKey: number | string;\r\n  targetKey: number | string;\r\n  disabled?: boolean;\r\n  onChange?: any;\r\n  monospace?: boolean;\r\n}\r\n\r\nclass Dropdown extends React.Component<IDropdownProps, IDropdownState> {\r\n  public state = {\r\n    show: false,\r\n    optionsDict: {},\r\n    otherKeys: [],\r\n  };\r\n\r\n  public componentDidMount() {\r\n    const { otherKeys, optionsDict } = this.parseKeys(this.props);\r\n    this.setState({ otherKeys, optionsDict });\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IDropdownProps) {\r\n    if (prevProps.selected !== this.props.selected) {\r\n      const { otherKeys, optionsDict } = this.parseKeys(this.props);\r\n      this.setState({ otherKeys, optionsDict });\r\n    }\r\n  }\r\n\r\n  public parseKeys = (props: {\r\n    targetKey: number | string;\r\n    options: any[] | object;\r\n    selected: number | string;\r\n  }) => {\r\n    const { targetKey, options, selected } = props;\r\n    let optionsDict = {};\r\n    let otherKeys: any[] = [];\r\n    if (Array.isArray(options)) {\r\n      if (!targetKey) {\r\n        throw new Error(`Error: \"option\" prop is type Array requires \"targetKey\" prop`);\r\n      }\r\n      options.forEach((option: any) => {\r\n        const optionKey = option[targetKey];\r\n        if (option[targetKey] !== selected) {\r\n          otherKeys.push(optionKey);\r\n        }\r\n        optionsDict[optionKey] = option;\r\n      });\r\n    } else {\r\n      otherKeys = Object.keys(options);\r\n      optionsDict = options;\r\n    }\r\n    return { otherKeys, optionsDict };\r\n  };\r\n\r\n  public toggleDropdown = () => {\r\n    if (this.props.disabled) {\r\n      return;\r\n    }\r\n    this.setState({ show: !this.state.show });\r\n  };\r\n\r\n  public onClickOutside = () => {\r\n    if (this.state.show) {\r\n      this.toggleDropdown();\r\n    }\r\n  };\r\n\r\n  public onChange = async (selected: string) => {\r\n    this.toggleDropdown();\r\n    if (this.props.onChange) {\r\n      this.props.onChange(selected);\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    const { displayKey, selected, disabled, monospace } = this.props;\r\n    const { show, otherKeys, optionsDict } = this.state;\r\n    return Object.keys(optionsDict).length ? (\r\n      <ClickOutside onClickOutside={this.onClickOutside}>\r\n        <SDropdown monospace={!!monospace} disabled={disabled || !otherKeys.length}>\r\n          <SRow selected={true} show={show} onClick={this.toggleDropdown}>\r\n            {optionsDict[selected][displayKey]}\r\n          </SRow>\r\n          {!!otherKeys.length && (\r\n            <SAbsolute show={show}>\r\n              {otherKeys.map((otherKey, idx) => (\r\n                <SRow\r\n                  show={show}\r\n                  onClick={() => this.onChange(otherKey)}\r\n                  key={`${otherKey}-${idx}`}\r\n                >\r\n                  {optionsDict[otherKey][displayKey]}\r\n                </SRow>\r\n              ))}\r\n            </SAbsolute>\r\n          )}\r\n        </SDropdown>\r\n      </ClickOutside>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nexport default Dropdown;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Dropdown from \"../components/Dropdown\";\r\nimport { IChainData } from \"../helpers/types\";\r\nimport { responsive } from \"../styles\";\r\nimport Blockie from \"./Blockie\";\r\n\r\nconst SSection = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst SBlockie = styled(Blockie)`\r\n  margin-right: 5px;\r\n  @media screen and (${responsive.xs.max}) {\r\n    margin-right: 1vw;\r\n  }\r\n`;\r\n\r\nconst SAddressDropdownWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\ninterface IAccountDetailsProps {\r\n  chains: IChainData[];\r\n  updateAddress?: any;\r\n  updateChain?: any;\r\n  accounts: string[];\r\n  activeIndex: number;\r\n  address: string;\r\n  chainId: number;\r\n}\r\n\r\nconst AccountDetails = (props: IAccountDetailsProps) => {\r\n  const { chains, chainId, address, activeIndex, accounts, updateAddress, updateChain } = props;\r\n  const accountsMap = accounts.map((addr: string, index: number) => ({\r\n    index,\r\n    display_address: addr,\r\n  }));\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n    {false && (\r\n      <SSection>\r\n        <h6>{\"Account\"}</h6>\r\n        <SAddressDropdownWrapper>\r\n          <SBlockie size={40} address={address} />\r\n          <Dropdown\r\n            monospace\r\n            selected={activeIndex}\r\n            options={accountsMap}\r\n            displayKey={\"display_address\"}\r\n            targetKey={\"index\"}\r\n            onChange={updateAddress}\r\n          />\r\n        </SAddressDropdownWrapper>\r\n      </SSection>\r\n      )}\r\n\r\n      <SSection>\r\n        <h6>{\"Gas Token To Use\"}</h6>\r\n        <SAddressDropdownWrapper>\r\n          <Dropdown\r\n            selected={activeIndex}\r\n            options={accountsMap}\r\n            displayKey={\"display_address\"}\r\n            targetKey={\"index\"}\r\n            onChange={updateAddress}\r\n          />\r\n        </SAddressDropdownWrapper>\r\n      </SSection>\r\n\r\n      {false && (\r\n      <SSection>\r\n        <h6>{\"Network\"}</h6>\r\n        <Dropdown\r\n          selected={chainId}\r\n          options={chains}\r\n          displayKey={\"name\"}\r\n          targetKey={\"chain_id\"}\r\n          onChange={updateChain}\r\n        />\r\n      </SSection>\r\n    )}\r\n\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default AccountDetails;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport QrReader from \"react-qr-reader\";\r\n\r\nconst SQRCodeScannerContainer = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: 5;\r\n  margin: 0 auto !important;\r\n  background: rgb(0, 0, 0);\r\n`;\r\n\r\nconst SQRCodeScannerWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst SCloseButton = styled.div`\r\n  transition: all 0.2s ease-in-out;\r\n  width: 25px;\r\n  height: 25px;\r\n  position: absolute;\r\n  z-index: 10;\r\n  top: 15px;\r\n  right: 15px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transform: rotate(45deg);\r\n  &:hover {\r\n    opacity: 0.5;\r\n  }\r\n`;\r\n\r\nconst SFirstLine = styled.div`\r\n  position: absolute;\r\n  width: 90%;\r\n  border: 1px solid rgb(255, 255, 255);\r\n`;\r\n\r\nconst SSecondLine = styled(SFirstLine as any)`\r\n  transform: rotate(90deg);\r\n`;\r\n\r\nexport interface IQRCodeValidateResponse {\r\n  error: Error | null;\r\n  result: any | null;\r\n}\r\n\r\ninterface IQRCodeScannerProps {\r\n  onValidate: (data: string) => IQRCodeValidateResponse;\r\n  onScan: (data: any) => void;\r\n  onError: (error: Error) => void;\r\n  onClose: () => void;\r\n}\r\n\r\ninterface IQRCodeScannerState {\r\n  delay: number | false;\r\n}\r\n\r\nclass QRCodeScanner extends React.Component<IQRCodeScannerProps, IQRCodeScannerState> {\r\n  public state = {\r\n    delay: 300,\r\n  };\r\n\r\n  public stopRecording = async () => {\r\n    await this.setState({ delay: false });\r\n  };\r\n\r\n  public handleScan = (data: string) => {\r\n    if (data) {\r\n      const { result, error } = this.props.onValidate(data);\r\n      if (result) {\r\n        this.stopRecording();\r\n        this.props.onScan(result);\r\n      } else {\r\n        this.handleError(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  public handleError = (error: Error | null) => {\r\n    if (error) {\r\n      this.props.onError(error);\r\n    }\r\n  };\r\n\r\n  public onClose = async () => {\r\n    try {\r\n      await this.stopRecording();\r\n      this.props.onClose();\r\n    } catch (error) {\r\n      this.handleError(error);\r\n    }\r\n  };\r\n\r\n  public componentWillUnmount() {\r\n    this.stopRecording();\r\n  }\r\n  public render() {\r\n    return (\r\n      <SQRCodeScannerContainer>\r\n        <SCloseButton onClick={this.onClose}>\r\n          <SFirstLine />\r\n          <SSecondLine />\r\n        </SCloseButton>\r\n        <SQRCodeScannerWrapper>\r\n          <QrReader\r\n            delay={this.state.delay}\r\n            onError={this.handleError}\r\n            onScan={this.handleScan}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </SQRCodeScannerWrapper>\r\n      </SQRCodeScannerContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QRCodeScanner;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport WalletConnect from \"@walletconnect/client\";\r\nimport Button from \"./components/Button\";\r\nimport Card from \"./components/Card\";\r\nimport Input from \"./components/Input\";\r\nimport Header from \"./components/Header\";\r\nimport Column from \"./components/Column\";\r\nimport PeerMeta from \"./components/PeerMeta\";\r\nimport RequestDisplay from \"./components/RequestDisplay\";\r\nimport RequestButton from \"./components/RequestButton\";\r\nimport AccountDetails from \"./components/AccountDetails\";\r\nimport QRCodeScanner, { IQRCodeValidateResponse } from \"./components/QRCodeScanner\";\r\nimport { DEFAULT_CHAIN_ID, DEFAULT_ACTIVE_INDEX } from \"./constants/default\";\r\nimport { getCachedSession } from \"./helpers/utilities\";\r\nimport { getAppControllers } from \"./controllers\";\r\nimport { getAppConfig } from \"./config\";\r\nimport { callTransaction } from \"./../../utils/web3_transaction_maker.js\"\r\n\r\nconst SContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  width: 100%;\r\n  min-height: 100%;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n`;\r\n\r\nconst SVersionNumber = styled.div`\r\n  position: absolute;\r\n  font-size: 12px;\r\n  bottom: 6%;\r\n  right: 0;\r\n  opacity: 0.3;\r\n  transform: rotate(-90deg);\r\n`;\r\n\r\nconst SContent = styled.div`\r\n  width: 100%;\r\n  flex: 1;\r\n  padding: 30px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst SActions = styled.div`\r\n  margin: 0;\r\n  margin-top: 20px;\r\n\r\n  display: flex;\r\n  justify-content: space-around;\r\n  & > * {\r\n    margin: 0 5px;\r\n  }\r\n`;\r\n\r\nconst SActionsColumn = styled(SActions as any)`\r\n  flex-direction: row;\r\n  align-items: center;\r\n\r\n  margin: 24px 0 6px;\r\n\r\n  & > p {\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\n\r\nconst SInput = styled(Input)`\r\n  width: 100%;\r\n  margin: 10px;\r\n  font-size: 14px;\r\n  height: 40px;\r\n`;\r\n\r\nconst SConnectedPeer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  & img {\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n  & > div {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nconst SRequestButton = styled(RequestButton)`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport interface IAppState {\r\n  loading: boolean;\r\n  scanner: boolean;\r\n  connector: WalletConnect | null;\r\n  uri: string;\r\n  peerMeta: {\r\n    description: string;\r\n    url: string;\r\n    icons: string[];\r\n    name: string;\r\n    ssl: boolean;\r\n  };\r\n  connected: boolean;\r\n  chainId: number;\r\n  accounts: string[];\r\n  activeIndex: number;\r\n  address: string;\r\n  requests: any[];\r\n  results: any[];\r\n  payload: any;\r\n  passedAddress: string;\r\n  passedChainId: number;\r\n  passedChainName: string;\r\n  appState:any;\r\n  selectedToken: string;\r\n  selectedTokenId: number;\r\n  tokens: string[];\r\n}\r\n\r\nexport const DEFAULT_ACCOUNTS = getAppControllers().wallet.getAccounts();\r\nexport const DEFAULT_ADDRESS = DEFAULT_ACCOUNTS[DEFAULT_ACTIVE_INDEX];\r\n\r\nexport const INITIAL_STATE: IAppState = {\r\n  loading: false,\r\n  scanner: false,\r\n  connector: null,\r\n  uri: \"\",\r\n  peerMeta: {\r\n    description: \"\",\r\n    url: \"\",\r\n    icons: [],\r\n    name: \"\",\r\n    ssl: false,\r\n  },\r\n  connected: false,\r\n  chainId: getAppConfig().chainId || DEFAULT_CHAIN_ID,\r\n  accounts: DEFAULT_ACCOUNTS,\r\n  address: DEFAULT_ADDRESS,\r\n  activeIndex: DEFAULT_ACTIVE_INDEX,\r\n  requests: [],\r\n  results: [],\r\n  payload: null,\r\n  passedAddress: \"\",\r\n  passedChainId: 0,\r\n  passedChainName: \"\",\r\n  appState: \"\",\r\n  selectedToken: \"Wrapped Chi\",\r\n  selectedTokenId: 0,\r\n  tokens: [\"Wrapped Chi\", \"Wrapped GST2\", \"Wrapped GST1\"],\r\n};\r\n\r\nclass WalletConnectPage extends React.Component<{}> {\r\n  public state: IAppState;\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      ...INITIAL_STATE,\r\n    };\r\n\r\n    this.state.accounts = [props.passedAddress];\r\n    this.state.address = props.passedAddress;\r\n    this.state.activeIndex = 0;\r\n\r\n    this.state.passedAddress = props.passedAddress;\r\n    this.state.passedChainId = props.passedChainId;\r\n    this.state.chainId = props.appState.chainId;\r\n    this.state.passedChainName = props.passedChainName;\r\n\r\n    this.state.appState = props.appState;\r\n    if(props.passedUpgraded){\r\n      this.state.tokens = [\"Wrapped Chi\", \"Wrapped GST2\", \"Wrapped GST1\", \"Chi\", \"Gas Token 2\", \"Gas Token 1\"]\r\n      console.log(this.state.tokens)\r\n    }\r\n  }\r\n  public componentDidMount() {\r\n    this.init();\r\n  }\r\n\r\n  public init = async () => {\r\n    let { activeIndex, chainId } = this.state;\r\n\r\n    const session = getCachedSession();\r\n\r\n    if (!session) {\r\n      await getAppControllers().wallet.init(activeIndex, chainId);\r\n    } else {\r\n      const connector = new WalletConnect({ session });\r\n\r\n      const { connected, accounts, peerMeta } = connector;\r\n\r\n      const address = accounts[0];\r\n\r\n      activeIndex = accounts.indexOf(address);\r\n      chainId = connector.chainId;\r\n\r\n      await getAppControllers().wallet.init(activeIndex, chainId);\r\n\r\n      await this.setState({\r\n        connected,\r\n        connector,\r\n        address,\r\n        activeIndex,\r\n        accounts,\r\n        chainId,\r\n        peerMeta,\r\n      });\r\n\r\n      this.subscribeToEvents();\r\n    }\r\n    await getAppConfig().events.init(this.state, this.bindedSetState);\r\n  };\r\n\r\n  public bindedSetState = (newState: Partial<IAppState>) => this.setState(newState);\r\n\r\n  public initWalletConnect = async () => {\r\n    const { uri } = this.state;\r\n\r\n    this.setState({ loading: true });\r\n\r\n    try {\r\n      const connector = new WalletConnect({ uri });\r\n\r\n      if (!connector.connected) {\r\n        await connector.createSession();\r\n      }\r\n\r\n      await this.setState({\r\n        loading: false,\r\n        connector,\r\n        uri: connector.uri,\r\n      });\r\n\r\n      this.subscribeToEvents();\r\n    } catch (error) {\r\n      this.setState({ loading: false });\r\n\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  public approveSession = () => {\r\n    console.log(\"ACTION\", \"approveSession\");\r\n    const { connector, chainId, address } = this.state;\r\n    if (connector) {\r\n      connector.approveSession({ chainId, accounts: [address] });\r\n    }\r\n    this.setState({ connector });\r\n  };\r\n\r\n  public rejectSession = () => {\r\n    console.log(\"ACTION\", \"rejectSession\");\r\n    const { connector } = this.state;\r\n    if (connector) {\r\n      connector.rejectSession();\r\n    }\r\n    this.setState({ connector });\r\n  };\r\n\r\n  public killSession = () => {\r\n    console.log(\"ACTION\", \"killSession\");\r\n    const { connector } = this.state;\r\n    if (connector) {\r\n      connector.killSession();\r\n    }\r\n    this.resetApp();\r\n    \r\n  };\r\n\r\n  public resetApp = async () => {\r\n    await this.setState({loading: false,\r\n      scanner: false,\r\n      connector: null,\r\n      uri: \"\",\r\n      peerMeta: {\r\n        description: \"\",\r\n        url: \"\",\r\n        icons: [],\r\n        name: \"\",\r\n        ssl: false,\r\n      },\r\n      connected: false,\r\n      chainId: getAppConfig().chainId || DEFAULT_CHAIN_ID,\r\n      requests: [],\r\n      results: [],\r\n      payload: null,\r\n    });\r\n\r\n    this.init();\r\n  };\r\n\r\n  public subscribeToEvents = () => {\r\n    console.log(\"ACTION\", \"subscribeToEvents\");\r\n    const { connector } = this.state;\r\n\r\n    if (connector) {\r\n      connector.on(\"session_request\", (error, payload) => {\r\n        console.log(\"EVENT\", \"session_request\");\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        const { peerMeta } = payload.params[0];\r\n        this.setState({ peerMeta });\r\n      });\r\n\r\n      connector.on(\"session_update\", error => {\r\n        console.log(\"EVENT\", \"session_update\");\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n      });\r\n\r\n      connector.on(\"call_request\", async (error, payload) => {\r\n        // tslint:disable-next-line\r\n        console.log(\"EVENT\", \"call_request\", \"method\", payload.method);\r\n        console.log(\"EVENT\", \"call_request\", \"params\", payload.params);\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        await getAppConfig().rpcEngine.router(payload, this.state, this.bindedSetState);\r\n      });\r\n\r\n      connector.on(\"connect\", (error, payload) => {\r\n        console.log(\"EVENT\", \"connect\");\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        this.setState({ connected: true });\r\n      });\r\n\r\n      connector.on(\"disconnect\", (error, payload) => {\r\n        console.log(\"EVENT\", \"disconnect\");\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        this.resetApp();\r\n      });\r\n\r\n      if (connector.connected) {\r\n        const { chainId, accounts } = connector;\r\n        const index = 0;\r\n        const address = accounts[index];\r\n        getAppControllers().wallet.update(index, chainId);\r\n        this.setState({\r\n          connected: true,\r\n          address,\r\n          chainId,\r\n        });\r\n      }\r\n\r\n      this.setState({ connector });\r\n    }\r\n  };\r\n\r\n  public updateSession = async (sessionParams: { chainId?: number; activeIndex?: number }) => {\r\n    const { connector, chainId, accounts, activeIndex } = this.state;\r\n    const newChainId = sessionParams.chainId || chainId;\r\n    const newActiveIndex = sessionParams.activeIndex || activeIndex;\r\n    const address = accounts[newActiveIndex];\r\n    if (connector) {\r\n      connector.updateSession({\r\n        chainId: newChainId,\r\n        accounts: [address],\r\n      });\r\n    }\r\n    await this.setState({\r\n      connector,\r\n      address,\r\n      accounts,\r\n      activeIndex: newActiveIndex,\r\n      chainId: newChainId,\r\n    });\r\n    await getAppControllers().wallet.update(newActiveIndex, newChainId);\r\n    await getAppConfig().events.update(this.state, this.bindedSetState);\r\n  };\r\n\r\n  public updateChain = async (chainId: number | string) => {\r\n    await this.updateSession({ chainId: Number(chainId) });\r\n  };\r\n\r\n  public updateAddress = async (newSelectedTokenId: number) => {\r\n    const {tokens} = this.state;\r\n    const selectedToken = tokens[newSelectedTokenId];\r\n    await this.setState({\r\n      selectedToken:selectedToken,\r\n      selectedTokenId:newSelectedTokenId,\r\n    });\r\n\r\n  };\r\n\r\n  \r\n  public toggleScanner = () => {\r\n    console.log(\"ACTION\", \"toggleScanner\");\r\n    this.setState({ scanner: !this.state.scanner });\r\n  };\r\n\r\n  public onQRCodeValidate = (data: string): IQRCodeValidateResponse => {\r\n    const res: IQRCodeValidateResponse = {\r\n      error: null,\r\n      result: null,\r\n    };\r\n    try {\r\n      res.result = data;\r\n    } catch (error) {\r\n      res.error = error;\r\n    }\r\n\r\n    return res;\r\n  };\r\n\r\n  public onQRCodeScan = async (data: any) => {\r\n    const uri = typeof data === \"string\" ? data : \"\";\r\n    if (uri) {\r\n      await this.setState({ uri });\r\n      await this.initWalletConnect();\r\n      this.toggleScanner();\r\n    }\r\n  };\r\n\r\n  public onURIPaste = async (e: any) => {\r\n    const data = e.target.value;\r\n    const uri = typeof data === \"string\" ? data : \"\";\r\n    if (uri) {\r\n      await this.setState({ uri });\r\n      await this.initWalletConnect();\r\n    }\r\n  };\r\n\r\n  public onQRCodeError = (error: Error) => {\r\n    throw error;\r\n  };\r\n\r\n  public onQRCodeClose = () => this.toggleScanner();\r\n\r\n  public openRequest = async (request: any) => {\r\n    const payload = Object.assign({}, request);\r\n\r\n    const params = payload.params[0];\r\n    if (request.method === \"eth_sendTransaction\") {\r\n      payload.params[0] = await getAppControllers().wallet.populateTransaction(params);\r\n    }\r\n\r\n    this.setState({\r\n      payload,\r\n    });\r\n  };\r\n\r\n  public closeRequest = async () => {\r\n    const { requests, payload } = this.state;\r\n    const filteredRequests = requests.filter(request => request.id !== payload.id);\r\n    await this.setState({\r\n      requests: filteredRequests,\r\n      payload: null,\r\n    });\r\n  };\r\n\r\n  public approveRequest = async () => {\r\n    const { connector, payload } = this.state;\r\n\r\n    try {\r\n      await callTransaction(this.state.appState.web3,  payload.params[0].data, this.state.selectedToken, payload.params[0].to,  payload.params[0].value, payload.params[0].from, this.state.appState.chainId);\r\n    } catch (error) {\r\n      console.error(error);\r\n      if (connector) {\r\n        connector.rejectRequest({\r\n          id: payload.id,\r\n          error: { message: \"Failed or Rejected Request\" },\r\n        });\r\n      }\r\n    }\r\n\r\n    this.closeRequest();\r\n    await this.setState({ connector });\r\n  };\r\n\r\n  public rejectRequest = async () => {\r\n    const { connector, payload } = this.state;\r\n    if (connector) {\r\n      connector.rejectRequest({\r\n        id: payload.id,\r\n        error: { message: \"Failed or Rejected Request\" },\r\n      });\r\n    }\r\n    await this.closeRequest();\r\n    await this.setState({ connector });\r\n  };\r\n  public render() {\r\n    const {\r\n      peerMeta,\r\n      scanner,\r\n      connected,\r\n      selectedTokenId,\r\n      tokens,\r\n      selectedToken,\r\n      address,\r\n      requests,\r\n      payload,\r\n    } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <SContainer>\r\n          <Header\r\n            connected={connected}\r\n            address={address}\r\n            chainId={this.state.passedChainId}\r\n            killSession={this.killSession}\r\n            activeChain={this.state.passedChainName}\r\n          />\r\n          <SContent>\r\n            <Card maxWidth={500}>\r\n              {!connected ? (\r\n                peerMeta && peerMeta.name ? (\r\n                  <Column>\r\n                    <PeerMeta peerMeta={peerMeta} />\r\n                    <SActions>\r\n                      <Button onClick={this.approveSession}>{`Approve`}</Button>\r\n                      <Button onClick={this.rejectSession}>{`Reject`}</Button>\r\n                    </SActions>\r\n                  </Column>\r\n                ) : (\r\n                  <Column>\r\n                    <SActionsColumn>\r\n                      {getAppConfig().styleOpts.showPasteUri && (\r\n                        <>\r\n                          <SInput onChange={this.onURIPaste} placeholder={\"Wallet Connect Link/QR Code\"} />\r\n                        </>\r\n                      )}\r\n                    </SActionsColumn>\r\n                  </Column>\r\n                )\r\n              ) : !payload ? (\r\n                <Column>\r\n                  <AccountDetails\r\n                    chains={getAppConfig().chains}\r\n                    address={selectedToken}\r\n                    activeIndex={selectedTokenId}\r\n                    chainId={this.state.chainId}\r\n                    accounts={tokens}\r\n                    updateAddress={this.updateAddress}\r\n                    updateChain={this.updateChain}\r\n                  />\r\n                  {peerMeta && peerMeta.name && (\r\n                    <>\r\n                      <h6>{\"Connected to\"}</h6>\r\n                      <SConnectedPeer>\r\n                        <img src={peerMeta.icons[0]} alt={peerMeta.name} />\r\n                        <div>{peerMeta.name}</div>\r\n                      </SConnectedPeer>\r\n                    </>\r\n                  )}\r\n                  <h6>{\"Pending dApp Transaction Requests\"}</h6>\r\n                  {requests.length ? (\r\n                    requests.map(request => (\r\n                      <SRequestButton key={request.id} onClick={() => this.openRequest(request)}>\r\n                        <div>{request.method}</div>\r\n                      </SRequestButton>\r\n                    ))\r\n                  ) : (\r\n                    <div>\r\n                      <div>{\"No Pending dApp Transaction Requests\"}</div>\r\n                    </div>\r\n                  )}\r\n                </Column>\r\n              ) : (\r\n                <RequestDisplay\r\n                  payload={payload}\r\n                  peerMeta={peerMeta}\r\n                  renderPayload={(payload: any) => getAppConfig().rpcEngine.render(payload)}\r\n                  approveRequest={this.approveRequest}\r\n                  rejectRequest={this.rejectRequest}\r\n                  appState = {this.state.appState}\r\n                />\r\n              )}\r\n            </Card>\r\n          </SContent>\r\n          {scanner && (\r\n            <QRCodeScanner\r\n              onValidate={this.onQRCodeValidate}\r\n              onScan={this.onQRCodeScan}\r\n              onError={this.onQRCodeError}\r\n              onClose={this.onQRCodeClose}\r\n            />\r\n          )}\r\n        </SContainer>\r\n        {getAppConfig().styleOpts.showVersion && (\r\n          <SVersionNumber>{`v${process.env.REACT_APP_VERSION}`} </SVersionNumber>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WalletConnectPage;\r\n","import React, { useContext } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\n\r\nimport GlobalStyles from './../../GlobalStyles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport WalletConnectPage from \"./../WalletConnectPage/WalletConnectPage.tsx\"\r\n\r\nimport { callTransactionWithValue, withdrawContractBalance, contractBalance, withdrawContractTokenBalance, deployWrapper, contractWrapperAddress} from \"./../../utils/web3_transaction_maker.js\"\r\nimport { Context } from './../../store'\r\nvar contractAddresses = require('./../../utils/addresses.json');\r\n\r\nexport default function Saver() {\r\n  const classes = GlobalStyles();\r\n  const [msgValue, setMsgValue] = React.useState(0);\r\n  const [contractAddress, setContractAddress] = React.useState(\"\");\r\n  const [contractTokenAddress, setContractTokenAddress] = React.useState(\"\");\r\n  const [callData, setCallData] = React.useState(\"\");\r\n  const [selectedToken, setSelectedToken] = React.useState(\"\");\r\n  const [selectedSymbol, setSelectedSymbol] = React.useState(\"\");\r\n  const [wcUri, setWcUri] = React.useState(\"\");\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [upgraded, setUpgraded] = React.useState(true);\r\n  const [chainName, setChainName] = React.useState(\"\");\r\n  const [wrapperBalance, setWrapperBalance] = React.useState(-1);\r\n\r\n  const [state, dispatch] = useContext(Context);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n  const handleCallData = (e) => {\r\n    setCallData(e.target.value);\r\n  }\r\n\r\n  const handleAddress = (e) => {\r\n    setContractAddress(e.target.value);\r\n  }\r\n\r\n  const handleTokenWithdrawAddress = (e) => {\r\n    setContractTokenAddress(e.target.value);\r\n  }\r\n\r\n  const handleMsgValue = (e) => {\r\n    setMsgValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    var valueInWei = state.web3.utils.toWei(msgValue.toString())\r\n    var dataToContract = callData //.replace(state.account.toString().replace(\"0x\", \"\"), state.deployedAddress.toString().replace(\"0x\", \"\"))\r\n    callTransactionWithValue(state.web3, dataToContract, selectedToken, contractAddress, valueInWei, state.deployedAddress, state.chainId);\r\n  }\r\n\r\n  const handleWithdraw = (e) => {\r\n    e.preventDefault();\r\n    withdrawContractBalance(state.web3, state.deployedAddress, state.chainId);\r\n  }\r\n\r\n  const handleTokenWithdraw = (e) => {\r\n    e.preventDefault();\r\n    withdrawContractTokenBalance(state.web3, state.deployedAddress, contractTokenAddress, state.chainId);\r\n  }\r\n\r\n  const handleDeployWrapper = (e) => {\r\n    e.preventDefault();\r\n    deployWrapper(state.web3, state.chainId);\r\n  }\r\n\r\n  const handleTokenChange = (e) => {\r\n    try {\r\n      setSelectedToken(e.target.innerText.split(\"-\")[1])\r\n      setSelectedSymbol(e.target.innerText.split(\"-\")[0])\r\n    }\r\n    catch {\r\n      setSelectedToken(\"\")\r\n      setSelectedSymbol(\"\")\r\n    }\r\n  };\r\n  \r\n  var showUi = false\r\n\r\n  if (state.connected && state.account !== \"0x00\") {\r\n    showUi = true\r\n    if (state.deployedAddress === \"\" && state.hasDeployedContract === \"\") {\r\n      contractWrapperAddress(state.web3, state.chainId).then((value) => {  dispatch({ type: 'deployed_address', payload: value }) });\r\n    }\r\n\r\n    if (state.deployedAddress !== \"\" && state.hasDeployedContract === \"\") {\r\n      if (state.deployedAddress === \"0x0000000000000000000000000000000000000000\") {\r\n        dispatch({ type: 'has_deployed_address', payload: false }) \r\n      }\r\n      else if (state.deployedAddress.includes(\"0x\")) {\r\n        dispatch({ type: 'has_deployed_address', payload: true }) \r\n      }\r\n    }\r\n  } else{\r\n    showUi = false\r\n  }\r\n\r\n  if (wrapperBalance === -1 && state.hasDeployedContract === true && state.deployedAddress !== \"0x0000000000000000000000000000000000000000\") {\r\n    if (state.deployedAddress !== \"\") {\r\n      contractBalance(state.web3, state.deployedAddress, state.chainId).then((value) => { setWrapperBalance(value) });\r\n    }\r\n  }\r\n\r\n  var contractDiaglog\r\n  var proxyTitle\r\n\r\n  var contractLink = \"\"\r\n  var linkText = \"\"\r\n\r\n  if(state.chainId === 1 || state.chainId === 4 ){\r\n    linkText = \"View on EtherScan\"\r\n    contractLink = \"https://etherscan.io/address/\"+ contractAddresses[state.chainId]['factory'] +\"#code\"\r\n  }\r\n  else{\r\n    linkText = \"View on BscScan\"\r\n    contractLink = \"https://bscscan.com/address/#code\"\r\n  }\r\n  \r\n  if (state.hasDeployedContract) {\r\n    contractDiaglog = [<Typography gutterBottom variant=\"h7\" component=\"h4\"> Your proxy is deployed at {state.deployedAddress} </Typography>]\r\n    proxyTitle = \"You have an existing GSVE Wrapper\"\r\n    contractDiaglog.push(<Box align=\"center\"><Button color=\"primary\" variant=\"contained\" target=\"_blank\" href={contractLink} className={classes.button}> {linkText}</Button></Box>)\r\n  }\r\n  else {\r\n    if(showUi === true){\r\n      contractDiaglog = [<Box align=\"center\"><Typography gutterBottom variant=\"h7\" component=\"h4\"> Burn 10 GSVE to deploy your smart wrapper</Typography>\r\n      <Button color=\"primary\" variant=\"contained\" className={classes.button} onClick={handleDeployWrapper}> Deploy </Button></Box>,\r\n      <Box align=\"center\"><Button color=\"primary\" variant=\"contained\" target=\"_blank\" href={contractLink} className={classes.button}> {linkText}</Button></Box>]\r\n      proxyTitle = \"Deploy Your Own Wrapper\"\r\n    }\r\n    else if(showUi === false){\r\n      contractDiaglog = [<Box align=\"center\"><Button color=\"primary\" variant=\"disabled\" className={classes.button}> Login to deploy </Button></Box>]\r\n      proxyTitle = \"You Aren't Logged In\"\r\n    }\r\n  }\r\n\r\n  if(chainName === \"\"){\r\n    if(state.chainId === 1337){\r\n      setChainName(\"Development\")\r\n    }\r\n    else if(state.chainId === 1){\r\n      setChainName(\"Mainnet\")\r\n    }\r\n    else if(state.chainId === 3){\r\n      setChainName(\"Ropsten\")\r\n    }\r\n    else if(state.chainId === 4){\r\n      setChainName(\"Rinkeby\")\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className={classes.rootPage}>\r\n      <Paper className={classes.paper} component=\"p\">\r\n        <Paper className={classes.headerPaper} component=\"p\">\r\n          <Typography gutterBottom variant=\"h4\" component=\"h4\">\r\n            Gas Save Wrapper\r\n            <Box textAlign='right'>\r\n              <Button color=\"secondary\" variant=\"contained\" href=\"https://docs.gassave.org\">\r\n                Find Out More\r\n                </Button>\r\n            </Box>\r\n          </Typography>\r\n          <Typography align=\"left\" gutterBottom variant=\"h6\" component=\"h4\">\r\n            GSVE Transaction Wrapper is a simple gas saving smart wallet.\r\n          </Typography>\r\n          <Typography align=\"left\" gutterBottom variant=\"h7\" component=\"h4\">\r\n            You can send your transaction through the wallet, using wallet connect, to save on gas fees.\r\n          </Typography>\r\n          <Typography align=\"left\" gutterBottom variant=\"h7\" component=\"h4\">\r\n            Burning gas tokens as part of the transaction saves up to 50% of the gas fee.\r\n          </Typography>\r\n        </Paper>\r\n\r\n        <Grid container spacing={3} >\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.headerPaper}>\r\n              <Card className={classes.card} variant=\"outlined\">\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h6\" component=\"h4\">\r\n                    {proxyTitle}\r\n                  </Typography>\r\n                  <Divider light />\r\n                  {contractDiaglog}\r\n                </CardContent>\r\n              </Card>\r\n            </Paper>\r\n          </Grid>\r\n\r\n          {( state.hasDeployedContract ===  true) && (\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.headerPaper}>\r\n              <Card className={classes.card} variant=\"outlined\">\r\n                <Typography gutterBottom variant=\"h6\" component=\"h4\"> Manage Wrapper Contract </Typography>\r\n                <CardContent>\r\n\r\n                  <Accordion expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\r\n                    <AccordionSummary\r\n                      expandIcon={<ExpandMoreIcon />}\r\n                      aria-controls=\"panel1bh-content\"\r\n                      id=\"panel21h-header\"\r\n                    >\r\n                      <Typography gutterBottom variant=\"h7\" component=\"h4\"> Withdraw Wrapper Contract Balance</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <Grid item xs={12}>\r\n                        <Paper>\r\n                          <Box align=\"center\">\r\n                            <Typography  gutterBottom variant=\"h7\" component=\"h4\">  Your wrapper has a balance of: {wrapperBalance} Eth  </Typography>\r\n                            <Button type=\"submit\" color=\"primary\" variant=\"contained\" className={classes.button} onClick={handleWithdraw}> Withdraw Eth balance  </Button>\r\n                          </Box>\r\n                        </Paper>\r\n                      </Grid>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n\r\n                  <Accordion expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\r\n                    <AccordionSummary\r\n                      expandIcon={<ExpandMoreIcon />}\r\n                      aria-controls=\"panel2bh-content\"\r\n                      id=\"panel2bh-header\"\r\n                    >\r\n                      <Typography gutterBottom variant=\"h7\" component=\"h4\"> Withdraw Token Balance</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <Grid item xs={12}>\r\n                        <Paper>\r\n                          <Box align=\"center\">\r\n                          <Typography gutterBottom variant=\"h7\" component=\"h4\">  Withdraw Wrapper Contract Token Balance </Typography>\r\n                            <TextField className={classes.textField}\r\n                              label=\"Contract Address\"\r\n                              value={contractTokenAddress}\r\n                              style={{ width: 300, color: \"white\", background: \"white\" }}\r\n                              inputProps={{\r\n                                autoComplete: 'new-password', // disable autocomplete and autofill\r\n                              }}\r\n                              onChange={handleTokenWithdrawAddress}\r\n                            />\r\n                            <br />\r\n                            <Button type=\"submit\" color=\"primary\" variant=\"contained\" className={classes.button} onClick={handleTokenWithdraw}> Withdraw Tokens  </Button>\r\n                          </Box>\r\n                        </Paper>\r\n                      </Grid>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                  <Accordion expanded={expanded === 'panel3'} onChange={handleChange('panel3')}>\r\n                    <AccordionSummary\r\n                      expandIcon={<ExpandMoreIcon />}\r\n                      aria-controls=\"panel3bh-content\"\r\n                      id=\"panel3bh-header\"\r\n                    >\r\n                      <Typography gutterBottom variant=\"h7\" component=\"h4\"> Manual Transaction</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <Grid item xs={12}>\r\n                        <Paper>\r\n                          <Box align=\"center\">\r\n                          <Typography gutterBottom variant=\"h7\" component=\"h4\"> Send Transaction Manually Using Call Data </Typography>\r\n                            <form onSubmit={e => { handleSubmit(e) }}>\r\n                              <Autocomplete\r\n                                id=\"country-select-demo\"\r\n                                style={{ width: 400, color: \"white\", background: \"white\" }}\r\n                                options={upgradedTokens}\r\n                                classes={{\r\n                                  option: classes.option,\r\n                                }}\r\n                                onChange={handleTokenChange}\r\n                                autoHighlight\r\n                                getOptionLabel={(option) => option.label}\r\n                                renderOption={(option) => (\r\n                                  <React.Fragment>\r\n                                    {option.code} - {option.label}\r\n                                  </React.Fragment>\r\n                                )}\r\n                                renderInput={(params) => (\r\n                                  <TextField\r\n                                    value={selectedToken}\r\n                                    {...params}\r\n                                    label=\"Gas Token\"\r\n                                    variant=\"filled\"\r\n                                    name=\"selectedToken\"\r\n                                    inputProps={{\r\n                                      ...params.inputProps,\r\n                                      autoComplete: 'new-password', // disable autocomplete and autofill\r\n\r\n                                    }}\r\n                                  />\r\n                                )}\r\n                              />\r\n                              <br />\r\n                              <TextField className={classes.textField}\r\n                                label=\"Contract Address\"\r\n                                value={contractAddress}\r\n                                style={{ width: 300, color: \"white\", background: \"white\" }}\r\n                                inputProps={{\r\n                                  autoComplete: 'new-password', // disable autocomplete and autofill\r\n                                }}\r\n                                onChange={handleAddress}\r\n                              />\r\n                              <br />\r\n                              <TextField className={classes.textField}\r\n                                label=\"Call Data\"\r\n                                value={callData}\r\n                                style={{ width: 300, color: \"white\", background: \"white\" }}\r\n                                inputProps={{\r\n                                  autoComplete: 'new-password', // disable autocomplete and autofill\r\n                                }}\r\n                                onChange={handleCallData}\r\n                              />\r\n                              <br />\r\n                              <TextField className={classes.textField}\r\n                                label=\"Transaction Value\"\r\n                                value={msgValue}\r\n                                type=\"number\"\r\n                                style={{ width: 300, color: \"white\", background: \"white\" }}\r\n                                inputProps={{\r\n                                  autoComplete: 'new-password',\r\n                                  step: \"any\", // disable autocomplete and autofill\r\n                                }}\r\n                                onChange={handleMsgValue}\r\n                              />\r\n                              <br />\r\n                              <Button type=\"submit\" color=\"primary\" variant=\"contained\" className={classes.button}>  Send Transaction  </Button>\r\n                            </form>\r\n                          </Box>\r\n                        </Paper>\r\n                      </Grid>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                </CardContent>\r\n              </Card>\r\n            </Paper>\r\n\r\n          </Grid>\r\n          )}\r\n\r\n          {( state.hasDeployedContract ===  true) && (\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.headerPaper}>\r\n              <Card className={classes.card} variant=\"outlined\">\r\n                <Typography gutterBottom variant=\"h6\" component=\"h4\"> Connect to dApps with Wallet Connect</Typography>\r\n                <WalletConnectPage passedAddress={state.deployedAddress} passedChainId={state.chainId} passedChainName={chainName} appState={state} passedUpgraded={upgraded}/>\r\n              </Card>\r\n            </Paper>\r\n          </Grid>\r\n          )}\r\n\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst upgradedTokens = [\r\n  { code: 'wChi', label: 'Wrapped Chi', type: \"wrap\" },\r\n  { code: 'wGST2', label: 'Wrapped GST2', type: \"wrap\" },\r\n  { code: 'wGST1', label: 'Wrapped GST1', type: \"wrap\" },\r\n  { code: 'Chi', label: 'Chi', type: \"mint\" },\r\n  { code: 'GST2', label: 'Gas Token 2', type: \"mint\" },\r\n  { code: 'GST1', label: 'Gas Token 1', type: \"mint\" },\r\n];","import React, { useContext } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport GlobalStyles from './../../GlobalStyles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport WalletConnectPage from \"./../WalletConnectPage/WalletConnectPage.tsx\"\r\n\r\nimport { gnosisSafeAddress, deployGsveGnosis, updateGnosisGasToken, getCurrentGnosisToken, approveGnosisSafeSpending} from \"./../../utils/web3_transaction_maker.js\"\r\nimport { Context } from './../../store'\r\nvar contractAddresses = require('./../../utils/addresses.json');\r\n\r\nexport default function Gnosis() {\r\n  const classes = GlobalStyles();\r\n  const [msgValue, setMsgValue] = React.useState(0);\r\n  const [contractAddress, setContractAddress] = React.useState(\"\");\r\n  const [selectedToken, setSelectedToken] = React.useState(\"\");\r\n  const [selectedSymbol, setSelectedSymbol] = React.useState(\"\");\r\n  const [currentGasToken, setCurrentGasToken] = React.useState(\"\");\r\n  const [gnosisAddress, setGnosisAddress] = React.useState(\"\");\r\n  const [hasGnosisAddress, setHasGnosisAddress] = React.useState(\"\");\r\n  const [state, dispatch] = useContext(Context);\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    updateGnosisGasToken(state.web3, selectedToken, gnosisAddress, state.chainId);\r\n  }\r\n\r\n  const handleApproveSubmit = (e) => {\r\n    e.preventDefault();\r\n    approveGnosisSafeSpending(state.web3, state.chainId, gnosisAddress);\r\n  }\r\n\r\n  const handleDeployWrapper = (e) => {\r\n    e.preventDefault();\r\n    deployGsveGnosis(state.web3, state.chainId);\r\n  }\r\n\r\n  const handleTokenChange = (e) => {\r\n    try {\r\n      setSelectedToken(e.target.innerText.split(\"-\")[1])\r\n      setSelectedSymbol(e.target.innerText.split(\"-\")[0])\r\n    }\r\n    catch {\r\n      setSelectedToken(\"\")\r\n      setSelectedSymbol(\"\")\r\n    }\r\n  };\r\n  \r\n  var showUi = false\r\n\r\n  if (state.connected && state.account !== \"0x00\") {\r\n    showUi = true\r\n    if (gnosisAddress === \"\" ) {\r\n      gnosisSafeAddress(state.web3, state.chainId).then((value) => {  setGnosisAddress(value) });\r\n    }\r\n\r\n    if (gnosisAddress !== \"\" && hasGnosisAddress === \"\") {\r\n      if (gnosisAddress === \"0x0000000000000000000000000000000000000000\") {\r\n        setHasGnosisAddress(false)\r\n      }\r\n      else if (gnosisAddress.includes(\"0x\")) {\r\n        setHasGnosisAddress(true)\r\n      }\r\n    }\r\n    if(gnosisAddress !== \"\" && currentGasToken === \"\"){\r\n      getCurrentGnosisToken(state.web3, state.chainId, gnosisAddress).then((value) => {  setCurrentGasToken(value) });\r\n    }\r\n  } else{\r\n    showUi = false\r\n  }\r\n\r\n  var contractDiaglog\r\n  var upgradeDialog = []\r\n  var proxyTitle\r\n\r\n  var contractLink = \"\"\r\n  var linkText = \"\"\r\n\r\n  if(state.chainId === 1 || state.chainId === 3 || state.chainId === 4 || state.chainId === 1337){\r\n    linkText = \"View on EtherScan\"\r\n    contractLink = \"https://etherscan.io/address/\"+ contractAddresses[state.chainId]['gnosis'] +\"#code\"\r\n  }\r\n\r\n  var gnosisAddressLink\r\n  if(state.chainID === 4){\r\n    gnosisAddressLink = \"https://rinkeby.gnosis-safe.io/app/#/safes/\" + gnosisAddress + \"/balances\"\r\n  }\r\n  else{\r\n    gnosisAddressLink = \"https://gnosis-safe.io/app/#/safes/\" + gnosisAddress + \"/balances\"\r\n  }\r\n\r\n  \r\n  \r\n  if (hasGnosisAddress) {\r\n    upgradeDialog = []\r\n    contractDiaglog = [<Typography gutterBottom variant=\"h7\" component=\"h4\"> Your Safe is deployed at {gnosisAddress} </Typography>]\r\n    proxyTitle = \"You have an existing GSVE Wrapper\"\r\n    contractDiaglog.push(<Box align=\"center\"><Button color=\"primary\" variant=\"contained\" target=\"_blank\" href={contractLink} className={classes.button}> {linkText}</Button></Box>)\r\n    contractDiaglog.push(<Box align=\"center\"><Button color=\"primary\" variant=\"contained\" target=\"_blank\" href={gnosisAddressLink} className={classes.button}>Load in Gnosis Safe</Button></Box>)\r\n  }\r\n  else {\r\n    if(showUi === true){\r\n      contractDiaglog = [<Typography gutterBottom variant=\"h7\" component=\"h4\"> Deploying your GSVE Gnosis Safe will burn 50 GSVE </Typography>,\r\n                         <Typography gutterBottom variant=\"h7\" component=\"h4\"> {state.account} will be the only Safe Owner and there will be no modules enabled for this safe </Typography>, \r\n                        <Box align=\"center\"><Button color=\"primary\" variant=\"contained\" className={classes.button} onClick={handleDeployWrapper}> Deploy </Button></Box>,\r\n                        <Box align=\"center\"><Button color=\"primary\" variant=\"contained\" target=\"_blank\" href={contractLink} className={classes.button}> {linkText}</Button></Box>]\r\n      proxyTitle = \"Deploy Your GSVE Gnosis Safe\"\r\n    }\r\n    else if(showUi === false){\r\n      contractDiaglog = [<Box align=\"center\"><Button color=\"primary\" variant=\"disabled\" className={classes.button}> Login to deploy </Button></Box>]\r\n      proxyTitle = \"You Aren't Logged In\"\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className={classes.rootPage}>\r\n      <Paper className={classes.paper} component=\"p\">\r\n        <Paper className={classes.headerPaper} component=\"p\">\r\n          <Typography gutterBottom variant=\"h4\" component=\"h4\">\r\n            Gas Save Gnosis\r\n            <Box textAlign='right'>\r\n              <Button color=\"secondary\" variant=\"contained\" href=\"https://docs.gassave.org\">\r\n                Find Out More\r\n                </Button>\r\n            </Box>\r\n          </Typography>\r\n          <Typography align=\"left\" gutterBottom variant=\"h6\" component=\"h4\">\r\n            GSVE Gnosis is a Gas Saving Gnosis Safe\r\n          </Typography>\r\n          <Typography align=\"left\" gutterBottom variant=\"h7\" component=\"h4\">\r\n            It burns gas tokens when you execute transactions using gnosis, saving up to 50% \r\n          </Typography>\r\n          <Typography align=\"left\" gutterBottom variant=\"h7\" component=\"h4\">\r\n            100% compatible with the Gnosis Safe App!\r\n          </Typography>\r\n        </Paper>\r\n\r\n        <Grid container spacing={3} >\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.headerPaper}>\r\n              <Card className={classes.card} variant=\"outlined\">\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h6\" component=\"h4\">\r\n                    {proxyTitle}\r\n                  </Typography>\r\n                  <Divider light />\r\n                  {contractDiaglog}\r\n                </CardContent>\r\n              </Card>\r\n            </Paper>\r\n          </Grid>\r\n\r\n\r\n          {( hasGnosisAddress ===  true) && (\r\n\r\n            <>\r\n            <Grid item xs={12}>\r\n            <Paper className={classes.headerPaper}>\r\n              <Card className={classes.card} variant=\"outlined\">\r\n                <Paper>\r\n                  <Box align=\"center\">\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h4\"> Your Safe Is Currently {currentGasToken} </Typography>\r\n                  <br />\r\n                    <Button type=\"submit\" color=\"primary\" variant=\"contained\" onClick={handleApproveSubmit}> Approve Safe To Burn GasTokens </Button>\r\n                    <br />\r\n                  </Box>\r\n                </Paper>\r\n              </Card>\r\n            </Paper>\r\n\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.headerPaper}>\r\n              <Card className={classes.card} variant=\"outlined\">\r\n                <Paper>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h4\"> Update GasToken used by GSVE Gnosis Safe </Typography>\r\n                  <Box align=\"center\">\r\n                    <form onSubmit={e => { handleSubmit(e) }}>\r\n                      <Autocomplete\r\n                        id=\"country-select-demo\"\r\n                        style={{ width: 400, color: \"white\", background: \"white\" }}\r\n                        options={tokens}\r\n                        classes={{\r\n                          option: classes.option,\r\n                        }}\r\n                        onChange={handleTokenChange}\r\n                        autoHighlight\r\n                        getOptionLabel={(option) => option.label}\r\n                        renderOption={(option) => (\r\n                          <React.Fragment>\r\n                            {option.code} - {option.label}\r\n                          </React.Fragment>\r\n                        )}\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            value={selectedToken}\r\n                            {...params}\r\n                            label=\"Gas Token\"\r\n                            variant=\"filled\"\r\n                            name=\"selectedToken\"\r\n                            inputProps={{\r\n                              ...params.inputProps,\r\n                              autoComplete: 'new-password', // disable autocomplete and autofill\r\n\r\n                            }}\r\n                          />\r\n                        )}\r\n                      />\r\n                      <Button type=\"submit\" color=\"primary\" variant=\"contained\" className={classes.button}> Update Gnosis GasToken </Button>\r\n                    </form>\r\n                  </Box>\r\n                </Paper>\r\n              </Card>\r\n            </Paper>\r\n\r\n          </Grid>\r\n          </>\r\n          )}\r\n\r\n\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst tokens = [\r\n  { code: 'off', label: 'Turn Off', type: \"off\" },\r\n  { code: 'wChi', label: 'Wrapped Chi', type: \"wrap\" },\r\n  { code: 'wGST2', label: 'Wrapped GST2', type: \"wrap\" },\r\n  { code: 'wGST1', label: 'Wrapped GST1', type: \"wrap\" },\r\n  { code: 'Chi', label: 'Chi', type: \"mint\" },\r\n  { code: 'GST2', label: 'Gas Token 2', type: \"mint\" },\r\n  { code: 'GST1', label: 'Gas Token 1', type: \"mint\" },\r\n];","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Paper } from '@material-ui/core';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport GlobalStyles from './../../GlobalStyles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nexport default function Home() {\r\n  const classes = GlobalStyles();\r\n  return (\r\n    <div className={classes.rootPage}>\r\n      <Paper className={classes.headerPaper}>\r\n      <Paper\r\n        id=\"hero\"\r\n        className={classes.paperContainer}\r\n      >\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <Typography gutterBottom variant=\"h1\" component=\"h1\">\r\n          Gas Save\r\n      </Typography>\r\n        <Typography gutterBottom variant=\"h3\" component=\"h3\">\r\n          An Ethereum fee reduction protocol\r\n      </Typography>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} href=\"#/Litepaper/\">View the Litepaper</Button>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} href=\"https://docs.gassave.org/whitepaper/\">Read the Whitepaper</Button>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n      </Paper>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport SyncIcon from '@material-ui/icons/Sync';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport GlobalStyles from './../../GlobalStyles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport { userStakeSize, handleMintWrapAction } from \"./../../utils/web3_transaction_maker.js\"\r\nimport { Context } from './../../store'\r\nvar contractAddresses = require('./../../utils/addresses.json');\r\n\r\nexport default function Mint() {\r\n  const classes = GlobalStyles();\r\n  const [burn, setBurnValue] = React.useState(0);\r\n  //const [earn, setEarnValue] = React.useState(0);\r\n  const [mintValue, setMintValue] = React.useState(100);\r\n  const [selectedToken, setSelectedToken] = React.useState(\"\");\r\n  const [selectedSymbol, setSelectedSymbol] = React.useState(\"\");\r\n  const [type, setType] = React.useState(\"wrap\");\r\n  const [userStake, setUserStake] = React.useState(-1);\r\n  const [userTier, setUserTier] = React.useState(\"\");\r\n  const [mintFee, setMintFee] = React.useState(2);\r\n  const [wrapFee, setWrapFee] = React.useState(2);\r\n\r\n  const [state, dispatch] = useContext(Context);\r\n\r\n  const handleTokenFieldChange = (e) => {\r\n    setMintValue(e.target.value);\r\n  }\r\n\r\n  const validateMintValue = () => {\r\n    if(type === \"mint\"){\r\n      if (mintValue > 100) {\r\n        setMintValue(100);\r\n      }\r\n    }\r\n    else{\r\n      if (mintValue > 10000) {\r\n        setMintValue(10000);\r\n      }\r\n    }\r\n    if (mintValue < 0) {\r\n      setMintValue(0);\r\n    }\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleMintWrapAction(state.web3, type, burn, false, userTier, mintValue, selectedToken, state.chainId)\r\n  }\r\n\r\n  const handleBurnChange = (e) => {\r\n    setBurnValue(e.target.checked)\r\n    //if(e.target.checked === true){\r\n    //  setEarnValue(false)\r\n    //}\r\n  }\r\n\r\n  const handleWrapChange = (e) => {\r\n    setType(e.target.value.toLowerCase())\r\n  }\r\n\r\n  /*\r\n  const handleEarnChange = (e) => {\r\n    setEarnValue(e.target.checked)\r\n  }\r\n  */\r\n\r\n  const handleTokenChange = (e) => {\r\n    try {\r\n      setSelectedToken(e.target.innerText.split(\"-\")[1])\r\n      setSelectedSymbol(e.target.innerText.split(\"-\")[0])\r\n      if (e.target.innerText.includes(\"Wrapped\")) {\r\n        setType(\"wrap\")\r\n      }\r\n      else {\r\n        setType(\"mint\")\r\n      }\r\n\r\n    }\r\n    catch {\r\n      setSelectedToken(\"\")\r\n      setSelectedSymbol(\"\")\r\n    }\r\n  };\r\n\r\n  var showUi = false\r\n  if (state.connected && state.account !== \"0x00\") {\r\n    if (userStake === -1) {\r\n      userStakeSize(state.web3_caller, state.account, state.chainId).then((value) => { setUserStake(value) });\r\n    }\r\n    showUi = true\r\n  }\r\n  else {\r\n    showUi = false\r\n  }\r\n\r\n  validateMintValue()\r\n\r\n  if (userTier === \"\" && userStake !== -1) {\r\n    if (userStake >= 250) {\r\n      setUserTier(1)\r\n      setWrapFee(1)\r\n      setMintFee(1)\r\n    }\r\n    else {\r\n      setUserTier(0)\r\n    }\r\n  }\r\n\r\n  var summary = []\r\n  var fee = 0\r\n  if (type === \"unwrap\") {\r\n\r\n    var mintamount = mintValue\r\n    if(selectedSymbol.includes(\"GST\")){\r\n      mintamount = mintamount / 100\r\n    }\r\n    summary.push(<Typography gutterBottom align=\"left\" variant=\"h8\" component=\"h4\">{\"You will unwrap \" + mintValue.toString() + \" \" + selectedSymbol + \"into \" + mintamount.toString() + \" \" + selectedSymbol.replace(\"w\", \"\")}</Typography>)\r\n  }\r\n  else {\r\n    validateMintValue()\r\n    if (type === \"wrap\") {\r\n      fee = 1 + (Math.floor(mintValue /100) * wrapFee)\r\n\r\n      var mintamount = mintValue\r\n      if(selectedSymbol.includes(\"GST\")){\r\n        mintamount = mintamount / 100\r\n      }\r\n      summary.push(<Typography gutterBottom align=\"left\" variant=\"h8\" component=\"h4\">{\"You will \" + type + \"  \" + mintamount.toString() + \" \" + selectedSymbol.replace(\"w\", \"\") + \" into \" + mintValue.toString() + \" \" + selectedSymbol}</Typography>)\r\n    }\r\n    else {\r\n      fee = mintFee\r\n      var mintamount = mintValue\r\n      if(selectedSymbol.includes(\"GST\")){\r\n        mintamount = mintamount / 100\r\n        fee = fee / 100\r\n      }\r\n      summary.push(<Typography gutterBottom align=\"left\" variant=\"h8\" component=\"h4\">{\"You will \" + type + \" \" + mintamount.toString() + \" \" + selectedSymbol}</Typography>)\r\n    }\r\n    if (burn === true) {\r\n      summary.push(<Typography gutterBottom align=\"left\" variant=\"h8\" component=\"h4\">{\"In the process you will burn 0.25 GSVE\"}</Typography>)\r\n      summary.push(<Typography gutterBottom align=\"left\" variant=\"h8\" component=\"h4\">{\"This will save you the \" + fee + \" \" + selectedSymbol + \" \" + type + \" fee.\"}</Typography>)\r\n    }\r\n    else {\r\n      if(type === \"wrap\"){\r\n        var mintamount = mintValue\r\n        fee = mintFee\r\n        \r\n      }\r\n      summary.push(<Typography gutterBottom align=\"left\" variant=\"h8\" component=\"h4\">{\"You will recieve \" + (mintamount - fee).toString() + \" \" + selectedSymbol}</Typography>)\r\n      summary.push(<Typography gutterBottom align=\"left\" variant=\"h8\" component=\"h4\">{\"The protocol will take a \" + type + \" fee of \" + fee + \" \" + selectedSymbol}</Typography>)\r\n      if (userTier === 0) {\r\n        summary.push(<Typography gutterBottom align=\"left\" variant=\"h8\" component=\"h4\">{\"Stake 250 GSVE to reduce the fee or consider burning GSVE\"}</Typography>)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (type === \"wrap\" || type === \"unwrap\") {\r\n    var wrapToggle = [<Box align=\"center\"> <FormControl component=\"fieldset\"> <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"Wrap\" onChange={handleWrapChange}> <FormControlLabel value=\"Unwrap\" control={<Radio color=\"primary\" />} label=\"Unwrap\" labelPlacement=\"top\" /> <FormControlLabel value=\"Wrap\" control={<Radio color=\"primary\" />} label=\"Wrap\" labelPlacement=\"top\" /> </RadioGroup> </FormControl> </Box>]\r\n  }\r\n  else {\r\n    var wrapToggle = []\r\n  }\r\n\r\n  /*\r\n  var earnBox = [<FormControlLabel\r\n    control={\r\n      <Switch\r\n        checked={earn}\r\n        disabled={burn}\r\n        onChange={handleEarnChange}\r\n        name=\"earn\"\r\n      />\r\n    }\r\n    label=\"Earn GSVE Reward\"\r\n  />]\r\n  */\r\n\r\n  var linkText;\r\n  var contractLink\r\n  if(state.chainId === 1 || state.chainId === 3 || state.chainId === 4 || state.chainId === 1337){\r\n    linkText = \"View on EtherScan\"\r\n    contractLink = \"https://etherscan.io/address/\"+ contractAddresses[state.chainId]['core'] +\"#code\"\r\n  }\r\n\r\n  return (\r\n    <div className={classes.rootPage}>\r\n      <Paper className={classes.paper} component=\"p\">\r\n        <Paper className={classes.headerPaper} component=\"p\">\r\n          <Typography gutterBottom variant=\"h4\" component=\"h4\">\r\n            Mint & Wrap\r\n            <Box textAlign='right'>\r\n              <Button color=\"secondary\" variant=\"contained\" href=\"https://docs.gassave.org\">\r\n                Find Out More\r\n                </Button>\r\n            </Box>\r\n          </Typography>\r\n          <Typography align=\"left\" gutterBottom variant=\"h6\" component=\"h4\">\r\n            Use this interface to mint and wrap gas tokens.\r\n          </Typography>\r\n          <Typography align=\"left\" gutterBottom variant=\"h7\" component=\"h4\">\r\n            For more detail about each token, visit the Gas Station.\r\n          </Typography>\r\n        </Paper>\r\n\r\n        <Grid container spacing={1} >\r\n          <Grid item xs={12} sm={12} md={12} xl={3}>  </Grid>\r\n          <Grid item xs={12} sm={12} md={12} xl={6}>\r\n            <Paper className={classes.headerPaper}>\r\n              <Card className={classes.card} variant=\"outlined\">\r\n                <form onSubmit={e => { handleSubmit(e) }}>\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant=\"h6\" component=\"h4\">\r\n                      Mint/Wrap/Unwrap Gas Tokens\r\n                  </Typography>\r\n                    <FormGroup>\r\n                      <Box align=\"center\">\r\n                        <FormControlLabel\r\n                          control={<Switch checked={burn} onChange={handleBurnChange} name=\"burn\" />}\r\n                          label=\"Burn GSVE for Discount\"\r\n                        />\r\n                      </Box>\r\n                    </FormGroup>\r\n                    <br />\r\n                    <Box align=\"center\">\r\n                      <Autocomplete\r\n                        id=\"country-select-demo\"\r\n                        style={{ width: 400, color: \"white\", background: \"white\" }}\r\n                        options={tokens}\r\n                        classes={{\r\n                          option: classes.option,\r\n                        }}\r\n                        onChange={handleTokenChange}\r\n                        autoHighlight\r\n                        getOptionLabel={(option) => option.label}\r\n                        renderOption={(option) => (\r\n                          <React.Fragment>\r\n                            {option.code} - {option.label}\r\n                          </React.Fragment>\r\n                        )}\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Gas Token\"\r\n                            variant=\"filled\"\r\n                            name=\"selectedToken\"\r\n                            inputProps={{\r\n                              ...params.inputProps,\r\n                              autoComplete: 'new-password', // disable autocomplete and autofill\r\n\r\n                            }}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </Box>\r\n                    <br />\r\n                    <Box align=\"center\">\r\n                      <TextField id=\"mount\" variant=\"outlined\" label=\"Tokens\" type=\"number\" value={mintValue} inputProps={{ min: \"0\", max: \"10000\" }} style={{ width: 400, color: \"white\", background: \"white\" }} onChange={handleTokenFieldChange} />\r\n                    </Box>\r\n                    <br />\r\n                    {wrapToggle}\r\n                    <br />\r\n                    {showUi && (\r\n                      <>\r\n                        <Paper variant=\"outlined\">\r\n                          <Typography gutterBottom variant=\"h6\" component=\"h4\">\r\n                            Summary\r\n                      </Typography>\r\n                          {summary}\r\n                        </Paper >\r\n\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.button} > Submit </Button>\r\n                      </>\r\n                    )}\r\n                    {showUi === false && (\r\n                      <Button variant=\"disabled\" color=\"secondary\" className={classes.button} > Login to Mint </Button>\r\n                    )}\r\n\r\n                    <Box align=\"center\">\r\n                      <Button color=\"primary\" variant=\"contained\" target=\"_blank\" href={contractLink} className={classes.button}> {linkText}</Button>\r\n                    </Box>\r\n                  </CardContent>\r\n                </form>\r\n              </Card>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst tokens = [\r\n  { code: 'wChi', label: 'Wrapped Chi', type: \"wrap\" },\r\n  { code: 'wGST2', label: 'Wrapped GST2', type: \"wrap\" },\r\n  { code: 'wGST1', label: 'Wrapped GST1', type: \"wrap\" },\r\n  { code: 'Chi', label: 'Chi', type: \"mint\" },\r\n  { code: 'GST2', label: 'Gas Token 2', type: \"mint\" },\r\n  { code: 'GST1', label: 'Gas Token 1', type: \"mint\" },\r\n];","import React, { useContext } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport clsx from 'clsx';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport GlobalStyles from './../../../GlobalStyles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { Context } from './../../../store'\r\nimport { feePoolBalance } from \"./../../../utils/web3_transaction_maker.js\"\r\n\r\nexport default function ImgMediaCard(props) {\r\n  const classes = GlobalStyles();\r\n  const [state, dispatch] = useContext(Context);\r\n  const [amountAvailable, setAmountAvailable] = React.useState(-1);\r\n  var tokenName = props.tokenName;\r\n  var tokenImage = props.tokenImage;\r\n  var tokenSymbol = props.tokenSymbol;\r\n\r\n  if (state.connected && state.account !== \"0x00\") {\r\n    if (amountAvailable === -1) {\r\n      feePoolBalance(state.web3_caller, tokenName, state.chainId).then((value) => { setAmountAvailable(value) });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.headerPaper}>\r\n      <Card className={classes.root} variant=\"outlined\">\r\n        <CardContent>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                {tokenName}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={4}> </Grid>\r\n            <Grid item xs={4}>\r\n              <CardMedia\r\n                component=\"img\"\r\n                height=\"80\"\r\n                objectFit='contain'\r\n                image={\"images/tokens/\" + tokenImage + \".png\"}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}> </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {amountAvailable + \" \" + tokenSymbol + \" Available\"}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Paper>\r\n  );\r\n}\r\n\r\n\r\n","import React, { useContext } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SyncIcon from '@material-ui/icons/Sync';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport GlobalStyles from './../../GlobalStyles';\r\nimport ImgMediaCard from \"./components/Card.js\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport { userStakeSize, feePoolBalance, handleClaim, getClaimTime } from \"./../../utils/web3_transaction_maker.js\"\r\nimport { Context } from './../../store'\r\nimport { findAllByDisplayValue } from '@testing-library/dom';\r\n\r\n\r\nexport default function Claim() {\r\n  const classes = GlobalStyles();\r\n  const [selectedToken, setSelectedToken] = React.useState(\"\");\r\n  const [selectedSymbol, setSelectedSymbol] = React.useState(\"\");\r\n  const [userStake, setUserStake] = React.useState(-1);\r\n  const [userTier, setUserTier] = React.useState(\"\");\r\n  const [sliderValue, setSliderValue] = React.useState(1);\r\n  const [claimTime, setClaimTime] = React.useState(\"\");\r\n  const [showClaimUi, setShowClaimUi] = React.useState(\"\");\r\n\r\n  const [state, dispatch] = useContext(Context);\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    setSliderValue(newValue);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setSliderValue(event.target.value === '' ? '' : Number(event.target.value));\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (sliderValue < 0) {\r\n      setSliderValue(0);\r\n    } else if (sliderValue > 100) {\r\n      setSliderValue(100);\r\n    }\r\n\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleClaim(state.web3, sliderValue, selectedToken, state.chainId)\r\n  }\r\n\r\n  const handleTokenChange = (e) => {\r\n    try {\r\n      setSelectedToken(e.target.innerText.split(\"-\")[1])\r\n      setSelectedSymbol(e.target.innerText.split(\"-\")[0])\r\n    }\r\n    catch {\r\n      setSelectedToken(\"\")\r\n      setSelectedSymbol(\"\")\r\n    }\r\n  };\r\n\r\n  \r\n  var showUi = false\r\n  var login = []\r\n\r\n  if (state.connected && state.account !== \"0x00\") {\r\n    showUi = true\r\n    if (userStake === -1) {\r\n      userStakeSize(state.web3_caller, state.account, state.chainId).then((value) => { setUserStake(value) });\r\n      login = []\r\n    }\r\n  }\r\n  else {\r\n    showUi = false\r\n    login = [<Typography align=\"left\" gutterBottom variant=\"h8\" component=\"h4\"> Login to claim tokens</Typography>]\r\n    if (userStake !== -1) {\r\n      setUserStake(-1)\r\n      setUserTier(\"\")\r\n    }\r\n  }\r\n\r\n  if (userTier === \"\" && userStake !== -1) {\r\n    if (userStake >= 1000) {\r\n      if(claimTime === \"\"){\r\n        getClaimTime(state.web3_caller, state.chainId).then((value) => { setClaimTime(value) });\r\n      }\r\n      else{\r\n        setShowClaimUi(true)\r\n        setUserTier([<Typography align=\"left\" gutterBottom variant=\"h8\" component=\"h4\"> You are a tier 2 Staker.</Typography>,\r\n        <Typography align=\"left\" gutterBottom variant=\"h8\" component=\"h4\"> You can claim gas tokens from the fee pool</Typography>,\r\n        <Typography align=\"left\" gutterBottom variant=\"h8\" component=\"h4\"> {claimTime}</Typography>])\r\n      }\r\n    }\r\n    else if (userStake >= 250) {\r\n      setShowClaimUi(false)\r\n      setUserTier([<Typography align=\"left\" gutterBottom variant=\"h8\" component=\"h4\"> You are a tier 1 Staker.</Typography>,\r\n      <Typography align=\"left\" gutterBottom variant=\"h8\" component=\"h4\"> Stake {1000 - userStake} more to reach tier 2. This will let you claim from the gas token fee pool.</Typography>])\r\n    }\r\n    else {\r\n      setShowClaimUi(false)\r\n      setUserTier([<Typography align=\"left\" gutterBottom variant=\"h8\" component=\"h4\"> You are a tier 0 Staker.</Typography>,\r\n      <Typography align=\"left\" gutterBottom variant=\"h8\" component=\"h4\">  Stake {1000 - userStake} more to reach tier 2. This will let you claim from the gas token fee pool.</Typography>])\r\n    }\r\n  }\r\n\r\n  var summary\r\n\r\n  if (showClaimUi) {\r\n    var claimAmount = sliderValue\r\n    if (selectedSymbol.includes(\"GST\")) {\r\n      claimAmount = claimAmount / 100\r\n    }\r\n    summary = [<Typography gutterBottom variant=\"h6\" component=\"h4\"> Summary  </Typography>, <Typography gutterBottom align=\"left\" variant=\"h8\" component=\"h4\">{\"You will claim \" + claimAmount.toString() + \" \" + selectedSymbol + \" by burning  \" + (sliderValue * 0.1).toString().slice(0, 3) + \" GSVE\"}</Typography>]\r\n  }\r\n\r\n  var submitButton;\r\n  if (showClaimUi) {\r\n    submitButton = [<Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.button} > Submit </Button>]\r\n  }\r\n  else {\r\n    submitButton = [<Button variant=\"disabled\" color=\"primary\" className={classes.button} > Stake more GSVE to claim </Button>]\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.rootPage}>\r\n      <Paper className={classes.paper} component=\"p\">\r\n        <Grid container spacing={2} >\r\n          <Grid item xs={12}>\r\n            <div className=\"drawerPaper\">\r\n              <Paper className={classes.headerPaper}>\r\n                <Typography gutterBottom variant=\"h4\" component=\"h4\">\r\n                  Claim Gas Tokens\r\n                  <Box textAlign='right'>\r\n                    <Button color=\"secondary\" variant=\"contained\" href=\"https://docs.gassave.org\">\r\n                      Find Out More\r\n                      </Button>\r\n                  </Box>\r\n                </Typography>\r\n                <Typography align=\"left\" gutterBottom variant=\"h6\" component=\"h4\">\r\n                  Stake 1,000 GSVE to become tier 2\r\n                </Typography>\r\n                <Typography align=\"left\" gutterBottom variant=\"h6\" component=\"h4\">\r\n                  Burn GSVE to take tokens from the Fee Pool\r\n                </Typography>\r\n                <br />\r\n              </Paper>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Card className={classes.headerPaper} variant=\"outlined\">\r\n              <Paper>\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h4\">\r\n                    Tokens Available\r\n                  </Typography>\r\n                  <Divider light />\r\n                  {userTier}\r\n                  <Divider light />\r\n                </CardContent>\r\n\r\n                <Grid container spacing={1}  >\r\n                  <Grid item xs={12} sm={6} md={2} xl={2}>\r\n                    <ImgMediaCard tokenName=\"Wrapped Chi\"\r\n                      tokenImage=\"wchi\"\r\n                      tokenSymbol=\"wChi\" />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={2} xl={2}>\r\n                    <ImgMediaCard tokenName=\"Wrapped GST2\"\r\n                      tokenImage=\"wGST2\"\r\n                      tokenSymbol=\"wGST2\" />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={2} xl={2}>\r\n                    <ImgMediaCard tokenName=\"Wrapped GST1\"\r\n                      tokenImage=\"wGST1\"\r\n                      tokenSymbol=\"wGST1\" />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={2} xl={2}>\r\n                    <ImgMediaCard tokenName=\"Chi\"\r\n                      tokenImage=\"chi\"\r\n                      tokenSymbol=\"Chi\" />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={2} xl={2}>\r\n                    <ImgMediaCard tokenName=\"Gas Token 2\"\r\n                      tokenImage=\"GST2\"\r\n                      tokenSymbol=\"GST2\" />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={2} xl={2}>\r\n                    <ImgMediaCard tokenName=\"Gas Token 1\"\r\n                      tokenImage=\"GST1\"\r\n                      tokenSymbol=\"GST1\" />\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Card>\r\n          </Grid>\r\n          {showUi && (\r\n            <Grid container spacing={1} >\r\n              <Grid item xs={12} sm={12} md={12} xl={4}> </Grid>\r\n              <Grid item xs={12} sm={12} md={12} xl={4}>\r\n                <Paper className={classes.headerPaper}>\r\n                  <Card className={classes.card} variant=\"outlined\">\r\n                    <form onSubmit={e => { handleSubmit(e) }}>\r\n                      <CardContent>\r\n                        <Typography gutterBottom variant=\"h6\" component=\"h4\">\r\n                          Claim Tokens\r\n                  </Typography>\r\n                        <Box align=\"center\">\r\n                          <Autocomplete\r\n                            id=\"country-select-demo\"\r\n                            style={{ width: 400, color: \"white\", background: \"white\" }}\r\n                            options={tokens}\r\n                            classes={{\r\n                              option: classes.option,\r\n                            }}\r\n                            onChange={handleTokenChange}\r\n                            autoHighlight\r\n                            getOptionLabel={(option) => option.label}\r\n                            renderOption={(option) => (\r\n                              <React.Fragment>\r\n                                {option.code} - {option.label}\r\n                              </React.Fragment>\r\n                            )}\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Gas Token\"\r\n                                variant=\"filled\"\r\n                                name=\"selectedToken\"\r\n                                inputProps={{\r\n                                  ...params.inputProps,\r\n                                  autoComplete: 'new-password', // disable autocomplete and autofill\r\n\r\n                                }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Box>\r\n                        <br />\r\n                        <br />\r\n                        <Typography align=\"left\" gutterBottom variant=\"h8\" component=\"h4\">\r\n                          Number of tokens:\r\n                  </Typography>\r\n                        <Box align=\"center\">\r\n                          <Slider\r\n                            className={classes.inputSlider}\r\n                            defaultValue={1}\r\n                            min={1}\r\n                            max={5}\r\n                            aria-labelledby=\"input-slider\"\r\n                            step={1}\r\n                            onChange={handleSliderChange}\r\n                            value={typeof sliderValue === 'number' ? sliderValue : 0}\r\n                          />\r\n                          <Input\r\n                            value={sliderValue}\r\n                            margin=\"dense\"\r\n                            className={classes.input}\r\n                            onChange={handleInputChange}\r\n                            onBlur={handleBlur}\r\n                            inputProps={{\r\n                              step: 1,\r\n                              min: 1,\r\n                              max: 5,\r\n                              type: 'number',\r\n                              'aria-labelledby': 'input-slider',\r\n                            }}\r\n                          />\r\n                        </Box>\r\n                        <Paper variant=\"outlined\">\r\n\r\n                          {summary}\r\n                        </Paper >\r\n                        <br />\r\n                        {submitButton}\r\n                      </CardContent>\r\n                    </form>\r\n                  </Card>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\nconst tokens = [\r\n  { code: 'wChi', label: 'Wrapped Chi', type: \"wrap\" },\r\n  { code: 'wGST2', label: 'Wrapped GST2', type: \"wrap\" },\r\n  { code: 'wGST1', label: 'Wrapped GST1', type: \"wrap\" },\r\n  { code: 'Chi', label: 'Chi', type: \"mint\" },\r\n  { code: 'GST2', label: 'Gas Token 2', type: \"mint\" },\r\n  { code: 'GST1', label: 'Gas Token 1', type: \"mint\" },\r\n];","import React, { useState } from 'react';\r\nimport { Document, Page, pdfjs } from 'react-pdf';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport GlobalStyles from './../../GlobalStyles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nexport default function Litepaper() {\r\n  const classes = GlobalStyles();\r\n\r\n  const [numPages, setNumPages] = useState(null);\r\n\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n  }\r\n\r\n  function removeTextLayerOffset() {\r\n    const textLayers = document.querySelectorAll('.react-pdf__Page__textContent');\r\n    textLayers.forEach((layer) => {\r\n      const { style } = layer;\r\n      style.display = 'none';\r\n    });\r\n  }\r\n  return (\r\n\r\n    <div className={classes.rootPage}>\r\n      <Paper className={classes.headerPaper}>\r\n        <Grid container spacing={3} >\r\n          <Grid item xs={0}></Grid>\r\n          <Grid item xs={12}>\r\n            <Document\r\n              file=\"./GSVE_Litepaper.pdf\"\r\n              options={{ workerSrc: \"/pdf.worker.js\" }}\r\n              onLoadSuccess={onDocumentLoadSuccess}\r\n            >\r\n              {Array.from(new Array(numPages), (el, index) => (\r\n                <Page width={(window.innerWidth * 0.8)} key={`page_${index + 1}`} pageNumber={index + 1} onLoadSuccess={removeTextLayerOffset} />\r\n              ))}\r\n            </Document>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}","import React, { useContext } from 'react';\r\nimport clsx from 'clsx';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\nimport LocalGasStationIcon from '@material-ui/icons/LocalGasStation';\r\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport DescriptionTwoToneIcon from '@material-ui/icons/DescriptionTwoTone';\r\nimport SyncIcon from '@material-ui/icons/Sync';\r\nimport FireplaceIcon from '@material-ui/icons/Fireplace';\r\n\r\nimport { connect, disconnect, getAccount, getWeb3Caller, getChainID } from \"./../utils/web3_handler.js\"\r\n\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Stake from \"./../pages/Stake/Stake.js\"\r\nimport Station from \"./../pages/Station/Station.js\"\r\nimport Deployer from \"./../pages/Deployer/Deployer.js\"\r\nimport Saver from \"./../pages/Saver/Saver.js\"\r\nimport Gnosis from \"./../pages/Gnosis/Gnosis.js\"\r\nimport Home from '../pages/Home/Home.js';\r\nimport Mint from \"./../pages/Mint/Mint.js\"\r\nimport Claim from \"./../pages/Claim/Claim.js\"\r\nimport Litepaper from \"../pages/Litepaper/Litepaper.js\"\r\nimport WalletConnectPage from \"./../pages/WalletConnectPage/WalletConnectPage.tsx\"\r\n\r\nimport GasSaveLogo from './../logo.svg';\r\nimport GasSaveLogoGrey from './../logoGrey.svg';\r\nimport { Context } from './../store'\r\nimport GlobalStyles from './../GlobalStyles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nexport default function MiniDrawer() {\r\n  const classes = GlobalStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(true);\r\n  const [network, setNetwork] = React.useState(1);\r\n  const [walletChainId, setWalletChainId] = React.useState(0);\r\n  var gasSavePrice = \"$0.01\"\r\n\r\n  const [state, dispatch] = useContext(Context);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n    checkConnection()\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n    checkConnection()\r\n  };\r\n\r\n  const handleConnection = () => {\r\n    var web3 = connect()\r\n    web3.then((value) => { dispatch({ type: 'web3_connected', payload: value }) });\r\n    web3.then((value) => { dispatch({ type: 'web3_caller_connected', payload: value }) });\r\n    dispatch({ type: 'set_connected', payload: true })\r\n    checkConnection()\r\n  }\r\n\r\n  const handleDisonnection = () => {\r\n    dispatch({ type: 'web3_disconnected', payload: \"\" })\r\n    disconnect()\r\n  }\r\n\r\n  const checkConnection = () => {\r\n    if (state.web3 !== null) {\r\n      if (state.account === \"0x00\") {\r\n        var account = getAccount(state.web3)\r\n        account.then((value) => { dispatch({ type: 'set_account', payload: value }) });\r\n      }\r\n    }\r\n  }\r\n\r\n  const connectCaller = () => {\r\n    if (state.web3_caller === null) {\r\n      dispatch({ type: 'web3_caller_connected', payload: getWeb3Caller(state.chainId) })\r\n    }\r\n  }\r\n\r\n  const updateCaller = () => {\r\n    dispatch({ type: 'web3_caller_connected', payload: getWeb3Caller(state.chainId) })\r\n  }\r\n\r\n  const updateChainId = () => {\r\n    if(state.connected && state.account !==\"0x00\"){\r\n      getChainID(state.web3).then((value) => { setWalletChainId(value) })\r\n    }\r\n  }\r\n\r\n  updateChainId()\r\n  connectCaller()\r\n\r\n  const handleNetworkChange = (event) => {\r\n    dispatch({ type: 'chainId', payload: event.target.value })\r\n    setNetwork(event.target.value);\r\n    updateChainId()\r\n    updateCaller()\r\n  };\r\n\r\n  var connectbutton = []\r\n\r\n  if(state.connected !== true){\r\n  connectbutton.push(<><FormControl className={classes.formControl}>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      value={network}\r\n                      defaultValue={1}\r\n                      onChange={handleNetworkChange}\r\n                      classes={{\r\n                        root: classes.headerPaper,\r\n                      }} \r\n                    >\r\n                      <MenuItem value={1}>Network: Ethereum</MenuItem>\r\n                      <MenuItem value={4}>Network: Rinkeby</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                  </> )\r\n                  }\r\n\r\n  if (!state.connected) {\r\n    connectbutton.push(<Button color=\"inherit\" onClick={() => [handleConnection()]}> <AccountBalanceWalletIcon />  Connect To Wallet</Button>)\r\n  }\r\n  else {\r\n    if (state.account === \"0x00\") {\r\n      connectbutton.push(<IconButton color=\"inherit\" aria-label=\"open drawer\" onClick={checkConnection}><AccountBalanceWalletIcon /><SyncIcon /></IconButton>)\r\n    }\r\n    else {\r\n      connectbutton.push(<Typography variant=\"h10\" noWrap> <AccountBalanceWalletIcon /> {state.account} </Typography>)\r\n    }\r\n    connectbutton.push(<Button color=\"inherit\" onClick={() => [handleDisonnection()]}> <ExitToAppIcon /> Disconnect </Button>)\r\n  }\r\n\r\n  const menuText = ['Home', 'Stake', 'Gas Station', \"Claim Gas Tokens\", \"Mint & Wrap Gas\"]\r\n  const menuLinks = ['#/', '#/stake', '#/station', \"#/claim\", \"#/mint\"]\r\n  const menuIcons = [<HomeIcon />, <AccountBalanceIcon />, <LocalGasStationIcon />, <GrainIcon />, <InvertColorsIcon />]\r\n\r\n  const middleText = [\"GSVE Deployer\", \"GSVE Smart Wrapper\", \"GSVE Gnosis\"]\r\n  const middleLinks = [\"#/deployer\", \"#/saver\", \"#/gnosis\"]\r\n  const middleIcons = [<NoteAddIcon />, <WhatshotIcon />, <FireplaceIcon />,]\r\n\r\n  const bottomText = [\"Litepaper\", \"Whitepaper\", \"Docs\",]// (\"GSVE Eth: \" + gasSavePrice )]\r\n  const bottomLinks = [\"#/litepaper\", \"https://docs.gassave.org/whitepaper/\", \"https://docs.gassave.org\",]// \"https://app.uniswap.org/#/swap?outputCurrency=\"]\r\n  const bottomIcons = [<DescriptionTwoToneIcon />, <DescriptionIcon />, <SubjectIcon />]//, <img src={GasSaveLogoGrey} alt=\"\" width=\"32\" />]\r\n\r\n//https://api.etherscan.io/api?module=gastracker&action=gasoracle&apikey=YourApiKeyToken\r\n\r\n  var alert = []\r\n  var networkName;\r\n  if (state.connected && state.account === \"0x00\") {\r\n    checkConnection()\r\n  }\r\n\r\n  if(state.chainId !== walletChainId && state.account !== \"0x00\"){\r\n    if(state.connected){\r\n      alert = [<Alert severity=\"warning\">The network selected is not the same as the wallet network. Disconnect, change network and then log back in.</Alert>]\r\n    }\r\n    if (state.chainId === 1){\r\n      networkName = \" Ethereum\"\r\n    }\r\n    if (state.chainId === 3){\r\n      networkName = \" Ethereum Ropsten\"\r\n    }\r\n    if (state.chainId === 4){\r\n      networkName = \" Ethereum Rinkeby\"\r\n    }\r\n    if (state.chainId === 1337){\r\n      networkName = \" Development\"\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h5\" noWrap>\r\n            <img src={GasSaveLogo} alt=\"\" /> Gas Save  {networkName}\r\n          </Typography> \r\n          <div className={classes.toolbarButtons}>\r\n            {connectbutton}\r\n          </div>\r\n          \r\n        </Toolbar>\r\n        {alert}\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {menuText.map((text, index) => (\r\n              <ListItem button component=\"a\" href={menuLinks[index]}>\r\n              <Link href={menuLinks[index]}>\r\n                <ListItemIcon>{menuIcons[index]}</ListItemIcon>\r\n              </Link>\r\n              <Link href={menuLinks[index]}>\r\n                <ListItemText primary={text} />\r\n              </Link>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n\r\n        <Divider light />\r\n        <List>\r\n          {middleText.map((text, index) => (\r\n            <ListItem button component=\"a\" href={middleLinks[index]}>\r\n              <Link href={middleLinks[index]}>\r\n                <ListItemIcon>{middleIcons[index]}</ListItemIcon>\r\n              </Link>\r\n              <Link href={middleLinks[index]}>\r\n                <ListItemText primary={text} />\r\n              </Link>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <Divider light />\r\n\r\n        <List>\r\n          {bottomText.map((text, index) => (\r\n            <ListItem button component=\"a\" href={bottomLinks[index]}>\r\n              <Link href={bottomLinks[index]}>\r\n                <ListItemIcon>{bottomIcons[index]}</ListItemIcon>\r\n              </Link>\r\n              <Link href={bottomLinks[index]}>\r\n                <ListItemText primary={text} />\r\n              </Link>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <Switch>\r\n          <Route path=\"/stake\">\r\n            <Stake />\r\n          </Route>\r\n          <Route path=\"/station\">\r\n            <Station />\r\n          </Route>\r\n          <Route path=\"/deployer\">\r\n            <Deployer />\r\n          </Route>\r\n          <Route path=\"/mint\">\r\n            <Mint />\r\n          </Route>\r\n          <Route path=\"/claim\">\r\n            <Claim />\r\n          </Route>\r\n          <Route path=\"/saver\">\r\n            <Saver />\r\n          </Route>\r\n          <Route path=\"/gnosis\">\r\n            <Gnosis />\r\n          </Route>\r\n          <Route path=\"/litepaper\">\r\n            <Litepaper />  \r\n          </Route> \r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </div>\r\n    \r\n  );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Store from './store'\r\nimport MiniDrawer from \"./components/appbar.js\"\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { green, orange, black } from '@material-ui/core/colors';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#3949ab',\r\n    },\r\n    secondary: {\r\n      main: '#01579b',\r\n    },\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Store>\r\n        <div className=\"App\">\r\n          < MiniDrawer />\r\n        </div>\r\n      </Store>\r\n    </ThemeProvider>\r\n  );\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n//import reportWebVitals from './reportWebVitals';\r\nimport { HashRouter } from \"react-router-dom\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter hashType=\"slash\">\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.73b90973.svg\";"],"sourceRoot":""}